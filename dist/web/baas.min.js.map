{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///baas.min.js","webpack:///webpack/bootstrap 24ef9db576f3a64a996e","webpack:///./src/util.js","webpack:///./~/buffer/index.js","webpack:///./src/common.js","webpack:///./src/errors.js","webpack:///./~/mongodb-extjson/index.js","webpack:///./~/mongodb-extjson/lib/bson/index.js","webpack:///./~/mongodb-extjson/lib/bson/long.js","webpack:///./~/mongodb-extjson/lib/bson/shared.js","webpack:///./src/client.js","webpack:///./src/auth.js","webpack:///./src/index.js","webpack:///./src/services/mongodb/collection.js","webpack:///./src/services/mongodb/db.js","webpack:///./src/services/mongodb/mongodb_service.js","webpack:///./src/storage.js","webpack:///./~/base64-js/index.js","webpack:///./~/fetch-everywhere/fetch-npm-browserify.js","webpack:///./~/ieee754/index.js","webpack:///./~/isarray/index.js","webpack:///./~/mongodb-extjson/lib/bson/binary.js","webpack:///./~/mongodb-extjson/lib/bson/code.js","webpack:///./~/mongodb-extjson/lib/bson/db_ref.js","webpack:///./~/mongodb-extjson/lib/bson/decimal128.js","webpack:///./~/mongodb-extjson/lib/bson/double.js","webpack:///./~/mongodb-extjson/lib/bson/int_32.js","webpack:///./~/mongodb-extjson/lib/bson/max_key.js","webpack:///./~/mongodb-extjson/lib/bson/min_key.js","webpack:///./~/mongodb-extjson/lib/bson/objectid.js","webpack:///./~/mongodb-extjson/lib/bson/regexp.js","webpack:///./~/mongodb-extjson/lib/bson/symbol.js","webpack:///./~/mongodb-extjson/lib/bson/timestamp.js","webpack:///./~/mongodb-extjson/lib/ext_json.js","webpack:///./~/process/browser.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","deprecate","fn","msg","deprecated","alreadyWarned","console","warn","apply","arguments","setPrototypeOf","global","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","Error","allocUnsafe","from","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","byteLength","actual","write","slice","fromArrayLike","array","byteOffset","obj","isBuffer","len","copy","buffer","isnan","type","isArray","data","toString","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","foo","subarray","e","poolSize","_augment","Symbol","species","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","equals","inspect","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","JSONTYPE","USER_AUTH_KEY","STATE_KEY","REFRESH_TOKEN_KEY","BAAS_ERROR_KEY","BAAS_LINK_KEY","IMPERSONATION_ACTIVE_KEY","IMPERSONATION_USER_KEY","IMPERSONATION_REAL_USER_AUTH_KEY","USER_AUTH_COOKIE_NAME","DEFAULT_BAAS_SERVER_URL","checkStatus","response","status","error","statusText","makeFetchArgs","method","body","init","headers","Accept","Content-Type","cors","parseRedirectFragment","fragment","ourState","vars","split","result","ua","stateValid","lastError","shouldBreak","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","pair","pairParts","decodeURIComponent","JSON","parse","window","atob","theirState","err","return","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","BaasError","_Error","message","_this","getPrototypeOf","captureStackTrace","stack","ExtJSON","BSON","Binary","Code","DBRef","Decimal128","Double","Int32","Long","MaxKey","MinKey","ObjectID","BSONRegExp","Timestamp","low","high","_bsontype","low_","high_","toInt","toNumber","TWO_PWR_32_DBL_","getLowBitsUnsigned","$numberLong","opt_radix","radix","isZero","isNegative","MIN_VALUE","radixLong","fromNumber","div","rem","multiply","subtract","negate","radixToPower","remDiv","intval","digits","getHighBits","getLowBits","getNumBitsAbs","bit","isOdd","other","notEquals","lessThan","lessThanOrEqual","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","add","ONE","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","fromBits","ZERO","TWO_PWR_24_","NEG_ONE","halfThis","shiftRight","approx","shiftLeft","log2","ceil","log","LN2","delta","approxRes","approxRem","modulo","and","or","xor","numBits","shiftRightUnsigned","fromInt","cachedObj","INT_CACHE_","TWO_PWR_63_DBL_","MAX_VALUE","lowBits","highBits","charAt","substring","power","TWO_PWR_16_DBL_","TWO_PWR_24_DBL_","TWO_PWR_31_DBL_","TWO_PWR_48_DBL_","TWO_PWR_64_DBL_","btoa","input","block","charCode","idx","map","chars","output","InvalidCharacterError","bs","bc","_interopRequireDefault","default","toQueryString","ErrUnauthorized","ErrInvalidSession","ErrAuthProviderNotFound","Admin","BaasClient","_typeof","_createClass","defineProperties","props","descriptor","key","protoProps","staticProps","_auth","_auth2","_mongodb_service","_mongodb_service2","_errors","_common","common","newObj","_mongodbExtjson","_mongodbExtjson2","EJSON","parts","encodeURIComponent","clientAppID","options","baseUrl","appUrl","authUrl","authManager","handleRedirect","handleCookie","providerName","redirectUrl","location","getOAuthLoginURL","anonymousAuth","authedId","_do","refreshOnFailure","useRefreshToken","then","clear","stages","responseDecoder","strict","responseEncoder","stringify","decoder","encoder","text","resource","_this2","assign","noAuth","auth","Promise","reject","url","fetchArgs","token","getRefreshToken","accessToken","Authorization","queryParams","fetch","resolve","json","errorCode","_refreshToken","_this3","isImpersonatingUser","refreshImpersonation","setAccessToken","client","_this4","keys","_get","_post","apiKey","keyId","remove","_delete","enable","_put","disable","groupId","_this5","query","defaults","app","appID","doc","X-Baas-Unsafe","users","filter","user","uid","logout","sandbox","executePipeline","userId","user_id","authProviders","provider","authType","authName","update","values","varName","pipelines","pipeline","logs","apiKeys","services","service","svc","setConfig","rules","rule","ruleId","incomingWebhooks","incomingWebhook","incomingWebhookId","_this6","startImpersonation","stopImpersonation","_storage","Auth","rootUrl","authDataStorage","createStorage","protocol","host","pathname","currAuth","refreshToken","_error","hash","redirectFragment","redirectState","history","replaceState","pageRootUrl","splitCookies","document","cookie","sepIdx","cookieVal","uaCookie","getCookie","state","generateState","encodeURI","username","password","credentials","clearImpersonation","rt","item","_id","catch","realUserAuth","alpha","random","_client","insertOp","docs","db","action","args","items","database","collection","insertedIds","deleteOp","deletedCount","removed","updateOp","findOp","projection","project","_util","Collection","singleDoc","multi","count","upsert","_collection","_collection2","DB","getCollection","_db","_db2","MongoDBService","baasClient","serviceName","databaseName","getDB","getDb","localStorage","Storage","sessionStorage","MemoryStorage","_data","store","getItem","setItem","removeItem","placeHoldersCount","b64","tmp","placeHolders","Arr","L","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","extraBytes","len2","globalObj","bind","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","abs","convert","integer","subType","sub_type","position","BSON_BINARY_SUBTYPE_DEFAULT","BUFFER_SIZE","writeStringToArray","put","byte_value","decoded_byte","asRaw","convertArraytoUtf8BinaryString","$binary","$type","format","startIndex","endIndex","SUBTYPE_DEFAULT","SUBTYPE_FUNCTION","SUBTYPE_BYTE_ARRAY","SUBTYPE_UUID_OLD","SUBTYPE_UUID","SUBTYPE_MD5","SUBTYPE_USER_DEFINED","scope","$code","$scope","namespace","oid","$ref","$id","$db","EXPONENT_BIAS","NAN_BUFFER","reverse","INF_NEGATIVE_BUFFER","INF_POSITIVE_BUFFER","isDigit","divideu128","DIVISOR","_rem","quotient","multiply64x2","left","right","leftHigh","leftLow","rightHigh","rightLow","productHigh","productMid","productMid2","productLow","uhleft","uhright","sawRadix","foundNonZero","significantDigits","nDigitsRead","nDigits","radixPosition","firstNonZero","nDigitsStored","digitsInsert","firstDigit","lastDigit","exponent","significandHigh","significandLow","biasedExponent","index","stringMatch","infMatch","nanMatch","digitsString","endOfString","roundDigit","roundBit","dIdx","significand","dec","midh","midl","combination","biased_exponent","significand_digits","scientific_exponent","significand_msb","k","is_zero","significand128","least_digits","radix_position","$numberDecimal","valueOf","$numberDouble","$numberInt","$maxKey","$minKey","process","MACHINE_ID","checkForHexRegExp","RegExp","hexTable","decodeLookup","convertToHex","hexString","id","valid","isValid","createFromHexString","generate","toHexString","cacheHexString","__id","getInc","time","Date","now","pid","inc","$oid","otherId","getTimestamp","timestamp","setTime","sizeof","test","createPk","createFromTime","pattern","$regex","$options","$symbol","$timestamp","deseralizeValue","bson","date","bufferConstructor","parseFloat","JS_INT_MIN","JS_INT_MAX","BSON_INT32_MIN","BSON_INT32_MAX","serializeArray","_array","serializeValue","$date","getTime","serializeDocument","_doc","BSONTypes","bsonModule","extend","reducer","indents","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask","g","Function","eval","normalizeName","normalizeValue","iteratorFor","shift","support","iterable","Headers","forEach","append","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","view","bufferClone","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","isArrayBufferView","rejected","decode","normalizeMethod","upcased","toUpperCase","methods","Request","mode","referrer","form","parseHeaders","rawHeaders","line","Response","bodyInit","ok","viewClasses","DataView","oldValue","has","callback","thisArg","entries","clone","redirectStatuses","redirect","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"baas.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"baas\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"baas\"] = factory();\n\telse\n\t\troot[\"baas\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"baas\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"baas\"] = factory();\n\telse\n\t\troot[\"baas\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deprecate = deprecate;\nfunction deprecate(fn, msg) {\n  var alreadyWarned = false;\n  function deprecated() {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      console.warn('DeprecationWarning: ' + msg);\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  Object.setPrototypeOf(deprecated, fn);\n  if (fn.prototype) {\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(15)\nvar ieee754 = __webpack_require__(17)\nvar isArray = __webpack_require__(18)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(33)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar JSONTYPE = exports.JSONTYPE = 'application/json';\nvar USER_AUTH_KEY = exports.USER_AUTH_KEY = '_baas_ua';\nvar REFRESH_TOKEN_KEY = exports.REFRESH_TOKEN_KEY = '_baas_rt';\nvar STATE_KEY = exports.STATE_KEY = '_baas_state';\nvar BAAS_ERROR_KEY = exports.BAAS_ERROR_KEY = '_baas_error';\nvar BAAS_LINK_KEY = exports.BAAS_LINK_KEY = '_baas_link';\nvar IMPERSONATION_ACTIVE_KEY = exports.IMPERSONATION_ACTIVE_KEY = '_baas_impers_active';\nvar IMPERSONATION_USER_KEY = exports.IMPERSONATION_USER_KEY = '_baas_impers_user';\nvar IMPERSONATION_REAL_USER_AUTH_KEY = exports.IMPERSONATION_REAL_USER_AUTH_KEY = '_baas_impers_real_ua';\nvar USER_AUTH_COOKIE_NAME = exports.USER_AUTH_COOKIE_NAME = 'baas_ua';\nvar DEFAULT_BAAS_SERVER_URL = exports.DEFAULT_BAAS_SERVER_URL = 'https://master.baas-dev.10gen.cc';\n\nvar checkStatus = exports.checkStatus = function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  var error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n};\n\nvar makeFetchArgs = exports.makeFetchArgs = function makeFetchArgs(method, body) {\n  var init = {\n    method: method,\n    headers: { 'Accept': JSONTYPE, 'Content-Type': JSONTYPE }\n  };\n\n  if (body) {\n    init.body = body;\n  }\n  init.cors = true;\n  return init;\n};\n\nvar parseRedirectFragment = exports.parseRedirectFragment = function parseRedirectFragment(fragment, ourState) {\n  // After being redirected from oauth, the URL will look like:\n  // https://todo.examples.master.baas-dev.10gen.cc/#_baas_state=...&_baas_ua=...\n  // This function parses out baas-specific tokens from the fragment and\n  // builds an object describing the result.\n  var vars = fragment.split('&');\n  var result = { ua: null, found: false, stateValid: false, lastError: null };\n  var shouldBreak = false;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = vars[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var pair = _step.value;\n\n      var pairParts = pair.split('=');\n      var pairKey = decodeURIComponent(pairParts[0]);\n      switch (pairKey) {\n        case BAAS_ERROR_KEY:\n          result.lastError = decodeURIComponent(pairParts[1]);\n          result.found = true;\n          shouldBreak = true;\n          break;\n        case USER_AUTH_KEY:\n          result.ua = JSON.parse(window.atob(decodeURIComponent(pairParts[1])));\n          result.found = true;\n          continue;\n        case BAAS_LINK_KEY:\n          result.found = true;\n          continue;\n        case STATE_KEY:\n          result.found = true;\n          var theirState = decodeURIComponent(pairParts[1]);\n          if (ourState && ourState === theirState) {\n            result.stateValid = true;\n          }\n          continue;\n        default:\n          continue;\n      }\n\n      if (shouldBreak) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return result;\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Creates a new BaasError\n *\n * @class\n * @augments Error\n * @param {String} message The error message.\n * @param {Object} code The error code.\n * @return {BaasError} A BaasError instance.\n */\nvar BaasError = exports.BaasError = function (_Error) {\n  _inherits(BaasError, _Error);\n\n  function BaasError(message, code) {\n    _classCallCheck(this, BaasError);\n\n    var _this = _possibleConstructorReturn(this, (BaasError.__proto__ || Object.getPrototypeOf(BaasError)).call(this, message));\n\n    _this.name = 'BaasError';\n    _this.message = message;\n    if (code !== undefined) {\n      _this.code = code;\n    }\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(_this, _this.constructor);\n    } else {\n      _this.stack = new Error(message).stack;\n    }\n    return _this;\n  }\n\n  return BaasError;\n}(Error);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ExtJSON = __webpack_require__(31);\nExtJSON.BSON = __webpack_require__(5);\n\nmodule.exports = ExtJSON;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Binary = __webpack_require__(19);\nvar Code = __webpack_require__(20);\nvar DBRef = __webpack_require__(21);\nvar Decimal128 = __webpack_require__(22);\nvar Double = __webpack_require__(23);\nvar Int32 = __webpack_require__(24);\nvar Long = __webpack_require__(6);\nvar MaxKey = __webpack_require__(25);\nvar MinKey = __webpack_require__(26);\nvar ObjectID = __webpack_require__(27);\nvar BSONRegExp = __webpack_require__(28);\nvar Symbol = __webpack_require__(29);\nvar Timestamp = __webpack_require__(30);\n\nmodule.exports = {\n  Binary: Binary, Code: Code, DBRef: DBRef, Decimal128: Decimal128, Double: Double,\n  Int32: Int32, Long: Long, MaxKey: MaxKey, MinKey: MinKey, ObjectID: ObjectID,\n  BSONRegExp: BSONRegExp, Symbol: Symbol, Timestamp: Timestamp\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Long.\n * @param {number} high the high (signed) 32 bits of the Long.\n * @return {Long}\n */\nvar Long = function(low, high) {\n  this._bsontype = 'Long';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0;  // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0;  // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nLong.prototype.toInt = function() {\n  return this.low_;\n}\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nLong.prototype.toNumber = function() {\n  return this.high_ * Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n}\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {String} the JSON representation.\n */\nLong.prototype.toJSON = function() {\n  return { $numberLong: this.toString() };\n}\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {String} the textual representation of this value.\n */\nLong.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Long.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nLong.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nLong.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nLong.prototype.getLowBitsUnsigned = function() {\n  return (this.low_ >= 0) ?\n      this.low_ : Long.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Long.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Long.\n */\nLong.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ != 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) != 0) {\n        break;\n      }\n    }\n    return this.high_ != 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {Boolean} whether this value is zero.\n */\nLong.prototype.isZero = function() {\n  return this.high_ == 0 && this.low_ == 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {Boolean} whether this value is negative.\n */\nLong.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {Boolean} whether this value is odd.\n */\nLong.prototype.isOdd = function() {\n  return (this.low_ & 1) == 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long equals the other\n */\nLong.prototype.equals = function(other) {\n  return (this.high_ == other.high_) && (this.low_ == other.low_);\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long does not equal the other.\n */\nLong.prototype.notEquals = function(other) {\n  return (this.high_ != other.high_) || (this.low_ != other.low_);\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is less than the other.\n */\nLong.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is less than or equal to the other.\n */\nLong.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is greater than the other.\n */\nLong.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is greater than or equal to the other.\n */\nLong.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nLong.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Long} the negation of this value.\n */\nLong.prototype.negate = function() {\n  if (this.equals(Long.MIN_VALUE)) {\n    return Long.MIN_VALUE;\n  } else {\n    return this.not().add(Long.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Long.\n *\n * @method\n * @param {Long} other Long to add to this one.\n * @return {Long} the sum of this and the given Long.\n */\nLong.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Long.\n *\n * @method\n * @param {Long} other Long to subtract from this.\n * @return {Long} the difference of this and the given Long.\n */\nLong.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Long.\n *\n * @method\n * @param {Long} other Long to multiply with this.\n * @return {Long} the product of this and the other.\n */\nLong.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Long.ZERO;\n  } else if (other.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    return other.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Long.TWO_PWR_24_) &&\n      other.lessThan(Long.TWO_PWR_24_)) {\n    return Long.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Long} other Long by which to divide.\n * @return {Long} this Long divided by the given one.\n */\nLong.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    if (other.equals(Long.ONE) ||\n        other.equals(Long.NEG_ONE)) {\n      return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Long.MIN_VALUE)) {\n      return Long.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Long.ZERO)) {\n        return other.isNegative() ? Long.ONE : Long.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate().div(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Long.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Long.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Long.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Long.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Long} other Long by which to mod.\n * @return {Long} this Long modulo the given one.\n */\nLong.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Long} the bitwise-NOT of this value.\n */\nLong.prototype.not = function() {\n  return Long.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to AND.\n * @return {Long} the bitwise-AND of this and the other.\n */\nLong.prototype.and = function(other) {\n  return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to OR.\n * @return {Long} the bitwise-OR of this and the other.\n */\nLong.prototype.or = function(other) {\n  return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to XOR.\n * @return {Long} the bitwise-XOR of this and the other.\n */\nLong.prototype.xor = function(other) {\n  return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the left by the given amount.\n */\nLong.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Long.fromBits(\n                 low << numBits,\n                 (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Long.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount.\n */\nLong.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >> numBits);\n    } else {\n      return Long.fromBits(\n                 high >> (numBits - 32),\n                 high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nLong.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >>> numBits);\n    } else if (numBits == 32) {\n      return Long.fromBits(high, 0);\n    } else {\n      return Long.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Long.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Long(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Long.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Long.ZERO;\n  } else if (value <= -Long.TWO_PWR_63_DBL_) {\n    return Long.MIN_VALUE;\n  } else if (value + 1 >= Long.TWO_PWR_63_DBL_) {\n    return Long.MAX_VALUE;\n  } else if (value < 0) {\n    return Long.fromNumber(-value).negate();\n  } else {\n    return new Long(\n               (value % Long.TWO_PWR_32_DBL_) | 0,\n               (value / Long.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Long} the corresponding Long value.\n */\nLong.fromBits = function(lowBits, highBits) {\n  return new Long(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {String} str the textual representation of the Long.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Long} the corresponding Long value.\n */\nLong.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Long.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 8));\n\n  var result = Long.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Long.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Long.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Long.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nLong.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Long} */\nLong.ZERO = Long.fromInt(0);\n\n/** @type {Long} */\nLong.ONE = Long.fromInt(1);\n\n/** @type {Long} */\nLong.NEG_ONE = Long.fromInt(-1);\n\n/** @type {Long} */\nLong.MAX_VALUE =\n    Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\n/** @type {Long} */\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Long}\n * @ignore\n */\nLong.TWO_PWR_24_ = Long.fromInt(1 << 24);\n\nmodule.exports = Long;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction btoa(input) {\n  var str = String(input);\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars, output = '';\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3/4);\n    if (charCode > 0xFF) {\n      throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n};\n\nfunction atob(input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n};\n\nmodule.exports = {\n  btoa: btoa, atob: atob,\n}\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toQueryString = exports.ErrUnauthorized = exports.ErrInvalidSession = exports.ErrAuthProviderNotFound = exports.Admin = exports.BaasClient = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global window, fetch */\n/* eslint no-labels: ['error', { 'allowLoop': true }] */\n\n\n__webpack_require__(16);\n\nvar _auth = __webpack_require__(9);\n\nvar _auth2 = _interopRequireDefault(_auth);\n\nvar _mongodb_service = __webpack_require__(13);\n\nvar _mongodb_service2 = _interopRequireDefault(_mongodb_service);\n\nvar _errors = __webpack_require__(3);\n\nvar _common = __webpack_require__(2);\n\nvar common = _interopRequireWildcard(_common);\n\nvar _mongodbExtjson = __webpack_require__(4);\n\nvar _mongodbExtjson2 = _interopRequireDefault(_mongodbExtjson);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EJSON = new _mongodbExtjson2.default();\n\nvar ErrAuthProviderNotFound = 'AuthProviderNotFound';\nvar ErrInvalidSession = 'InvalidSession';\nvar ErrUnauthorized = 'Unauthorized';\n\nvar toQueryString = function toQueryString(obj) {\n  var parts = [];\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      parts.push(encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]));\n    }\n  }\n  return parts.join('&');\n};\n\n/**\n * Create a new BaasClient instance.\n *\n * @class\n * @return {BaasClient} a BaasClient instance.\n */\n\nvar BaasClient = function () {\n  function BaasClient(clientAppID, options) {\n    _classCallCheck(this, BaasClient);\n\n    var baseUrl = common.DEFAULT_BAAS_SERVER_URL;\n    if (options && options.baseUrl) {\n      baseUrl = options.baseUrl;\n    }\n    this.appUrl = baseUrl + '/api/public/v1.0';\n    this.authUrl = baseUrl + '/api/public/v1.0/auth';\n    if (clientAppID) {\n      this.appUrl = baseUrl + '/api/client/v1.0/app/' + clientAppID;\n      this.authUrl = this.appUrl + '/auth';\n    }\n    this.authManager = new _auth2.default(this.authUrl);\n    this.authManager.handleRedirect();\n    this.authManager.handleCookie();\n  }\n\n  /**\n   * Sends the user to the OAuth flow for the specified third-party service.\n   *\n   * @param {*} providerName The OAuth provider name.\n   * @param {*} redirectUrl The redirect URL to use after the flow completes.\n   */\n\n\n  _createClass(BaasClient, [{\n    key: 'authWithOAuth',\n    value: function authWithOAuth(providerName, redirectUrl) {\n      window.location.replace(this.authManager.getOAuthLoginURL(providerName, redirectUrl));\n    }\n\n    /**\n     * Generates a URL that can be used to initiate an OAuth login flow with the specified OAuth provider.\n     *\n     * @param {*} providerName The OAuth provider name.\n     * @param {*} redirectUrlThe redirect URL to use after the flow completes.\n     */\n\n  }, {\n    key: 'getOAuthLoginURL',\n    value: function getOAuthLoginURL(providerName, redirectUrl) {\n      return this.authManager.getOAuthLoginURL(providerName, redirectUrl);\n    }\n\n    /**\n     * Logs in as an anonymous user.\n     */\n\n  }, {\n    key: 'anonymousAuth',\n    value: function anonymousAuth() {\n      return this.authManager.anonymousAuth();\n    }\n\n    /**\n     *  @return {String} Returns the currently authed user's ID.\n     */\n\n  }, {\n    key: 'authedId',\n    value: function authedId() {\n      return this.authManager.authedId();\n    }\n\n    /**\n     * @return {Object} Returns the currently authed user's authentication information.\n     */\n\n  }, {\n    key: 'auth',\n    value: function auth() {\n      return this.authManager.get();\n    }\n\n    /**\n     * @return {*} Returns any error from the BaaS authentication system.\n     */\n\n  }, {\n    key: 'authError',\n    value: function authError() {\n      return this.authManager.error();\n    }\n\n    /**\n     * Ends the session for the current user.\n     */\n\n  }, {\n    key: 'logout',\n    value: function logout() {\n      var _this = this;\n\n      return this._do('/auth', 'DELETE', { refreshOnFailure: false, useRefreshToken: true }).then(function () {\n        return _this.authManager.clear();\n      });\n    }\n\n    /**\n     * Factory method for accessing BaaS services.\n     *\n     * @method\n     * @param {String} type The service type [mongodb, {String}]\n     * @param {String} name The service name.\n     * @return {Object} returns a named service.\n     */\n\n  }, {\n    key: 'service',\n    value: function service(type, name) {\n      if (this.constructor !== BaasClient) {\n        throw new _errors.BaasError('`service` is a factory method, do not use `new`');\n      }\n\n      if (type === 'mongodb') {\n        return new _mongodb_service2.default(this, name);\n      }\n\n      throw new _errors.BaasError('Invalid service type specified: ' + type);\n    }\n\n    /**\n     * Executes a service pipeline.\n     *\n     * @param {Array} stages Stages to process.\n     * @param {Object} [options] Additional options to pass to the execution context.\n     */\n\n  }, {\n    key: 'executePipeline',\n    value: function executePipeline(stages) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var responseDecoder = function responseDecoder(d) {\n        return EJSON.parse(d, { strict: false });\n      };\n      var responseEncoder = function responseEncoder(d) {\n        return EJSON.stringify(d);\n      };\n\n      if (options.decoder) {\n        if (typeof options.decoder !== 'function') {\n          throw new Error('decoder option must be a function, but \"' + _typeof(options.decoder) + '\" was provided');\n        }\n        responseDecoder = options.decoder;\n      }\n\n      if (options.encoder) {\n        if (typeof options.encoder !== 'function') {\n          throw new Error('encoder option must be a function, but \"' + _typeof(options.encoder) + '\" was provided');\n        }\n        responseEncoder = options.encoder;\n      }\n\n      return this._do('/pipeline', 'POST', { body: responseEncoder(stages) }).then(function (response) {\n        return response.text();\n      }).then(function (body) {\n        return responseDecoder(body);\n      });\n    }\n  }, {\n    key: '_do',\n    value: function _do(resource, method, options) {\n      var _this2 = this;\n\n      options = Object.assign({}, {\n        refreshOnFailure: true,\n        useRefreshToken: false\n      }, options);\n\n      if (!options.noAuth) {\n        if (this.auth() === null) {\n          return Promise.reject(new _errors.BaasError('Must auth first', ErrUnauthorized));\n        }\n      }\n\n      var url = '' + this.appUrl + resource;\n      var fetchArgs = common.makeFetchArgs(method, options.body);\n\n      if (!!options.headers) {\n        Object.assign(fetchArgs.headers, options.headers);\n      }\n\n      if (!options.noAuth) {\n        var token = options.useRefreshToken ? this.authManager.getRefreshToken() : this.auth().accessToken;\n        fetchArgs.headers.Authorization = 'Bearer ' + token;\n      }\n\n      if (options.queryParams) {\n        url = url + '?' + toQueryString(options.queryParams);\n      }\n\n      return fetch(url, fetchArgs).then(function (response) {\n        // Okay: passthrough\n        if (response.status >= 200 && response.status < 300) {\n          return Promise.resolve(response);\n        }\n\n        if (response.headers.get('Content-Type') === common.JSONTYPE) {\n          return response.json().then(function (json) {\n            // Only want to try refreshing token when there's an invalid session\n            if ('errorCode' in json && json.errorCode === ErrInvalidSession) {\n              if (!options.refreshOnFailure) {\n                _this2.authManager.clear();\n                var _error = new _errors.BaasError(json.error, json.errorCode);\n                _error.response = response;\n                _error.json = json;\n                throw _error;\n              }\n\n              return _this2._refreshToken().then(function () {\n                options.refreshOnFailure = false;\n                return _this2._do(resource, method, options);\n              });\n            }\n\n            var error = new _errors.BaasError(json.error, json.errorCode);\n            error.response = response;\n            error.json = json;\n            return Promise.reject(error);\n          });\n        }\n\n        var error = new Error(response.statusText);\n        error.response = response;\n\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: '_refreshToken',\n    value: function _refreshToken() {\n      var _this3 = this;\n\n      if (this.authManager.isImpersonatingUser()) {\n        return this.authManager.refreshImpersonation(this);\n      }\n\n      return this._do('/auth/newAccessToken', 'POST', { refreshOnFailure: false, useRefreshToken: true }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return _this3.authManager.setAccessToken(json.accessToken);\n      });\n    }\n  }]);\n\n  return BaasClient;\n}();\n\nvar Admin = function () {\n  function Admin(baseUrl) {\n    _classCallCheck(this, Admin);\n\n    this.client = new BaasClient('', { baseUrl: baseUrl });\n  }\n\n  _createClass(Admin, [{\n    key: '_do',\n    value: function _do(url, method, options) {\n      return this.client._do(url, method, options).then(function (response) {\n        return response.json();\n      });\n    }\n  }, {\n    key: '_get',\n    value: function _get(url, queryParams) {\n      return this._do(url, 'GET', { queryParams: queryParams });\n    }\n  }, {\n    key: '_put',\n    value: function _put(url, options) {\n      return this._do(url, 'PUT', options);\n    }\n  }, {\n    key: '_delete',\n    value: function _delete(url) {\n      return this._do(url, 'DELETE');\n    }\n  }, {\n    key: '_post',\n    value: function _post(url, body) {\n      return this._do(url, 'POST', { body: JSON.stringify(body) });\n    }\n  }, {\n    key: 'profile',\n    value: function profile() {\n      var _this4 = this;\n\n      var root = this;\n      return {\n        keys: function keys() {\n          return {\n            list: function list() {\n              return root._get('/profile/keys');\n            },\n            create: function create(key) {\n              return root._post('/profile/keys');\n            },\n            apiKey: function apiKey(keyId) {\n              return {\n                get: function get() {\n                  return root._get('/profile/keys/' + keyId);\n                },\n                remove: function remove() {\n                  return _this4._delete('/profile/keys/' + keyId);\n                },\n                enable: function enable() {\n                  return root._put('/profile/keys/' + keyId + '/enable');\n                },\n                disable: function disable() {\n                  return root._put('/profile/keys/' + keyId + '/disable');\n                }\n              };\n            }\n          };\n        }\n      };\n    }\n\n    /* Examples of how to access admin API with this client:\n     *\n     * List all apps\n     *    a.apps('580e6d055b199c221fcb821c').list()\n     *\n     * Fetch app under name 'planner'\n     *    a.apps('580e6d055b199c221fcb821c').app('planner').get()\n     *\n     * List services under the app 'planner'\n     *    a.apps('580e6d055b199c221fcb821c').app('planner').services().list()\n     *\n     * Delete a rule by ID\n     *    a.apps('580e6d055b199c221fcb821c').app('planner').services().service('mdb1').rules().rule('580e6d055b199c221fcb821d').remove()\n     *\n     */\n\n  }, {\n    key: 'apps',\n    value: function apps(groupId) {\n      var _this5 = this;\n\n      var root = this;\n      return {\n        list: function list() {\n          return root._get('/groups/' + groupId + '/apps');\n        },\n        create: function create(data, options) {\n          var query = options && options.defaults ? '?defaults=true' : '';\n          return root._post('/groups/' + groupId + '/apps' + query, data);\n        },\n\n        app: function app(appID) {\n          return {\n            get: function get() {\n              return root._get('/groups/' + groupId + '/apps/' + appID);\n            },\n            remove: function remove() {\n              return root._delete('/groups/' + groupId + '/apps/' + appID);\n            },\n            replace: function replace(doc) {\n              return root._put('/groups/' + groupId + '/apps/' + appID, {\n                headers: { 'X-Baas-Unsafe': appID },\n                body: JSON.stringify(doc)\n              });\n            },\n\n            users: function users() {\n              return {\n                list: function list(filter) {\n                  return _this5._get('/groups/' + groupId + '/apps/' + appID + '/users', filter);\n                },\n                user: function user(uid) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/groups/' + groupId + '/apps/' + appID + '/users/' + uid);\n                    },\n                    logout: function logout() {\n                      return _this5._put('/groups/' + groupId + '/apps/' + appID + '/users/' + uid + '/logout');\n                    }\n                  };\n                }\n              };\n            },\n\n            sandbox: function sandbox() {\n              return {\n                executePipeline: function executePipeline(data, userId) {\n                  return _this5._do('/groups/' + groupId + '/apps/' + appID + '/sandbox/pipeline', 'POST', { body: JSON.stringify(data), queryParams: { user_id: userId } });\n                }\n              };\n            },\n\n            authProviders: function authProviders() {\n              return {\n                create: function create(data) {\n                  return _this5._post('/groups/' + groupId + '/apps/' + appID + '/authProviders', data);\n                },\n                list: function list() {\n                  return _this5._get('/groups/' + groupId + '/apps/' + appID + '/authProviders');\n                },\n                provider: function provider(authType, authName) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/groups/' + groupId + '/apps/' + appID + '/authProviders/' + authType + '/' + authName);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/groups/' + groupId + '/apps/' + appID + '/authProviders/' + authType + '/' + authName);\n                    },\n                    update: function update(data) {\n                      return _this5._post('/groups/' + groupId + '/apps/' + appID + '/authProviders/' + authType + '/' + authName, data);\n                    }\n                  };\n                }\n              };\n            },\n            values: function values() {\n              return {\n                list: function list() {\n                  return _this5._get('/groups/' + groupId + '/apps/' + appID + '/values');\n                },\n                value: function value(varName) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/groups/' + groupId + '/apps/' + appID + '/values/' + varName);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/groups/' + groupId + '/apps/' + appID + '/values/' + varName);\n                    },\n                    create: function create(data) {\n                      return _this5._post('/groups/' + groupId + '/apps/' + appID + '/values/' + varName, data);\n                    },\n                    update: function update(data) {\n                      return _this5._post('/groups/' + groupId + '/apps/' + appID + '/values/' + varName, data);\n                    }\n                  };\n                }\n              };\n            },\n            pipelines: function pipelines() {\n              return {\n                list: function list() {\n                  return _this5._get('/groups/' + groupId + '/apps/' + appID + '/pipelines');\n                },\n                pipeline: function pipeline(varName) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/groups/' + groupId + '/apps/' + appID + '/pipelines/' + varName);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/groups/' + groupId + '/apps/' + appID + '/pipelines/' + varName);\n                    },\n                    create: function create(data) {\n                      return _this5._post('/groups/' + groupId + '/apps/' + appID + '/pipelines/' + varName, data);\n                    },\n                    update: function update(data) {\n                      return _this5._post('/groups/' + groupId + '/apps/' + appID + '/pipelines/' + varName, data);\n                    }\n                  };\n                }\n              };\n            },\n            logs: function logs() {\n              return {\n                get: function get(filter) {\n                  return _this5._get('/groups/' + groupId + '/apps/' + appID + '/logs', filter);\n                }\n              };\n            },\n            apiKeys: function apiKeys() {\n              return {\n                list: function list() {\n                  return _this5._get('/groups/' + groupId + '/apps/' + appID + '/keys');\n                },\n                create: function create(data) {\n                  return _this5._post('/groups/' + groupId + '/apps/' + appID + '/keys', data);\n                },\n                apiKey: function apiKey(key) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/groups/' + groupId + '/apps/' + appID + '/keys/' + key);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/groups/' + groupId + '/apps/' + appID + '/keys/' + key);\n                    },\n                    enable: function enable() {\n                      return _this5._put('/groups/' + groupId + '/apps/' + appID + '/keys/' + key + '/enable');\n                    },\n                    disable: function disable() {\n                      return _this5._put('/groups/' + groupId + '/apps/' + appID + '/keys/' + key + '/disable');\n                    }\n                  };\n                }\n              };\n            },\n            services: function services() {\n              return {\n                list: function list() {\n                  return _this5._get('/groups/' + groupId + '/apps/' + appID + '/services');\n                },\n                create: function create(data) {\n                  return _this5._post('/groups/' + groupId + '/apps/' + appID + '/services', data);\n                },\n                service: function service(svc) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/groups/' + groupId + '/apps/' + appID + '/services/' + svc);\n                    },\n                    update: function update(data) {\n                      return _this5._post('/groups/' + groupId + '/apps/' + appID + '/services/' + svc, data);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/groups/' + groupId + '/apps/' + appID + '/services/' + svc);\n                    },\n                    setConfig: function setConfig(data) {\n                      return _this5._post('/groups/' + groupId + '/apps/' + appID + '/services/' + svc + '/config', data);\n                    },\n\n                    rules: function rules() {\n                      return {\n                        list: function list() {\n                          return _this5._get('/groups/' + groupId + '/apps/' + appID + '/services/' + svc + '/rules');\n                        },\n                        create: function create(data) {\n                          return _this5._post('/groups/' + groupId + '/apps/' + appID + '/services/' + svc + '/rules');\n                        },\n                        rule: function rule(ruleId) {\n                          return {\n                            get: function get() {\n                              return _this5._get('/groups/' + groupId + '/apps/' + appID + '/services/' + svc + '/rules/' + ruleId);\n                            },\n                            update: function update(data) {\n                              return _this5._post('/groups/' + groupId + '/apps/' + appID + '/services/' + svc + '/rules/' + ruleId, data);\n                            },\n                            remove: function remove() {\n                              return _this5._delete('/groups/' + groupId + '/apps/' + appID + '/services/' + svc + '/rules/' + ruleId);\n                            }\n                          };\n                        }\n                      };\n                    },\n\n                    incomingWebhooks: function incomingWebhooks() {\n                      return {\n                        list: function list() {\n                          return _this5._get('/groups/' + groupId + '/apps/' + appID + '/services/' + svc + '/incomingWebhooks');\n                        },\n                        create: function create(data) {\n                          return _this5._post('/groups/' + groupId + '/apps/' + appID + '/services/' + svc + '/incomingWebhooks');\n                        },\n                        incomingWebhook: function incomingWebhook(incomingWebhookId) {\n                          return {\n                            get: function get() {\n                              return _this5._get('/groups/' + groupId + '/apps/' + appID + '/services/' + svc + '/incomingWebhooks/' + incomingWebhookId);\n                            },\n                            update: function update(data) {\n                              return _this5._post('/groups/' + groupId + '/apps/' + appID + '/services/' + svc + '/incomingWebhooks/' + incomingWebhookId, data);\n                            },\n                            remove: function remove() {\n                              return _this5._delete('/groups/' + groupId + '/apps/' + appID + '/services/' + svc + '/incomingWebhooks/' + incomingWebhookId);\n                            }\n                          };\n                        }\n                      };\n                    }\n                  };\n                }\n              };\n            }\n          };\n        }\n      };\n    }\n  }, {\n    key: '_admin',\n    value: function _admin() {\n      var _this6 = this;\n\n      return {\n        logs: function logs() {\n          return {\n            get: function get(filter) {\n              return _this6._do('/admin/logs', 'GET', { useRefreshToken: true, queryParams: filter });\n            }\n          };\n        },\n        users: function users() {\n          return {\n            list: function list(filter) {\n              return _this6._do('/admin/users', 'GET', { useRefreshToken: true, queryParams: filter });\n            },\n            user: function user(uid) {\n              return {\n                logout: function logout() {\n                  return _this6._do('/admin/users/' + uid + '/logout', 'PUT', { useRefreshToken: true });\n                }\n              };\n            }\n          };\n        }\n      };\n    }\n  }, {\n    key: '_isImpersonatingUser',\n    value: function _isImpersonatingUser() {\n      return this.client.authManager.isImpersonatingUser();\n    }\n  }, {\n    key: '_startImpersonation',\n    value: function _startImpersonation(userId) {\n      return this.client.authManager.startImpersonation(this.client, userId);\n    }\n  }, {\n    key: '_stopImpersonation',\n    value: function _stopImpersonation() {\n      return this.client.authManager.stopImpersonation();\n    }\n  }]);\n\n  return Admin;\n}();\n\nexports.BaasClient = BaasClient;\nexports.Admin = Admin;\nexports.ErrAuthProviderNotFound = ErrAuthProviderNotFound;\nexports.ErrInvalidSession = ErrInvalidSession;\nexports.ErrUnauthorized = ErrUnauthorized;\nexports.toQueryString = toQueryString;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global window, document, fetch */\n\nvar _storage = __webpack_require__(14);\n\nvar _errors = __webpack_require__(3);\n\nvar _common = __webpack_require__(2);\n\nvar common = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Auth = function () {\n  function Auth(rootUrl) {\n    _classCallCheck(this, Auth);\n\n    this.rootUrl = rootUrl;\n    this.authDataStorage = (0, _storage.createStorage)('localStorage');\n  }\n\n  _createClass(Auth, [{\n    key: 'pageRootUrl',\n    value: function pageRootUrl() {\n      return [window.location.protocol, '//', window.location.host, window.location.pathname].join('');\n    }\n\n    // The state we generate is to be used for any kind of request where we will\n    // complete an authentication flow via a redirect. We store the generate in\n    // a local storage bound to the app's origin. This ensures that any time we\n    // receive a redirect, there must be a state parameter and it must match\n    // what we ourselves have generated. This state MUST only be sent to\n    // a trusted BaaS endpoint in order to preserve its integrity. BaaS will\n    // store it in some way on its origin (currently a cookie stored on this client)\n    // and use that state at the end of an auth flow as a parameter in the redirect URI.\n\n  }, {\n    key: 'setAccessToken',\n    value: function setAccessToken(token) {\n      var currAuth = this.get();\n      currAuth.accessToken = token;\n      currAuth.refreshToken = this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n      this.set(currAuth);\n    }\n  }, {\n    key: 'error',\n    value: function error() {\n      return this._error;\n    }\n  }, {\n    key: 'handleRedirect',\n    value: function handleRedirect() {\n      if (typeof window === 'undefined') {\n        // This means we're running in some environment other\n        // than a browser - so handling a redirect makes no sense here.\n        return;\n      }\n      if (!window.location || !window.location.hash) {\n        return;\n      }\n\n      var ourState = this.authDataStorage.get(common.STATE_KEY);\n      var redirectFragment = window.location.hash.substring(1);\n      var redirectState = common.parseRedirectFragment(redirectFragment, ourState);\n      if (redirectState.lastError) {\n        console.error('BaasClient: error from redirect: ' + redirectState.lastError);\n        this._error = redirectState.lastError;\n        window.history.replaceState(null, '', this.pageRootUrl());\n        return;\n      }\n\n      if (!redirectState.found) {\n        return;\n      }\n\n      this.authDataStorage.remove(common.STATE_KEY);\n      if (!redirectState.stateValid) {\n        console.error('BaasClient: state values did not match!');\n        window.history.replaceState(null, '', this.pageRootUrl());\n        return;\n      }\n\n      if (!redirectState.ua) {\n        console.error('BaasClient: no UA value was returned from redirect!');\n        return;\n      }\n\n      // If we get here, the state is valid - set auth appropriately.\n      this.set(redirectState.ua);\n      window.history.replaceState(null, '', this.pageRootUrl());\n    }\n  }, {\n    key: 'getCookie',\n    value: function getCookie(name) {\n      var splitCookies = document.cookie.split(' ');\n      for (var i = 0; i < splitCookies.length; i++) {\n        var cookie = splitCookies[0];\n        var sepIdx = cookie.indexOf('=');\n        var cookieName = cookie.substring(0, sepIdx);\n        if (cookieName === name) {\n          var cookieVal = cookie.substring(sepIdx + 1, cookie.length);\n          if (cookieVal[cookieVal.length - 1] === ';') {\n            return cookieVal.substring(0, cookie.length - 1);\n          }\n          return cookieVal;\n        }\n      }\n    }\n  }, {\n    key: 'handleCookie',\n    value: function handleCookie() {\n      if (typeof window === 'undefined' || typeof document === 'undefined') {\n        // This means we're running in some environment other\n        // than a browser - so handling a cookie makes no sense here.\n        return;\n      }\n      if (!document.cookie) {\n        return;\n      }\n\n      var uaCookie = this.getCookie(common.USER_AUTH_COOKIE_NAME);\n      if (!uaCookie) {\n        return;\n      }\n      document.cookie = common.USER_AUTH_COOKIE_NAME + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT;';\n\n      var ua = JSON.parse(window.atob(uaCookie));\n      this.set(ua);\n    }\n  }, {\n    key: 'getOAuthLoginURL',\n    value: function getOAuthLoginURL(providerName, redirectUrl) {\n      if (redirectUrl === undefined) {\n        redirectUrl = this.pageRootUrl();\n      }\n\n      var state = Auth.generateState();\n      this.authDataStorage.set(common.STATE_KEY, state);\n      var result = this.rootUrl + '/oauth2/' + providerName + '?redirect=' + encodeURI(redirectUrl) + '&state=' + state;\n      return result;\n    }\n  }, {\n    key: 'anonymousAuth',\n    value: function anonymousAuth() {\n      var _this = this;\n\n      var fetchArgs = common.makeFetchArgs('GET');\n      fetchArgs.cors = true;\n\n      return fetch(this.rootUrl + '/anon/user', fetchArgs).then(common.checkStatus).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return _this.set(json);\n      });\n    }\n  }, {\n    key: 'apiKeyAuth',\n    value: function apiKeyAuth(key) {\n      var _this2 = this;\n\n      var fetchArgs = common.makeFetchArgs('POST', JSON.stringify({ 'key': key }));\n      fetchArgs.cors = true;\n\n      return fetch(this.rootUrl + '/api/key', fetchArgs).then(common.checkStatus).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return _this2.set(json);\n      });\n    }\n  }, {\n    key: 'localAuth',\n    value: function localAuth(username, password) {\n      var _this3 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { cors: true };\n\n      var fetchArgs = common.makeFetchArgs('POST', JSON.stringify({ username: username, password: password }));\n      fetchArgs.cors = true;\n\n      return fetch(this.rootUrl + '/local/userpass', fetchArgs).then(common.checkStatus).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this3.set(json);\n        return json;\n      });\n    }\n  }, {\n    key: 'mongodbCloudAuth',\n    value: function mongodbCloudAuth(username, apiKey) {\n      var _this4 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { cors: true, cookie: false };\n\n      var fetchArgs = common.makeFetchArgs('POST', JSON.stringify({ username: username, apiKey: apiKey }));\n      fetchArgs.cors = true;\n      fetchArgs.credentials = 'include';\n\n      var url = this.rootUrl + '/mongodb/cloud';\n      if (!options.cookie) {\n        return fetch(url, fetchArgs).then(common.checkStatus).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          _this4.set(json);\n          return json;\n        });\n      }\n\n      return fetch(url + '?cookie=true', fetchArgs).then(common.checkStatus);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.authDataStorage.remove(common.USER_AUTH_KEY);\n      this.authDataStorage.remove(common.REFRESH_TOKEN_KEY);\n      this.clearImpersonation();\n    }\n  }, {\n    key: 'getRefreshToken',\n    value: function getRefreshToken() {\n      return this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n    }\n  }, {\n    key: 'set',\n    value: function set(json) {\n      var rt = json.refreshToken;\n      delete json.refreshToken;\n\n      this.authDataStorage.set(common.USER_AUTH_KEY, JSON.stringify(json));\n      this.authDataStorage.set(common.REFRESH_TOKEN_KEY, rt);\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      if (!this.authDataStorage.get(common.USER_AUTH_KEY)) {\n        return null;\n      }\n\n      var item = this.authDataStorage.get(common.USER_AUTH_KEY);\n      try {\n        return JSON.parse(item);\n      } catch (e) {\n        // Need to back out and clear auth otherwise we will never\n        // be able to do anything useful.\n        this.clear();\n        throw new _errors.BaasError('Failure retrieving stored auth');\n      }\n    }\n  }, {\n    key: 'authedId',\n    value: function authedId() {\n      return ((this.get() || {}).user || {})._id;\n    }\n  }, {\n    key: 'isImpersonatingUser',\n    value: function isImpersonatingUser() {\n      return this.authDataStorage.get(common.IMPERSONATION_ACTIVE_KEY) === 'true';\n    }\n  }, {\n    key: 'refreshImpersonation',\n    value: function refreshImpersonation(client) {\n      var _this5 = this;\n\n      var userId = this.authDataStorage.get(common.IMPERSONATION_USER_KEY);\n      return client._do('/admin/users/' + userId + '/impersonate', 'POST', { refreshOnFailure: false, useRefreshToken: true }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        json.refreshToken = _this5.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n        _this5.set(json);\n      }).catch(function (e) {\n        _this5.stopImpersonation();\n        throw e; // rethrow\n      });\n    }\n  }, {\n    key: 'startImpersonation',\n    value: function startImpersonation(client, userId) {\n      if (this.get() === null) {\n        return Promise.reject(new _errors.BaasError('Must auth first'));\n      }\n\n      if (this.isImpersonatingUser()) {\n        return Promise.reject(new _errors.BaasError('Already impersonating a user'));\n      }\n\n      this.authDataStorage.set(common.IMPERSONATION_ACTIVE_KEY, 'true');\n      this.authDataStorage.set(common.IMPERSONATION_USER_KEY, userId);\n\n      var realUserAuth = JSON.parse(this.authDataStorage.get(common.USER_AUTH_KEY));\n      realUserAuth.refreshToken = this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n      this.authDataStorage.set(common.IMPERSONATION_REAL_USER_AUTH_KEY, JSON.stringify(realUserAuth));\n      return this.refreshImpersonation(client);\n    }\n  }, {\n    key: 'stopImpersonation',\n    value: function stopImpersonation() {\n      var _this6 = this;\n\n      if (!this.isImpersonatingUser()) {\n        throw new _errors.BaasError('Not impersonating a user');\n      }\n\n      return new Promise(function (resolve, reject) {\n        var realUserAuth = JSON.parse(_this6.authDataStorage.get(common.IMPERSONATION_REAL_USER_AUTH_KEY));\n        _this6.set(realUserAuth);\n        _this6.clearImpersonation();\n        resolve();\n      });\n    }\n  }, {\n    key: 'clearImpersonation',\n    value: function clearImpersonation() {\n      this.authDataStorage.remove(common.IMPERSONATION_ACTIVE_KEY);\n      this.authDataStorage.remove(common.IMPERSONATION_USER_KEY);\n      this.authDataStorage.remove(common.IMPERSONATION_REAL_USER_AUTH_KEY);\n    }\n  }], [{\n    key: 'generateState',\n    value: function generateState() {\n      var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var state = '';\n      var stateLength = 64;\n      for (var i = 0; i < stateLength; i++) {\n        var pos = Math.floor(Math.random() * alpha.length);\n        state += alpha.substring(pos, pos + 1);\n      }\n\n      return state;\n    }\n  }]);\n\n  return Auth;\n}();\n\nexports.default = Auth;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Admin = exports.BaasClient = undefined;\n\nvar _client = __webpack_require__(8);\n\nexports.BaasClient = _client.BaasClient;\nexports.Admin = _client.Admin;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __webpack_require__(0);\n\nvar _mongodbExtjson = __webpack_require__(4);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ObjectID = _mongodbExtjson.BSON.ObjectID;\n\n/**\n * Create a new Collection instance (not meant to be instantiated directly).\n *\n * @class\n * @return {Collection} a Collection instance.\n */\n\nvar Collection = function () {\n  function Collection(db, name) {\n    _classCallCheck(this, Collection);\n\n    this.db = db;\n    this.name = name;\n  }\n\n  /**\n   * Inserts a single document.\n   *\n   * @method\n   * @param {Object} doc The document to insert.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} a Promise for the operation.\n   */\n\n\n  _createClass(Collection, [{\n    key: 'insertOne',\n    value: function insertOne(doc) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return insertOp(this, doc, options);\n    }\n\n    /**\n     * Inserts multiple documents.\n     *\n     * @method\n     * @param {Array} docs The documents to insert.\n     * @param {Object} [options] Additional options object.\n     * @return {Promise<Object, Error>} Returns a Promise for the operation.\n     */\n\n  }, {\n    key: 'insertMany',\n    value: function insertMany(docs) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return insertOp(this, docs, options);\n    }\n\n    /**\n     * Deletes a single document.\n     *\n     * @method\n     * @param {Object} query The query used to match a single document.\n     * @param {Object} [options] Additional options object.\n     * @return {Promise<Object, Error>} Returns a Promise for the operation.\n     */\n\n  }, {\n    key: 'deleteOne',\n    value: function deleteOne(query) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return deleteOp(this, query, Object.assign({}, options, { singleDoc: true }));\n    }\n\n    /**\n     * Deletes all documents matching query.\n     *\n     * @method\n     * @param {Object} query The query used to match the documents to delete.\n     * @param {Object} [options] Additional options object.\n     * @return {Promise<Object, Error>} Returns a Promise for the operation.\n     */\n\n  }, {\n    key: 'deleteMany',\n    value: function deleteMany(query) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return deleteOp(this, query, Object.assign({}, options, { singleDoc: false }));\n    }\n\n    /**\n     * Updates a single document.\n     *\n     * @method\n     * @param {Object} query The query used to match a single document.\n     * @param {Object} update The update operations to perform on the matching document.\n     * @param {Object} [options] Additional options object.\n     * @param {Boolean} [options.upsert=false] Perform an upsert operation.\n     * @return {Promise<Object, Error>} A Promise for the operation.\n     */\n\n  }, {\n    key: 'updateOne',\n    value: function updateOne(query, update) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      return updateOp(this, query, update, Object.assign({}, options, { multi: false }));\n    }\n\n    /**\n     * Updates multiple documents.\n     *\n     * @method\n     * @param {Object} query The query used to match the documents.\n     * @param {Object} update The update operations to perform on the matching documents.\n     * @param {Object} [options] Additional options object.\n     * @param {Boolean} [options.upsert=false] Perform an upsert operation.\n     * @return {Promise<Object, Error>} Returns a Promise for the operation.\n     */\n\n  }, {\n    key: 'updateMany',\n    value: function updateMany(query, update) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      return updateOp(this, query, update, Object.assign({}, options, { multi: true }));\n    }\n\n    /**\n     * Finds documents.\n     *\n     * @method\n     * @param {Object} query The query used to match documents.\n     * @param {Object} [options] Additional options object.\n     * @param {Object} [options.projection=null] The query document projection.\n     * @param {Number} [options.limit=null] The maximum number of documents to return.\n     * @return {Array} An array of documents.\n     */\n\n  }, {\n    key: 'find',\n    value: function find(query) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return findOp(this, query, options);\n    }\n\n    /**\n     * Gets the number of documents matching the filter.\n     *\n     * @param {Object} query The query used to match documents.\n     * @param {Object} options Additional find options.\n     * @param {Number} [options.limit=null] The maximum number of documents to return.\n     * @return {Number} An array of documents.\n     */\n\n  }, {\n    key: 'count',\n    value: function count(query) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return findOp(this, query, Object.assign({}, options, { count: true })).then(function (result) {\n        return result[0] || 0;\n      });\n    }\n\n    // deprecated\n\n  }, {\n    key: 'insert',\n    value: function insert(docs) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return insertOp(this, docs, options);\n    }\n  }, {\n    key: 'upsert',\n    value: function upsert(query, update) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      return updateOp(this, query, update, Object.assign({}, options, { upsert: true }));\n    }\n  }]);\n\n  return Collection;\n}();\n\n// deprecated methods\n\n\nCollection.prototype.upsert = (0, _util.deprecate)(Collection.prototype.upsert, 'use `updateOne`/`updateMany` instead of `upsert`');\n\n// private\nfunction insertOp(self, docs, options) {\n  docs = Array.isArray(docs) ? docs : [docs];\n\n  // add ObjectIds to docs that have none\n  docs = docs.map(function (doc) {\n    if (!doc._id) doc._id = new ObjectID();\n    return doc;\n  });\n\n  return self.db.client.executePipeline([{\n    action: 'literal',\n    args: {\n      items: docs\n    }\n  }, {\n    service: self.db.service,\n    action: 'insert',\n    args: {\n      database: self.db.name,\n      collection: self.name\n    }\n  }]).then(function (response) {\n    return {\n      insertedIds: response.result.map(function (doc) {\n        return doc._id;\n      })\n    };\n  });\n}\n\nfunction deleteOp(self, query, options) {\n  var args = Object.assign({\n    database: self.db.name,\n    collection: self.name,\n    query: query\n  }, options);\n\n  return self.db.client.executePipeline([{\n    service: self.db.service,\n    action: 'delete',\n    args: args\n  }]).then(function (response) {\n    return {\n      deletedCount: response.result[0].removed\n    };\n  });\n}\n\nfunction updateOp(self, query, update, options) {\n  var args = Object.assign({\n    database: self.db.name,\n    collection: self.name,\n    query: query,\n    update: update\n  }, options);\n\n  return self.db.client.executePipeline([{\n    service: self.db.service,\n    action: 'update',\n    args: args\n  }]);\n}\n\nfunction findOp(self, query, options) {\n  var args = Object.assign({\n    database: self.db.name,\n    collection: self.name,\n    query: query\n  }, options);\n\n  // legacy argument naming\n  if (args.projection) {\n    args.project = args.projection;\n    delete args.projection;\n  }\n\n  return self.db.client.executePipeline([{\n    service: self.db.service,\n    action: 'find',\n    args: args\n  }]).then(function (response) {\n    return response.result;\n  });\n}\n\nexports.default = Collection;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _collection = __webpack_require__(11);\n\nvar _collection2 = _interopRequireDefault(_collection);\n\nvar _util = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Create a new DB instance (not meant to be instantiated directly).\n * @class\n * @return {DB} a DB instance.\n */\nvar DB = function () {\n  function DB(client, service, name) {\n    _classCallCheck(this, DB);\n\n    this.client = client;\n    this.service = service;\n    this.name = name;\n  }\n\n  /**\n   * Returns a Collection instance representing a MongoDB Collection object.\n   *\n   * @method\n   * @param {String} name The collection name.\n   * @param {Object} [options] Additional options.\n   * @return {Collection} returns a Collection instance representing a MongoDb collection.\n   */\n\n\n  _createClass(DB, [{\n    key: 'collection',\n    value: function collection(name) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return new _collection2.default(this, name, options);\n    }\n  }]);\n\n  return DB;\n}();\n\n// deprecated\n\n\nDB.prototype.getCollection = (0, _util.deprecate)(DB.prototype.collection, 'use `collection` instead of `getCollection`');\n\nexports.default = DB;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _db = __webpack_require__(12);\n\nvar _db2 = _interopRequireDefault(_db);\n\nvar _util = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Create a new MongoDBService instance (not meant to be instantiated directly).\n *\n * @class\n * @return {MongoDBService} a MongoDBService instance.\n */\nvar MongoDBService = function () {\n  function MongoDBService(baasClient, serviceName) {\n    _classCallCheck(this, MongoDBService);\n\n    this.baasClient = baasClient;\n    this.serviceName = serviceName;\n  }\n\n  /**\n   * Get a DB instance\n   *\n   * @method\n   * @param {String} databaseName The MongoDB database name\n   * @param {Object} [options] Additional options.\n   * @return {DB} returns a DB instance representing a MongoDB database.\n   */\n\n\n  _createClass(MongoDBService, [{\n    key: 'db',\n    value: function db(databaseName) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return new _db2.default(this.baasClient, this.serviceName, databaseName);\n    }\n  }]);\n\n  return MongoDBService;\n}();\n\n// deprecated\n\n\nMongoDBService.prototype.getDB = MongoDBService.prototype.getDb = (0, _util.deprecate)(MongoDBService.prototype.db, 'use `db` instead of `getDB`');\n\nexports.default = MongoDBService;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.createStorage = createStorage;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MemoryStorage = function () {\n  function MemoryStorage() {\n    _classCallCheck(this, MemoryStorage);\n\n    this._data = {};\n  }\n\n  _createClass(MemoryStorage, [{\n    key: 'getItem',\n    value: function getItem(key) {\n      return key in this._data ? this._data[key] : null;\n    }\n  }, {\n    key: 'setItem',\n    value: function setItem(key, value) {\n      this._data[key] = value;\n      return this._data[key];\n    }\n  }, {\n    key: 'removeItem',\n    value: function removeItem(key) {\n      delete this._data[key];\n      return undefined;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this._data = {};\n      return this._data;\n    }\n  }]);\n\n  return MemoryStorage;\n}();\n\nvar Storage = function () {\n  function Storage(store) {\n    _classCallCheck(this, Storage);\n\n    this.store = store;\n  }\n\n  _createClass(Storage, [{\n    key: 'get',\n    value: function get(key) {\n      return this.store.getItem(key);\n    }\n  }, {\n    key: 'set',\n    value: function set(key, value) {\n      return this.store.setItem(key, value);\n    }\n  }, {\n    key: 'remove',\n    value: function remove(key) {\n      return this.store.removeItem(key);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      return this.store.clear();\n    }\n  }]);\n\n  return Storage;\n}();\n\nfunction createStorage(type) {\n  if (type === 'localStorage') {\n    if (typeof window !== 'undefined' && 'localStorage' in window && window.localStorage !== null) {\n      return new Storage(window.localStorage);\n    }\n  } else if (type === 'sessionStorage') {\n    if (typeof window !== 'undefined' && 'sessionStorage' in window && window.sessionStorage !== null) {\n      return new Storage(window.sessionStorage);\n    }\n  }\n\n  // default to memory storage\n  return new Storage(new MemoryStorage());\n}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\n__webpack_require__(34);\nvar globalObj = typeof self !== 'undefined' && self || this;\nmodule.exports = globalObj.fetch.bind(globalObj);\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar btoa = __webpack_require__(7).btoa;\n\n/**\n * Module dependencies.\n * @ignore\n */\nfunction convert(integer) {\n  var str = Number(integer).toString(16);\n  return str.length == 1 ? \"0\" + str : str;\n};\n\n/**\n * A class representation of the BSON Binary type.\n *\n * Sub types\n *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.\n *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.\n *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.\n *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.\n *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.\n *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.\n *\n * @class\n * @param {Buffer} buffer a buffer object containing the binary data.\n * @param {Number} [subType] the option binary type.\n * @return {Binary}\n */\nvar Binary = function(buffer, subType) {\n  this._bsontype = 'Binary';\n\n  if(buffer instanceof Number) {\n    this.sub_type = buffer;\n    this.position = 0;\n  } else {\n    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;\n    this.position = 0;\n  }\n\n  if(buffer != null && !(buffer instanceof Number)) {\n    // Only accept Buffer or Uint8Array\n    if(typeof buffer == 'string') {\n      this.buffer = writeStringToArray(buffer);\n    } else if(buffer instanceof Uint8Array) {\n      this.buffer = buffer;\n    } else {\n      throw new Error('passed in buffer must be an Uint8Array instance');\n    }\n\n    this.position = buffer.length;\n  } else {\n    this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));\n    // Set position to start of buffer\n    this.position = 0;\n  }\n}\n\n/**\n * Updates this binary with byte_value.\n *\n * @method\n * @param {String} byte_value a single byte we wish to write.\n */\nBinary.prototype.put = function(byte_value) {\n  // If it's a string and a has more than one character throw an error\n  if(byte_value['length'] != null && typeof byte_value != 'number' && byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");\n  if(typeof byte_value != 'number' && byte_value < 0 || byte_value > 255) throw new Error(\"only accepts number in a valid unsigned byte range 0-255\");\n\n  // Decode the byte value once\n  var decoded_byte = null;\n  if(typeof byte_value == 'string') {\n    decoded_byte = byte_value.charCodeAt(0);\n  } else if(byte_value['length'] != null) {\n    decoded_byte = byte_value[0];\n  } else {\n    decoded_byte = byte_value;\n  }\n\n  if(this.buffer.length > this.position) {\n    this.buffer[this.position++] = decoded_byte;\n  } else {\n    var buffer = null;\n    // Create a new buffer (typed or normal array)\n    buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));\n\n    // We need to copy all the content to the new array\n    for(var i = 0; i < this.buffer.length; i++) {\n      buffer[i] = this.buffer[i];\n    }\n\n    // Reassign the buffer\n    this.buffer = buffer;\n    // Write the byte\n    this.buffer[this.position++] = decoded_byte;\n  }\n}\n\n/**\n * Writes a buffer or string to the binary.\n *\n * @method\n * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object.\n * @param {number} offset specify the binary of where to write the content.\n * @return {null}\n */\nBinary.prototype.write = function(string, offset) {\n  offset = typeof offset == 'number' ? offset : this.position;\n\n  // If the buffer is to small let's extend the buffer\n  if(this.buffer.length < offset + string.length) {\n    var buffer = null;\n    // Create a new buffer\n    buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))\n    // Copy the content\n    for(var i = 0; i < this.position; i++) {\n      buffer[i] = this.buffer[i];\n    }\n\n    // Assign the new buffer\n    this.buffer = buffer;\n  }\n\n  for(var i = 0; i < string.length; i++) {\n    this.buffer[offset++] = string[i];\n  }\n\n  this.position = offset > this.position ? offset : this.position;\n}\n\n/**\n * Reads **length** bytes starting at **position**.\n *\n * @method\n * @param {number} position read from the given position in the Binary.\n * @param {number} length the number of bytes to read.\n * @return {Buffer}\n */\nBinary.prototype.read = function(position, length) {\n  length = length && length > 0\n    ? length\n    : this.position;\n\n  // Let's return the data based on the type we have\n  return this.buffer.slice(position, position + length);\n}\n\n/**\n * Returns the value of this binary as a string.\n *\n * @method\n * @return {String}\n */\nBinary.prototype.value = function(asRaw) {\n  asRaw = asRaw == null ? false : asRaw;\n  if(asRaw) return this.buffer.slice(0, this.position);\n  return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);\n}\n\n/**\n * Length.\n *\n * @method\n * @return {number} the length of the binary.\n */\nBinary.prototype.length = function() {\n  return this.position;\n}\n\nBinary.prototype.equals = function(value) {\n  if(!value) return false;\n  if(value._bsontype != 'Binary') return false;\n  if(!value.buffer) return false;\n  if(value.buffer.length != this.buffer.length) return false;\n  for(var i = 0; i < this.buffer.length; i++) {\n    if(this.buffer[i] != value.buffer[i]) return false;\n  }\n\n  return true;\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toJSON = function() {\n  // If we are in the node.js context use Buffer.toString, otherwise the btoa\n  var binary = typeof Buffer !== 'undefined'\n    ? this.buffer.toString('base64')\n    : btoa(String.fromCharCode.apply(null, this.buffer));\n\n  return {\n    $binary: binary,\n    $type: convert(this.sub_type)\n  }\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toString = function(format) {\n  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';\n}\n\n/**\n * Binary default subtype\n * @ignore\n */\nvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/**\n * @ignore\n */\nvar writeStringToArray = function(data) {\n  // Create a buffer\n  var buffer = new Uint8Array(new ArrayBuffer(data.length));\n  // Write the content to the buffer\n  for(var i = 0; i < data.length; i++) {\n    buffer[i] = data.charCodeAt(i);\n  }\n  // Write the string to the buffer\n  return buffer;\n}\n\n/**\n * Convert Array ot Uint8Array to Binary String\n *\n * @ignore\n */\nvar convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {\n  var result = \"\";\n  for(var i = startIndex; i < endIndex; i++) {\n   result = result + String.fromCharCode(byteArray[i]);\n  }\n  return result;\n};\n\nBinary.BUFFER_SIZE = 256;\n\n/**\n * Default BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_DEFAULT = 0;\n/**\n * Function BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_FUNCTION = 1;\n/**\n * Byte Array BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/**\n * OLD UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID_OLD = 3;\n/**\n * UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID = 4;\n/**\n * MD5 BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_MD5 = 5;\n/**\n * User BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_USER_DEFINED = 128;\n\nmodule.exports = Binary;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function(code, scope) {\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope;\n}\n\nCode.prototype.equals = function(value) {\n  if(!value || !value.code) return false;\n  if(value._bsontype != 'Code') return false;\n  if(this.code == value.code) return true;\n  return false;\n}\n\nCode.prototype.toJSON = function() {\n  return { $code: this.code, $scope: this.scope };\n}\n\nmodule.exports = Code;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON DBRef type.\n *\n * @class\n * @param {String} namespace the collection name.\n * @param {ObjectID} oid the reference ObjectID.\n * @param {String} [db] optional db name, if omitted the reference is local to the current db.\n * @return {DBRef}\n */\nvar DBRef = function(namespace, oid, db) {\n  this._bsontype = 'DBRef';\n  this.namespace = namespace;\n  this.oid = oid;\n  this.db = db;\n}\n\nDBRef.prototype.equals = function(value) {\n  if(value == null || value.namespace == null  || value.db == null || value.oid == null) return false;\n  if(value._bsontype != 'DBRef') return false;\n\n  if(this.oid && this.oid.equals) {\n    return this.oid.equals(value.oid) && this.namespace == value.namespace && this.db == value.db;\n  } else {\n    return this.oid == value.oid && this.namespace == value.namespace && this.db == value.db;\n  }\n}\n\nDBRef.prototype.toJSON = function() {\n  return {\n    '$ref':this.namespace,\n    '$id':this.oid,\n    '$db':this.db == null ? '' : this.db\n  };\n}\n\nmodule.exports = DBRef;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar Long = __webpack_require__(6);\n\nvar PARSE_STRING_REGEXP = /^(\\+|\\-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([\\-\\+])?(\\d+)?$/;\nvar PARSE_INF_REGEXP = /^(\\+|\\-)?(Infinity|inf)$/i;\nvar PARSE_NAN_REGEXP = /^(\\+|\\-)?NaN$/i;\n\nvar EXPONENT_MAX = 6111;\nvar EXPONENT_MIN = -6176;\nvar EXPONENT_BIAS = 6176;\nvar MAX_DIGITS = 34;\n\n// Nan value bits as 32 bit values (due to lack of longs)\nvar NAN_BUFFER = [0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n// Infinity value bits 32 bit values (due to lack of longs)\nvar INF_NEGATIVE_BUFFER = [0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\nvar INF_POSITIVE_BUFFER = [0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n\nvar EXPONENT_REGEX = /^([\\-\\+])?(\\d+)?$/;\n\n// Extract least significant 5 bits\nvar COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nvar EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nvar COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nvar COMBINATION_NAN = 31;\n// Value of combination field for NaN\nvar COMBINATION_SNAN = 32;\n// decimal128 exponent bias\nvar EXPONENT_BIAS = 6176;\n\n// Detect if the value is a digit\nvar isDigit = function(value) {\n  return !isNaN(parseInt(value, 10));\n}\n\n// Divide two uint128 values\nvar divideu128 = function(value) {\n  var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n  var _rem = Long.fromNumber(0);\n  var i = 0;\n\n  if(!value.parts[0] && !value.parts[1] &&\n     !value.parts[2] && !value.parts[3]) {\n    return { quotient: value, rem: _rem };\n  }\n\n  for(var i = 0; i <= 3; i++) {\n    // Adjust remainder to match value of next dividend\n    _rem = _rem.shiftLeft(32);\n    // Add the divided to _rem\n    _rem = _rem.add(new Long(value.parts[i], 0));\n    value.parts[i] = _rem.div(DIVISOR).low_;\n    _rem = _rem.modulo(DIVISOR);\n  }\n\n  return { quotient: value, rem: _rem };\n}\n\n// Multiply two Long values and return the 128 bit value\nvar multiply64x2 = function(left, right) {\n  if(!left && !right) {\n    return {high: Long.fromNumber(0), low: Long.fromNumber(0)};\n  }\n\n  var leftHigh = left.shiftRightUnsigned(32);\n  var leftLow = new Long(left.getLowBits(), 0);\n  var rightHigh = right.shiftRightUnsigned(32);\n  var rightLow = new Long(right.getLowBits(), 0);\n\n  var productHigh = leftHigh.multiply(rightHigh);\n  var productMid = leftHigh.multiply(rightLow);\n  var productMid2 = leftLow.multiply(rightHigh);\n  var productLow = leftLow.multiply(rightLow);\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productMid = new Long(productMid.getLowBits(), 0)\n                .add(productMid2)\n                .add(productLow.shiftRightUnsigned(32));\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n\n  // Return the 128 bit result\n  return {high: productHigh, low: productLow};\n}\n\nvar lessThan = function(left, right) {\n  // Make values unsigned\n  var uhleft = left.high_ >>> 0;\n  var uhright = right.high_ >>> 0;\n\n  // Compare high bits first\n  if(uhleft < uhright) {\n    return true\n  } else if(uhleft == uhright) {\n    var ulleft = left.low_ >>> 0;\n    var ulright = right.low_ >>> 0;\n    if(ulleft < ulright) return true;\n  }\n\n  return false;\n}\n\nvar longtoHex = function(value) {\n  var buffer = new Buffer(8);\n  var index = 0;\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = value.low_ & 0xff;\n  buffer[index++] = (value.low_ >> 8) & 0xff;\n  buffer[index++] = (value.low_ >> 16) & 0xff;\n  buffer[index++] = (value.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = value.high_ & 0xff;\n  buffer[index++] = (value.high_ >> 8) & 0xff;\n  buffer[index++] = (value.high_ >> 16) & 0xff;\n  buffer[index++] = (value.high_ >> 24) & 0xff;\n  return buffer.reverse().toString('hex');\n}\n\nvar int32toHex = function(value) {\n  var buffer = new Buffer(4);\n  var index = 0;\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = value & 0xff;\n  buffer[index++] = (value >> 8) & 0xff;\n  buffer[index++] = (value >> 16) & 0xff;\n  buffer[index++] = (value >> 24) & 0xff;\n  return buffer.reverse().toString('hex');\n}\n\n/**\n * A class representation of the BSON Decimal128 type.\n *\n * @class\n * @param {Buffer} bytes A buffer representing the Decimal128 bytes.\n * @return {Decimal128}\n */\nvar Decimal128 = function(bytes) {\n  this._bsontype = 'Decimal128';\n  this.bytes = bytes;\n}\n\n/**\n * Creates a Decimal128 instance from a string representation.\n *\n * @method\n * @param {String} string A string representing a Decimal128 value.\n */\nDecimal128.fromString = function(string) {\n  // Parse state tracking\n  var isNegative = false;\n  var sawRadix = false;\n  var foundNonZero = false;\n\n  // Total number of significant digits (no leading or trailing zero)\n  var significantDigits = 0;\n  // Total number of significand digits read\n  var nDigitsRead = 0;\n  // Total number of digits (no leading zeros)\n  var nDigits = 0;\n  // The number of the digits after radix\n  var radixPosition = 0;\n  // The index of the first non-zero in *str*\n  var firstNonZero = 0;\n\n  // Digits Array\n  var digits = [0];\n  // The number of digits in digits\n  var nDigitsStored = 0;\n  // Insertion pointer for digits\n  var digitsInsert = 0;\n  // The index of the first non-zero digit\n  var firstDigit = 0;\n  // The index of the last digit\n  var lastDigit = 0;\n\n  // Exponent\n  var exponent = 0;\n  // loop index over array\n  var i = 0;\n  // The high 17 digits of the significand\n  var significandHigh = [0, 0];\n  // The low 17 digits of the significand\n  var significandLow = [0, 0];\n  // The biased exponent\n  var biasedExponent = 0;\n\n  // Read index\n  var index = 0;\n\n  // Trim the string\n  string = string.trim();\n\n  // Results\n  var stringMatch = string.match(PARSE_STRING_REGEXP);\n  var infMatch = string.match(PARSE_INF_REGEXP);\n  var nanMatch = string.match(PARSE_NAN_REGEXP);\n\n  // Validate the string\n  if(!stringMatch\n    && ! infMatch\n    && ! nanMatch || string.length == 0) {\n      throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Check if we have an illegal exponent format\n  if(stringMatch && stringMatch[4] && stringMatch[2] === undefined) {\n    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Get the negative or positive sign\n  if(string[index] == '+' || string[index] == '-') {\n    isNegative = string[index++] == '-';\n  }\n\n  // Check if user passed Infinity or NaN\n  if(!isDigit(string[index]) && string[index] != '.') {\n    if(string[index] == 'i' || string[index] == 'I') {\n      return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n    } else if(string[index] == 'N') {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n  }\n\n  // Read all the digits\n  while(isDigit(string[index]) || string[index] == '.') {\n    if(string[index] == '.') {\n      if(sawRadix) {\n        return new Decimal128(new Buffer(NAN_BUFFER));\n      }\n\n      sawRadix = true;\n      index = index + 1;\n      continue;\n    }\n\n    if(nDigitsStored < 34) {\n      if(string[index] != '0' || foundNonZero) {\n        if(!foundNonZero) {\n          firstNonZero = nDigitsRead;\n        }\n\n        foundNonZero = true;\n\n        // Only store 34 digits\n        digits[digitsInsert++] = parseInt(string[index], 10);\n        nDigitsStored = nDigitsStored + 1;\n      }\n    }\n\n    if(foundNonZero) {\n      nDigits = nDigits + 1;\n    }\n\n    if(sawRadix) {\n      radixPosition = radixPosition + 1;\n    }\n\n    nDigitsRead = nDigitsRead + 1;\n    index = index + 1;\n  }\n\n  if(sawRadix && !nDigitsRead) {\n    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Read exponent if exists\n  if(string[index] == 'e' || string[index] == 'E') {\n    // Read exponent digits\n    var match = string.substr(++index).match(EXPONENT_REGEX);\n\n    // No digits read\n    if(!match || !match[2]) {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n\n    // Get exponent\n    exponent = parseInt(match[0], 10);\n\n    // Adjust the index\n    index = index + match[0].length;\n  }\n\n  // Return not a number\n  if(string[index]) {\n    return new Decimal128(new Buffer(NAN_BUFFER));\n  }\n\n  // Done reading input\n  // Find first non-zero digit in digits\n  firstDigit = 0;\n\n  if(!nDigitsStored) {\n    firstDigit = 0;\n    lastDigit = 0;\n    digits[0] = 0;\n    nDigits = 1;\n    nDigitsStored = 1;\n    significantDigits = 0;\n  } else {\n    lastDigit = nDigitsStored - 1;\n    significantDigits = nDigits;\n\n    if(exponent != 0 && significantDigits != 1) {\n      while(string[firstNonZero + significantDigits - 1] == '0') {\n        significantDigits = significantDigits - 1;\n      }\n    }\n  }\n\n  // Normalization of exponent\n  // Correct exponent based on radix position, and shift significand as needed\n  // to represent user input\n\n  // Overflow prevention\n  if(exponent <= radixPosition && radixPosition - exponent > (1 << 14)) {\n    exponent = EXPONENT_MIN;\n  } else {\n    exponent = exponent - radixPosition;\n  }\n\n  // Attempt to normalize the exponent\n  while(exponent > EXPONENT_MAX) {\n    // Shift exponent to significand and decrease\n    lastDigit = lastDigit + 1;\n\n    if(lastDigit - firstDigit > MAX_DIGITS) {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if(digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n      }\n    }\n\n    exponent = exponent - 1;\n  }\n\n  while(exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n    // Shift last digit\n    if(lastDigit == 0) {\n      exponent = EXPONENT_MIN;\n      significantDigits = 0;\n      break;\n    }\n\n    if(nDigitsStored < nDigits) {\n      // adjust to match digits not stored\n      nDigits = nDigits - 1;\n    } else {\n      // adjust to round\n      lastDigit = lastDigit - 1;\n    }\n\n    if(exponent < EXPONENT_MAX) {\n      exponent = exponent + 1;\n    } else {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if(digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))\n      }\n    }\n  }\n\n  // Round\n  // We've normalized the exponent, but might still need to round.\n  if((lastDigit - firstDigit + 1 < significantDigits) && string[significantDigits] != '0') {\n    var endOfString = nDigitsRead;\n\n    // If we have seen a radix point, 'string' is 1 longer than we have\n    // documented with ndigits_read, so inc the position of the first nonzero\n    // digit and the position that digits are read to.\n    if(sawRadix && exponent == EXPONENT_MIN) {\n      firstNonZero = firstNonZero + 1;\n      endOfString = endOfString + 1;\n    }\n\n    var roundDigit = parseInt(string[firstNonZero + lastDigit + 1], 10);\n    var roundBit = 0;\n\n    if(roundDigit >= 5) {\n      roundBit = 1;\n\n      if(roundDigit == 5) {\n        roundBit = digits[lastDigit] % 2 == 1;\n\n        for(var i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n          if(parseInt(string[i], 10)) {\n            roundBit = 1;\n            break;\n          }\n        }\n      }\n    }\n\n    if(roundBit) {\n      var dIdx = lastDigit;\n\n      for(; dIdx >= 0; dIdx--) {\n        if(++digits[dIdx] > 9) {\n          digits[dIdx] = 0;\n\n          // overflowed most significant digit\n          if(dIdx == 0) {\n            if(exponent < EXPONENT_MAX) {\n              exponent = exponent + 1;\n              digits[dIdx] = 1;\n            } else {\n              return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))\n            }\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n  // Encode significand\n  // The high 17 digits of the significand\n  significandHigh = Long.fromNumber(0);\n  // The low 17 digits of the significand\n  significandLow = Long.fromNumber(0);\n\n  // read a zero\n  if(significantDigits == 0) {\n    significandHigh = Long.fromNumber(0);\n    significandLow = Long.fromNumber(0);\n  } else if(lastDigit - firstDigit < 17) {\n    var dIdx = firstDigit;\n    significandLow = Long.fromNumber(digits[dIdx++]);\n    significandHigh = new Long(0, 0);\n\n    for(; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  } else {\n    var dIdx = firstDigit;\n    significandHigh = Long.fromNumber(digits[dIdx++]);\n\n    for(; dIdx <= lastDigit - 17; dIdx++) {\n      significandHigh = significandHigh.multiply(Long.fromNumber(10));\n      significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n    }\n\n    significandLow = Long.fromNumber(digits[dIdx++]);\n\n    for(; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  }\n\n  var significand = multiply64x2(significandHigh, Long.fromString(\"100000000000000000\"));\n\n  significand.low = significand.low.add(significandLow);\n\n  if(lessThan(significand.low, significandLow)) {\n    significand.high = significand.high.add(Long.fromNumber(1));\n  }\n\n  // Biased exponent\n  var biasedExponent = (exponent + EXPONENT_BIAS);\n  var dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n\n  // Encode combination, exponent, and significand.\n  if(significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber)) {\n    // Encode '11' into bits 1 to 3\n    dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47)));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n  } else {\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n  }\n\n  dec.low = significand.low;\n\n  // Encode sign\n  if(isNegative) {\n    dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n  }\n\n  // Encode into a buffer\n  var buffer = new Buffer(16);\n  var index = 0;\n\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.low.low_ & 0xff;\n  buffer[index++] = (dec.low.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.low.high_ & 0xff;\n  buffer[index++] = (dec.low.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 24) & 0xff;\n\n  // Encode the high 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.high.low_ & 0xff;\n  buffer[index++] = (dec.high.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.high.high_ & 0xff;\n  buffer[index++] = (dec.high.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 24) & 0xff;\n\n  // Return the new Decimal128\n  return new Decimal128(buffer);\n}\n\nDecimal128.prototype.toString = function() {\n  // Note: bits in this routine are referred to starting at 0,\n  // from the sign bit, towards the coefficient.\n\n  // bits 0 - 31\n  var high;\n  // bits 32 - 63\n  var midh;\n  // bits 64 - 95\n  var midl;\n  // bits 96 - 127\n  var low;\n  // bits 1 - 5\n  var combination;\n  // decoded biased exponent (14 bits)\n  var biased_exponent;\n  // the number of significand digits\n  var significand_digits = 0;\n  // the base-10 digits in the significand\n  var significand = new Array(36);\n  for(var i = 0; i < significand.length; i++) significand[i] = 0;\n  // read pointer into significand\n  var index = 0;\n\n  // unbiased exponent\n  var exponent;\n  // the exponent if scientific notation is used\n  var scientific_exponent;\n\n  // true if the number is zero\n  var is_zero = false;\n\n  // the most signifcant significand bits (50-46)\n  var significand_msb;\n  // temporary storage for significand decoding\n  var significand128 = {parts: new Array(4)};\n  // indexing variables\n  var i;\n  var j, k;\n\n  // Output string\n  var string = [];\n\n  // Unpack index\n  var index = 0;\n\n  // Buffer reference\n  var buffer = this.bytes;\n\n  // Unpack the low 64bits into a long\n  low = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n  midl = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Unpack the high 64bits into a long\n  midh = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n  high = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Unpack index\n  var index = 0;\n\n  // Create the state of the decimal\n  var dec = {\n    low: new Long(low, midl),\n    high: new Long(midh, high) };\n\n  if(dec.high.lessThan(Long.ZERO)) {\n    string.push('-');\n  }\n\n  // Decode combination field and exponent\n  combination = (high >> 26) & COMBINATION_MASK;\n\n  if((combination >> 3) == 3) {\n    // Check for 'special' values\n    if(combination == COMBINATION_INFINITY) {\n      return string.join('') + \"Infinity\";\n    } else if(combination == COMBINATION_NAN) {\n      return \"NaN\";\n    } else {\n      biased_exponent = (high >> 15) & EXPONENT_MASK;\n      significand_msb = 0x08 + ((high >> 14) & 0x01);\n    }\n  } else {\n    significand_msb = (high >> 14) & 0x07;\n    biased_exponent = (high >> 17) & EXPONENT_MASK;\n  }\n\n  exponent = biased_exponent - EXPONENT_BIAS;\n\n  // Create string of significand digits\n\n  // Convert the 114-bit binary number represented by\n  // (significand_high, significand_low) to at most 34 decimal\n  // digits through modulo and division.\n  significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n  significand128.parts[1] = midh;\n  significand128.parts[2] = midl;\n  significand128.parts[3] = low;\n\n  if(significand128.parts[0] == 0 && significand128.parts[1] == 0\n    && significand128.parts[2] == 0 && significand128.parts[3] == 0) {\n      is_zero = true;\n  } else {\n    for(var k = 3; k >= 0; k--) {\n      var least_digits = 0;\n      // Peform the divide\n      var result = divideu128(significand128);\n      significand128 = result.quotient;\n      least_digits = result.rem.low_;\n\n      // We now have the 9 least significant digits (in base 2).\n      // Convert and output to string.\n      if(!least_digits) continue;\n\n      for(var j = 8; j >= 0; j--) {\n        // significand[k * 9 + j] = Math.round(least_digits % 10);\n        significand[k * 9 + j] = least_digits % 10;\n        // least_digits = Math.round(least_digits / 10);\n        least_digits = Math.floor(least_digits / 10);\n      }\n    }\n  }\n\n  // Output format options:\n  // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n  // Regular    - ddd.ddd\n\n  if(is_zero) {\n    significand_digits = 1;\n    significand[index] = 0;\n  } else {\n    significand_digits = 36;\n    var i = 0;\n\n    while(!significand[index]) {\n      i++;\n      significand_digits = significand_digits - 1;\n      index = index + 1;\n    }\n  }\n\n  scientific_exponent = significand_digits - 1 + exponent;\n\n  // The scientific exponent checks are dictated by the string conversion\n  // specification and are somewhat arbitrary cutoffs.\n  //\n  // We must check exponent > 0, because if this is the case, the number\n  // has trailing zeros.  However, we *cannot* output these trailing zeros,\n  // because doing so would change the precision of the value, and would\n  // change stored data if the string converted number is round tripped.\n\n  if(scientific_exponent >= 34 || scientific_exponent <= -7 ||\n    exponent > 0) {\n    // Scientific format\n    string.push(significand[index++]);\n    significand_digits = significand_digits - 1;\n\n    if(significand_digits) {\n      string.push('.');\n    }\n\n    for(var i = 0; i < significand_digits; i++) {\n      string.push(significand[index++]);\n    }\n\n    // Exponent\n    string.push('E');\n    if(scientific_exponent > 0) {\n      string.push('+' + scientific_exponent);\n    } else {\n      string.push(scientific_exponent);\n    }\n  } else {\n    // Regular format with no decimal place\n    if(exponent >= 0) {\n      for(var i = 0; i < significand_digits; i++) {\n        string.push(significand[index++]);\n      }\n    } else {\n      var radix_position = significand_digits + exponent;\n\n      // non-zero digits before radix\n      if(radix_position > 0) {\n        for(var i = 0; i < radix_position; i++) {\n          string.push(significand[index++]);\n        }\n      } else {\n        string.push('0');\n      }\n\n      string.push('.');\n      // add leading zeros after radix\n      while(radix_position++ < 0) {\n        string.push('0');\n      }\n\n      for(var i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n        string.push(significand[index++]);\n      }\n    }\n  }\n\n  return string.join('');\n}\n\nDecimal128.prototype.equals = function(value) {\n  if(!value.bytes) return false;\n  return this.bytes.toString('hex') == value.bytes.toString('hex');\n}\n\nDecimal128.prototype.toJSON = function() {\n  return { \"$numberDecimal\": this.toString() };\n}\n\nmodule.exports = Decimal128;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nvar Double = function(value) {\n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function() {\n  return this.value;\n}\n\nDouble.prototype.equals = function(value) {\n  if(!value) return false;\n  if(typeof value !== 'number' && value._bsontype != 'Double') return false;\n  if(typeof value === 'number') return this.value === value;\n  return this.value === value.value;\n}\n\nDouble.prototype.toJSON = function() {\n  return { $numberDouble: this.value.toString() };\n}\n\nmodule.exports = Double;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function(value) {\n  this._bsontype = 'Int32';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\nInt32.prototype.valueOf = function() {\n  return this.value;\n}\n\nInt32.prototype.equals = function(value) {\n  if(!value) return false;\n  if(typeof value !== 'number' && value._bsontype != 'Int32') return false;\n  if(typeof value === 'number') return this.value === value;\n  return this.value === value.value;\n}\n\nInt32.prototype.toJSON = function() {\n  return { $numberInt: this.value.toString() };\n}\n\nmodule.exports = Int32;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON MaxKey type.\n *\n * @class\n * @return {MaxKey} A MaxKey instance\n */\nvar MaxKey = function() {\n  this._bsontype = 'MaxKey';\n}\n\nMaxKey.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'MaxKey') return false;\n  return true;\n}\n\nMaxKey.prototype.toJSON = function() {\n  return { $maxKey: 1 };\n}\n\nmodule.exports = MaxKey;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON MinKey type.\n *\n * @class\n * @return {MinKey} A MinKey instance\n */\nvar MinKey = function() {\n  this._bsontype = 'MinKey';\n}\n\nMinKey.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'MinKey') return false;\n  return true;\n}\n\nMinKey.prototype.toJSON = function() {\n  return { $minKey: 1 };\n}\n\nmodule.exports = MinKey;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\n/**\n * Machine id.\n *\n * Create a random 3-byte value (i.e. unique for this\n * process). Other drivers use a md5 of the machine id here, but\n * that would mean an asyc call to gethostname, so we don't bother.\n * @ignore\n */\nvar MACHINE_ID = parseInt(Math.random() * 0xFFFFFF, 10);\n\n// Regular expression that checks for hex value\nvar checkForHexRegExp = new RegExp(\"^[0-9a-fA-F]{24}$\");\n\n// Precomputed hex table enables speedy hex string conversion\nvar hexTable = [];\nfor (var i = 0; i < 256; i++) {\n  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n\n// Lookup tables\nvar encodeLookup = '0123456789abcdef'.split('')\nvar decodeLookup = []\nvar i = 0\nwhile (i < 10) decodeLookup[0x30 + i] = i++\nwhile (i < 16) decodeLookup[0x61 - 10 + i] = i++\n\nvar convertToHex = function(bytes) {\n  var hexString = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    hexString += hexTable[bytes[i]];\n  }\n\n  return hexString;\n}\n\n/**\n* Create a new ObjectID instance\n*\n* @class\n* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.\n* @property {number} generationTime The generation time of this ObjectId instance\n* @return {ObjectID} instance of ObjectID.\n*/\nvar ObjectID = function(id) {\n  // Duck-typing to support ObjectId from different npm packages\n  if(id instanceof ObjectID) return id;\n  if(!(this instanceof ObjectID)) return new ObjectID(id);\n\n  this._bsontype = 'ObjectID';\n\n  var __id = null;\n  var valid = ObjectID.isValid(id);\n\n  // Throw an error if it's not a valid setup\n  if(!valid && id != null){\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n  } else if(valid && typeof id == 'string' && id.length == 24) {\n    return ObjectID.createFromHexString(id);\n  } else if(id == null || typeof id == 'number') {\n    // convert to 12 byte binary string\n    this.id = this.generate(id);\n  } else if(id != null && id.length === 12) {\n    // assume 12 byte string\n    this.id = id;\n  } else if(id != null && id.toHexString) {\n    // Duck-typing to support ObjectId from different npm packages\n    return id;\n  } else {\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n  }\n\n  if(ObjectID.cacheHexString) this.__id = this.toHexString();\n}\n\n/**\n* Return the ObjectID id as a 24 byte hex string representation\n*\n* @method\n* @return {String} return the 24 byte hex string representation.\n*/\nObjectID.prototype.toHexString = function() {\n  if(ObjectID.cacheHexString && this.__id) return this.__id;\n\n  var hexString = '';\n  if(!this.id || !this.id.length) {\n    throw new Error('invalid ObjectId, ObjectId.id must be either a string or a Uint8Array, but is [' + JSON.stringify(this.id) + ']');\n  }\n\n  if(this.id instanceof Uint8Array) {\n    hexString = convertToHex(this.id);\n    if(ObjectID.cacheHexString) this.__id = hexString;\n    return hexString;\n  }\n\n  for (var i = 0; i < this.id.length; i++) {\n    hexString += hexTable[this.id.charCodeAt(i)];\n  }\n\n  if(ObjectID.cacheHexString) this.__id = hexString;\n  return hexString;\n}\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.getInc = function() {\n  return ObjectID.index = (ObjectID.index + 1) % 0xFFFFFF;\n}\n\n/**\n* Generate a 12 byte id buffer used in ObjectID's\n*\n* @method\n* @param {number} [time] optional parameter allowing to pass in a second based timestamp.\n* @return {Buffer} return the 12 byte id buffer string.\n*/\nObjectID.prototype.generate = function(time) {\n  if ('number' != typeof time) {\n    time = ~~(Date.now()/1000);\n  }\n\n  // Use pid\n  var pid = (typeof process === 'undefined' ? Math.floor(Math.random() * 100000) : process.pid) % 0xFFFF;\n  var inc = this.getInc();\n  // Buffer used\n  var buffer = new Uint8Array(12);\n  // Encode time\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Encode machine\n  buffer[6] = MACHINE_ID & 0xff;\n  buffer[5] = (MACHINE_ID >> 8) & 0xff;\n  buffer[4] = (MACHINE_ID >> 16) & 0xff;\n  // Encode pid\n  buffer[8] = pid & 0xff;\n  buffer[7] = (pid >> 8) & 0xff;\n  // Encode index\n  buffer[11] = inc & 0xff;\n  buffer[10] = (inc >> 8) & 0xff;\n  buffer[9] = (inc >> 16) & 0xff;\n  // Return the buffer\n  return buffer;\n}\n\n/**\n* Converts the id into a 24 byte hex string for printing\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toString = function() {\n  return this.toHexString();\n}\n\n/**\n* Converts to its JSON representation.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toJSON = function() {\n  return { $oid: this.toHexString() };\n}\n\n/**\n* Compares the equality of this ObjectID with `otherID`.\n*\n* @method\n* @param {Object} otherID ObjectID instance to compare against.\n* @return {Boolean} the result of comparing two ObjectID's\n*/\nObjectID.prototype.equals = function(otherId) {\n  var id;\n\n  if(otherId instanceof ObjectID) {\n    return this.toString() == otherId.toString();\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12 && this.id instanceof Uint8Array) {\n    return otherId === this.id.toString('binary');\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 24) {\n    return otherId === this.toHexString();\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12) {\n    return otherId === this.id;\n  } else if(otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {\n    return otherId.toHexString() === this.toHexString();\n  } else {\n    return false;\n  }\n}\n\n/**\n* Returns the generation date (accurate up to the second) that this ID was generated.\n*\n* @method\n* @return {date} the generation date\n*/\nObjectID.prototype.getTimestamp = function() {\n  var timestamp = new Date();\n  var time = this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n  timestamp.setTime(Math.floor(time) * 1000);\n  return timestamp;\n}\n\n/**\n* Creates an ObjectID from a hex string representation of an ObjectID.\n*\n* @method\n* @param {String} hexString create a ObjectID from a passed in 24 byte hexstring.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromHexString = function(string) {\n  // Throw an error if it's not a valid setup\n  if(typeof string === 'undefined' || string != null && string.length != 24)\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n\n  var length = string.length;\n\n  if(length > 12*2) {\n    throw new Error('Id cannot be longer than 12 bytes');\n  }\n\n  // Calculate lengths\n  var sizeof = length >> 1;\n  var array = new Uint8Array(sizeof);\n  var n = 0;\n  var i = 0;\n\n  while (i < length) {\n    array[n++] = decodeLookup[string.charCodeAt(i++)] << 4 | decodeLookup[string.charCodeAt(i++)]\n  }\n\n  return new ObjectID(array);\n}\n\n/**\n* Checks if a value is a valid bson ObjectId\n*\n* @method\n* @return {Boolean} return true if the value is a valid bson ObjectId, return false otherwise.\n*/\nObjectID.isValid = function(id) {\n  if(id == null) return false;\n\n  if(typeof id == 'number') {\n    return true;\n  }\n\n  if(typeof id == 'string') {\n    return id.length == 12 || (id.length == 24 && checkForHexRegExp.test(id));\n  }\n\n  if(id instanceof ObjectID) {\n    return true;\n  }\n\n  if(id instanceof Uint8Array) {\n    return true;\n  }\n\n  // Duck-Typing detection of ObjectId like objects\n  if(id.toHexString) {\n    return id.id.length == 12 || (id.id.length == 24 && checkForHexRegExp.test(id.id));\n  }\n\n  return false;\n}\n\n/**\n* @ignore\n*/\nObjectID.createPk = function() {\n  return new ObjectID();\n}\n\n/**\n* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\n*\n* @method\n* @param {number} time an integer number representing a number of seconds.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromTime = function(time) {\n  var buffer = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  // Encode time into first 4 bytes\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Return the new objectId\n  return new ObjectID(buffer);\n}\n\n/**\n* @ignore\n*/\nObject.defineProperty(ObjectID.prototype, \"generationTime\", {\n   enumerable: true\n , get: function () {\n     return this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n   }\n , set: function (value) {\n     // Encode time into first 4 bytes\n     this.id[3] = value & 0xff;\n     this.id[2] = (value >> 8) & 0xff;\n     this.id[1] = (value >> 16) & 0xff;\n     this.id[0] = (value >> 24) & 0xff;\n   }\n});\n\n/**\n* @ignore\n*/\nObjectID.index = ~~(Math.random() * 0xFFFFFF);\n\nmodule.exports = ObjectID;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON RegExp type.\n *\n * @class\n * @return {BSONRegExp} A MinKey instance\n */\nvar BSONRegExp = function(pattern, options) {\n  // Execute\n  this._bsontype = 'BSONRegExp';\n  this.pattern = pattern;\n  this.options = options || '';\n  // Perform validation of parameters\n  if(typeof this.pattern != 'string') throw Error('pattern must be a string');\n  if(typeof this.options != 'string') throw Error('options must be a string');\n\n  // Validate options\n  for(var i = 0; i < options.length; i++) {\n    if(!(this.options[i] == 'i'\n      || this.options[i] == 'm'\n      || this.options[i] == 'x'\n      || this.options[i] == 'l'\n      || this.options[i] == 's'\n      || this.options[i] == 'u'\n    )) {\n      throw new Error('the regular expression options [' + this.options[i] + \"] is not supported\");\n    }\n  }\n}\n\nBSONRegExp.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'BSONRegExp') return false;\n  return this.pattern == value.pattern && this.options == value.options;\n}\n\nBSONRegExp.prototype.toJSON = function() {\n  return { $regex: this.pattern, $options: this.options };\n}\n\nmodule.exports = BSONRegExp;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON Symbol type.\n *\n * @class\n * @deprecated\n * @param {String} value the string representing the symbol.\n * @return {Symbol}\n */\nvar Symbol = function(value) {\n  this._bsontype = 'Symbol';\n  this.value = value;\n}\n\n/**\n * Access the wrapped string value.\n *\n * @method\n * @return {String} returns the wrapped string.\n */\nSymbol.prototype.valueOf = function() {\n  return this.value;\n};\n\nSymbol.prototype.equals = function(value) {\n  if(!value || !value.value) return false;\n  if(value._bsontype != 'Symbol') return false;\n  return this.value === value.value;\n}\n\n/**\n * @ignore\n */\nSymbol.prototype.toJSON = function() {\n  return { $symbol: this.value };\n}\n\nmodule.exports = Symbol;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Timestamp.\n * @param {number} high the high (signed) 32 bits of the Timestamp.\n * @return {Timestamp}\n */\nvar Timestamp = function(low, high) {\n  this._bsontype = 'Timestamp';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0;  // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0;  // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nTimestamp.prototype.toInt = function() {\n  return this.low_;\n}\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nTimestamp.prototype.toNumber = function() {\n  return this.high_ * Timestamp.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n}\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {String} the JSON representation.\n */\nTimestamp.prototype.toJSON = function() {\n  return {\n    $timestamp: this.toString(),\n  };\n}\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {String} the textual representation of this value.\n */\nTimestamp.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Timestamp.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nTimestamp.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nTimestamp.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nTimestamp.prototype.getLowBitsUnsigned = function() {\n  return (this.low_ >= 0) ?\n      this.low_ : Timestamp.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Timestamp.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Timestamp.\n */\nTimestamp.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ != 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) != 0) {\n        break;\n      }\n    }\n    return this.high_ != 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {Boolean} whether this value is zero.\n */\nTimestamp.prototype.isZero = function() {\n  return this.high_ == 0 && this.low_ == 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {Boolean} whether this value is negative.\n */\nTimestamp.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {Boolean} whether this value is odd.\n */\nTimestamp.prototype.isOdd = function() {\n  return (this.low_ & 1) == 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long equals the other\n */\nTimestamp.prototype.equals = function(other) {\n  return (this.high_ == other.high_) && (this.low_ == other.low_);\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long does not equal the other.\n */\nTimestamp.prototype.notEquals = function(other) {\n  return (this.high_ != other.high_) || (this.low_ != other.low_);\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is less than the other.\n */\nTimestamp.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is less than or equal to the other.\n */\nTimestamp.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is greater than the other.\n */\nTimestamp.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is greater than or equal to the other.\n */\nTimestamp.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nTimestamp.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Timestamp} the negation of this value.\n */\nTimestamp.prototype.negate = function() {\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.MIN_VALUE;\n  } else {\n    return this.not().add(Timestamp.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to add to this one.\n * @return {Timestamp} the sum of this and the given Timestamp.\n */\nTimestamp.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to subtract from this.\n * @return {Timestamp} the difference of this and the given Timestamp.\n */\nTimestamp.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to multiply with this.\n * @return {Timestamp} the product of this and the other.\n */\nTimestamp.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Timestamp.ZERO;\n  } else if (other.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return other.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return this.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Timestamp.TWO_PWR_24_) &&\n      other.lessThan(Timestamp.TWO_PWR_24_)) {\n    return Timestamp.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Timestamp} other Long by which to divide.\n * @return {Timestamp} this Long divided by the given one.\n */\nTimestamp.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    if (other.equals(Timestamp.ONE) ||\n        other.equals(Timestamp.NEG_ONE)) {\n      return Timestamp.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Timestamp.MIN_VALUE)) {\n      return Timestamp.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Timestamp.ZERO)) {\n        return other.isNegative() ? Timestamp.ONE : Timestamp.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate().div(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Timestamp.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Timestamp.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Timestamp.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Timestamp.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Timestamp} other Long by which to mod.\n * @return {Timestamp} this Long modulo the given one.\n */\nTimestamp.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Timestamp} the bitwise-NOT of this value.\n */\nTimestamp.prototype.not = function() {\n  return Timestamp.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to AND.\n * @return {Timestamp} the bitwise-AND of this and the other.\n */\nTimestamp.prototype.and = function(other) {\n  return Timestamp.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to OR.\n * @return {Timestamp} the bitwise-OR of this and the other.\n */\nTimestamp.prototype.or = function(other) {\n  return Timestamp.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to XOR.\n * @return {Timestamp} the bitwise-XOR of this and the other.\n */\nTimestamp.prototype.xor = function(other) {\n  return Timestamp.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the left by the given amount.\n */\nTimestamp.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Timestamp.fromBits(\n                 low << numBits,\n                 (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Timestamp.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount.\n */\nTimestamp.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >> numBits);\n    } else {\n      return Timestamp.fromBits(\n                 high >> (numBits - 32),\n                 high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nTimestamp.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >>> numBits);\n    } else if (numBits == 32) {\n      return Timestamp.fromBits(high, 0);\n    } else {\n      return Timestamp.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Timestamp.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Timestamp(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Timestamp.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Timestamp.ZERO;\n  } else if (value <= -Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MIN_VALUE;\n  } else if (value + 1 >= Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MAX_VALUE;\n  } else if (value < 0) {\n    return Timestamp.fromNumber(-value).negate();\n  } else {\n    return new Timestamp(\n               (value % Timestamp.TWO_PWR_32_DBL_) | 0,\n               (value / Timestamp.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromBits = function(lowBits, highBits) {\n  return new Timestamp(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {String} str the textual representation of the Timestamp.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Timestamp.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));\n\n  var result = Timestamp.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Timestamp.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Timestamp.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Timestamp.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nTimestamp.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Timestamp} */\nTimestamp.ZERO = Timestamp.fromInt(0);\n\n/** @type {Timestamp} */\nTimestamp.ONE = Timestamp.fromInt(1);\n\n/** @type {Timestamp} */\nTimestamp.NEG_ONE = Timestamp.fromInt(-1);\n\n/** @type {Timestamp} */\nTimestamp.MAX_VALUE =\n    Timestamp.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\n/** @type {Timestamp} */\nTimestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Timestamp}\n * @ignore\n */\nTimestamp.TWO_PWR_24_ = Timestamp.fromInt(1 << 24);\n\nmodule.exports = Timestamp;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar bsonModule = __webpack_require__(5)\nvar atob = __webpack_require__(7).atob;\nvar bufferConstructor = null;\n\nif (typeof Buffer !== 'undefined') {\n  bufferConstructor = new Buffer(1) instanceof Uint8Array\n    ? Buffer\n    : Uint8Array;\n} else {\n  bufferConstructor = Uint8Array;\n}\n\nvar ExtJSON = function(module) {\n  if (module) {\n    for (var i = 0; i < BSONTypes.length; i++) {\n      if (!module[BSONTypes[i]]) throw new Error('passed in module does not contain all BSON types required');\n    }\n\n    this.bson = module;\n  } else {\n    this.bson = bsonModule;\n  }\n}\n\nExtJSON.extend = function(module) {\n  if (!module) throw new Error(\"expecting mongodb module, invoke by calling ExtJSON.extend(require('mongodb'))\")\n  // Rewrite passed in types\n  for (var i = 0; i < BSONTypes.length; i++) {\n    if (module[BSONTypes[i]]) {\n      // Add the toJSON to the passed in types\n      // This lets us modify the toJSON method withou breaking\n      // backward compatibility\n      module[BSONTypes[i]].prototype.toJSON = bsonModule[BSONTypes[i]].prototype.toJSON;\n    }\n  }\n\n  return module;\n}\n\nfunction deseralizeValue(self, value, options) {\n  if(value['$oid'] != null) {\n    return new self.bson.ObjectID(value['$oid']);\n  } else if(value['$date'] && typeof value['$date'] == 'string') {\n    return Date.parse(value['$date']);\n  } else if(value['$date'] && value['$date'] instanceof self.bson.Long) {\n    var date = new Date();\n    date.setTime(value['$date'].toNumber());\n    return date;\n  } else if(value['$binary'] != null) {\n    if (typeof Buffer !== 'undefined') {\n      if (bufferConstructor === Buffer) {\n        var data = new Buffer(value['$binary'], 'base64');\n        var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n        return new self.bson.Binary(data, type);\n      }\n    }\n\n    var data = new Uint8Array(atob(value['$binary'])\n      .split(\"\")\n      .map(function(c) {\n        return c.charCodeAt(0);\n      }));\n\n    var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n    return new self.bson.Binary(data, type);\n  } else if(value['$maxKey'] != null) {\n    return new self.bson.MaxKey();\n  } else if(value['$minKey'] != null) {\n    return new self.bson.MinKey();\n  } else if(value['$code'] != null) {\n    return new self.bson.Code(value['$code'], deseralizeValue(self, value['$scope'] || {}, options))\n  } else if(value['$numberLong'] != null) {\n    return self.bson.Long.fromString(value['$numberLong']);\n  } else if(value['$numberDouble'] != null && options.strict) {\n    return new self.bson.Double(parseFloat(value['$numberDouble']));\n  } else if(value['$numberDouble'] != null && !options.strict) {\n    return parseFloat(value['$numberDouble']);\n  } else if(value['$numberInt'] != null && options.strict) {\n    return new self.bson.Int32(parseInt(value['$numberInt'], 10));\n  } else if(value['$numberInt'] != null && !options.strict) {\n    return parseInt(value['$numberInt'], 10);\n  } else if(value['$numberDecimal'] != null) {\n    return self.bson.Decimal128.fromString(value['$numberDecimal']);\n  } else if(value['$regex'] != null) {\n    return new self.bson.BSONRegExp(value['$regex'], value['$options'] || '');\n  } else if(value['$symbol'] != null) {\n    return new self.bson.Symbol(value['$symbol']);\n  } else if(value['$ref'] != null) {\n    return new self.bson.DBRef(value['$ref'], deseralizeValue(self, value['$id'], options), value['$db']);\n  } else if(value['$timestamp'] != null) {\n    return self.bson.Timestamp.fromString(value['$timestamp']);\n  } else if(typeof value == 'number' && options.strict) {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return new self.bson.Int32(value);\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return new self.bson.Double(value);\n      } else {\n        return new self.bson.Long.fromNumber(value);\n      }\n    } else {\n      return new self.bson.Double(value);\n    }\n  } else if(typeof value == 'number' && !options.strict) {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return value;\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return value;\n      } else {\n        return new self.bson.Long.fromNumber(value);\n      }\n    } else {\n      return value;\n    }\n  } else {\n    return value;\n  }\n}\n\nExtJSON.prototype.parse = function(text, options) {\n  var self = this;\n  options = options || { strict: true };\n\n  try {\n    return JSON.parse(text, function(key, value) {\n      return deseralizeValue(self, value, options);\n    });\n  } catch(err) {\n    if (err.name === 'SyntaxError') {\n      var error = new Error(err.message);\n      error.stack = err.stack\n      throw error;\n    }\n  }\n}\n\n//\n// Serializer\n//\n\n// MAX INT32 boundaries\nvar BSON_INT32_MAX = 0x7FFFFFFF;\nvar BSON_INT32_MIN = -0x80000000;\n\n// JS MAX PRECISE VALUES\nvar JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.\n\nExtJSON.prototype.stringify = function(value, reducer, indents) {\n  var doc = null;\n\n  if(Array.isArray(value)) {\n    doc = serializeArray(value);\n  } else {\n    doc = serializeDocument(value);\n  }\n\n  return JSON.stringify(doc, reducer, indents);\n}\n\nfunction serializeArray(array) {\n  var _array = new Array(array.length);\n\n  for(var i = 0; i < array.length; i++) {\n    _array[i] = serializeValue(array[i]);\n  }\n\n  return _array;\n}\n\nfunction serializeValue(value) {\n  if(value instanceof Date) {\n    return { $date: { $numberLong: value.getTime().toString() } };\n  } else if(typeof value == 'number') {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return { $numberInt: value.toString() };\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return { $numberDouble: value.toString() };\n      } else {\n        return { $numberLong: value.toString() };\n      }\n    } else {\n      return { $numberDouble: value.toString() };\n    }\n  } else if(Array.isArray(value)) {\n    return serializeArray(value);\n  } else if(value != null && typeof value == 'object') {\n    return serializeDocument(value);\n  }\n\n  return value;\n}\n\nvar BSONTypes = ['Binary', 'Code', 'DBRef', 'Decimal128', 'Double',\n  'Int32', 'Long', 'MaxKey', 'MinKey', 'ObjectID', 'BSONRegExp', 'Symbol', 'Timestamp'];\n\nfunction serializeDocument(doc) {\n  if(doc == null || typeof doc !== 'object') throw new Error('not an object instance');\n  var _doc = {};\n\n  for(var name in doc) {\n    if(Array.isArray(doc[name])) {\n      _doc[name] = serializeArray(doc[name]);\n    } else if(doc[name] != null && doc[name]._bsontype && BSONTypes.indexOf(doc[name]._bsontype) != -1) {\n      _doc[name] = doc[name];\n    } else if(doc[name] instanceof Date) {\n      _doc[name] = serializeValue(doc[name]);\n    } else if(doc[name] != null && typeof doc[name] === 'object') {\n      _doc[name] = serializeDocument(doc[name]);\n    } else {\n      _doc[name] = serializeValue(doc[name]);\n    }\n  }\n\n  return _doc;\n}\n\n// Export the Extended BSON\nmodule.exports = ExtJSON;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// baas.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 24ef9db576f3a64a996e","export function deprecate(fn, msg) {\n  let alreadyWarned = false;\n  function deprecated() {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      console.warn('DeprecationWarning: ' + msg);\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  Object.setPrototypeOf(deprecated, fn);\n  if (fn.prototype) {\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.js","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 1\n// module chunks = 0","export const JSONTYPE = 'application/json';\nexport const USER_AUTH_KEY = '_baas_ua';\nexport const REFRESH_TOKEN_KEY = '_baas_rt';\nexport const STATE_KEY = '_baas_state';\nexport const BAAS_ERROR_KEY = '_baas_error';\nexport const BAAS_LINK_KEY = '_baas_link';\nexport const IMPERSONATION_ACTIVE_KEY = '_baas_impers_active';\nexport const IMPERSONATION_USER_KEY = '_baas_impers_user';\nexport const IMPERSONATION_REAL_USER_AUTH_KEY = '_baas_impers_real_ua';\nexport const USER_AUTH_COOKIE_NAME = 'baas_ua';\nexport const DEFAULT_BAAS_SERVER_URL = 'https://master.baas-dev.10gen.cc';\n\nexport const checkStatus = (response) => {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  let error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n};\n\nexport const makeFetchArgs = (method, body) => {\n  const init = {\n    method: method,\n    headers: { 'Accept': JSONTYPE, 'Content-Type': JSONTYPE }\n  };\n\n  if (body) {\n    init.body = body;\n  }\n  init.cors = true;\n  return init;\n};\n\nexport const parseRedirectFragment = (fragment, ourState) => {\n  // After being redirected from oauth, the URL will look like:\n  // https://todo.examples.master.baas-dev.10gen.cc/#_baas_state=...&_baas_ua=...\n  // This function parses out baas-specific tokens from the fragment and\n  // builds an object describing the result.\n  const vars = fragment.split('&');\n  const result = { ua: null, found: false, stateValid: false, lastError: null };\n  let shouldBreak = false;\n  for (const pair of vars) {\n    let pairParts = pair.split('=');\n    const pairKey = decodeURIComponent(pairParts[0]);\n    switch (pairKey) {\n    case BAAS_ERROR_KEY:\n      result.lastError = decodeURIComponent(pairParts[1]);\n      result.found = true;\n      shouldBreak = true;\n      break;\n    case USER_AUTH_KEY:\n      result.ua = JSON.parse(window.atob(decodeURIComponent(pairParts[1])));\n      result.found = true;\n      continue;\n    case BAAS_LINK_KEY:\n      result.found = true;\n      continue;\n    case STATE_KEY:\n      result.found = true;\n      let theirState = decodeURIComponent(pairParts[1]);\n      if (ourState && ourState === theirState) {\n        result.stateValid = true;\n      }\n      continue;\n    default: continue;\n    }\n\n    if (shouldBreak) {\n      break;\n    }\n  }\n\n  return result;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/common.js","/**\n * Creates a new BaasError\n *\n * @class\n * @augments Error\n * @param {String} message The error message.\n * @param {Object} code The error code.\n * @return {BaasError} A BaasError instance.\n */\nexport class BaasError extends Error {\n  constructor(message, code) {\n    super(message);\n    this.name = 'BaasError';\n    this.message = message;\n    if (code !== undefined) {\n      this.code = code;\n    }\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = (new Error(message)).stack;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/errors.js","var ExtJSON = require('./lib/ext_json');\nExtJSON.BSON = require('./lib/bson');\n\nmodule.exports = ExtJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/index.js\n// module id = 4\n// module chunks = 0","\"use strict\";\n\nvar Binary = require('./binary');\nvar Code = require('./code');\nvar DBRef = require('./db_ref');\nvar Decimal128 = require('./decimal128');\nvar Double = require('./double');\nvar Int32 = require('./int_32');\nvar Long = require('./long');\nvar MaxKey = require('./max_key');\nvar MinKey = require('./min_key');\nvar ObjectID = require('./objectid');\nvar BSONRegExp = require('./regexp');\nvar Symbol = require('./symbol');\nvar Timestamp = require('./timestamp');\n\nmodule.exports = {\n  Binary: Binary, Code: Code, DBRef: DBRef, Decimal128: Decimal128, Double: Double,\n  Int32: Int32, Long: Long, MaxKey: MaxKey, MinKey: MinKey, ObjectID: ObjectID,\n  BSONRegExp: BSONRegExp, Symbol: Symbol, Timestamp: Timestamp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/index.js\n// module id = 5\n// module chunks = 0","\"use strict\";\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Long.\n * @param {number} high the high (signed) 32 bits of the Long.\n * @return {Long}\n */\nvar Long = function(low, high) {\n  this._bsontype = 'Long';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0;  // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0;  // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nLong.prototype.toInt = function() {\n  return this.low_;\n}\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nLong.prototype.toNumber = function() {\n  return this.high_ * Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n}\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {String} the JSON representation.\n */\nLong.prototype.toJSON = function() {\n  return { $numberLong: this.toString() };\n}\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {String} the textual representation of this value.\n */\nLong.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Long.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nLong.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nLong.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nLong.prototype.getLowBitsUnsigned = function() {\n  return (this.low_ >= 0) ?\n      this.low_ : Long.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Long.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Long.\n */\nLong.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ != 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) != 0) {\n        break;\n      }\n    }\n    return this.high_ != 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {Boolean} whether this value is zero.\n */\nLong.prototype.isZero = function() {\n  return this.high_ == 0 && this.low_ == 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {Boolean} whether this value is negative.\n */\nLong.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {Boolean} whether this value is odd.\n */\nLong.prototype.isOdd = function() {\n  return (this.low_ & 1) == 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long equals the other\n */\nLong.prototype.equals = function(other) {\n  return (this.high_ == other.high_) && (this.low_ == other.low_);\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long does not equal the other.\n */\nLong.prototype.notEquals = function(other) {\n  return (this.high_ != other.high_) || (this.low_ != other.low_);\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is less than the other.\n */\nLong.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is less than or equal to the other.\n */\nLong.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is greater than the other.\n */\nLong.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is greater than or equal to the other.\n */\nLong.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nLong.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Long} the negation of this value.\n */\nLong.prototype.negate = function() {\n  if (this.equals(Long.MIN_VALUE)) {\n    return Long.MIN_VALUE;\n  } else {\n    return this.not().add(Long.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Long.\n *\n * @method\n * @param {Long} other Long to add to this one.\n * @return {Long} the sum of this and the given Long.\n */\nLong.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Long.\n *\n * @method\n * @param {Long} other Long to subtract from this.\n * @return {Long} the difference of this and the given Long.\n */\nLong.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Long.\n *\n * @method\n * @param {Long} other Long to multiply with this.\n * @return {Long} the product of this and the other.\n */\nLong.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Long.ZERO;\n  } else if (other.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    return other.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Long.TWO_PWR_24_) &&\n      other.lessThan(Long.TWO_PWR_24_)) {\n    return Long.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Long} other Long by which to divide.\n * @return {Long} this Long divided by the given one.\n */\nLong.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    if (other.equals(Long.ONE) ||\n        other.equals(Long.NEG_ONE)) {\n      return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Long.MIN_VALUE)) {\n      return Long.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Long.ZERO)) {\n        return other.isNegative() ? Long.ONE : Long.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate().div(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Long.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Long.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Long.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Long.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Long} other Long by which to mod.\n * @return {Long} this Long modulo the given one.\n */\nLong.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Long} the bitwise-NOT of this value.\n */\nLong.prototype.not = function() {\n  return Long.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to AND.\n * @return {Long} the bitwise-AND of this and the other.\n */\nLong.prototype.and = function(other) {\n  return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to OR.\n * @return {Long} the bitwise-OR of this and the other.\n */\nLong.prototype.or = function(other) {\n  return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to XOR.\n * @return {Long} the bitwise-XOR of this and the other.\n */\nLong.prototype.xor = function(other) {\n  return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the left by the given amount.\n */\nLong.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Long.fromBits(\n                 low << numBits,\n                 (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Long.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount.\n */\nLong.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >> numBits);\n    } else {\n      return Long.fromBits(\n                 high >> (numBits - 32),\n                 high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nLong.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >>> numBits);\n    } else if (numBits == 32) {\n      return Long.fromBits(high, 0);\n    } else {\n      return Long.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Long.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Long(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Long.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Long.ZERO;\n  } else if (value <= -Long.TWO_PWR_63_DBL_) {\n    return Long.MIN_VALUE;\n  } else if (value + 1 >= Long.TWO_PWR_63_DBL_) {\n    return Long.MAX_VALUE;\n  } else if (value < 0) {\n    return Long.fromNumber(-value).negate();\n  } else {\n    return new Long(\n               (value % Long.TWO_PWR_32_DBL_) | 0,\n               (value / Long.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Long} the corresponding Long value.\n */\nLong.fromBits = function(lowBits, highBits) {\n  return new Long(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {String} str the textual representation of the Long.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Long} the corresponding Long value.\n */\nLong.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Long.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 8));\n\n  var result = Long.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Long.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Long.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Long.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nLong.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Long} */\nLong.ZERO = Long.fromInt(0);\n\n/** @type {Long} */\nLong.ONE = Long.fromInt(1);\n\n/** @type {Long} */\nLong.NEG_ONE = Long.fromInt(-1);\n\n/** @type {Long} */\nLong.MAX_VALUE =\n    Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\n/** @type {Long} */\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Long}\n * @ignore\n */\nLong.TWO_PWR_24_ = Long.fromInt(1 << 24);\n\nmodule.exports = Long;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/long.js\n// module id = 6\n// module chunks = 0","\"use strict\";\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction btoa(input) {\n  var str = String(input);\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars, output = '';\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3/4);\n    if (charCode > 0xFF) {\n      throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n};\n\nfunction atob(input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n};\n\nmodule.exports = {\n  btoa: btoa, atob: atob,\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/shared.js\n// module id = 7\n// module chunks = 0","/* global window, fetch */\n/* eslint no-labels: ['error', { 'allowLoop': true }] */\nimport 'fetch-everywhere';\nimport Auth from './auth';\nimport MongoDBService from './services/mongodb/mongodb_service';\nimport { BaasError } from './errors';\nimport * as common from './common';\nimport ExtJSONModule from 'mongodb-extjson';\nconst EJSON = new ExtJSONModule();\n\nconst ErrAuthProviderNotFound = 'AuthProviderNotFound';\nconst ErrInvalidSession = 'InvalidSession';\nconst ErrUnauthorized = 'Unauthorized';\n\nconst toQueryString = (obj) => {\n  let parts = [];\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      parts.push(encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]));\n    }\n  }\n  return parts.join('&');\n};\n\n\n/**\n * Create a new BaasClient instance.\n *\n * @class\n * @return {BaasClient} a BaasClient instance.\n */\nclass BaasClient {\n  constructor(clientAppID, options) {\n    let baseUrl = common.DEFAULT_BAAS_SERVER_URL;\n    if (options && options.baseUrl) {\n      baseUrl = options.baseUrl;\n    }\n    this.appUrl = `${baseUrl}/api/public/v1.0`;\n    this.authUrl = `${baseUrl}/api/public/v1.0/auth`;\n    if (clientAppID) {\n      this.appUrl = `${baseUrl}/api/client/v1.0/app/${clientAppID}`;\n      this.authUrl = `${this.appUrl}/auth`;\n    }\n    this.authManager = new Auth(this.authUrl);\n    this.authManager.handleRedirect();\n    this.authManager.handleCookie();\n  }\n\n  /**\n   * Sends the user to the OAuth flow for the specified third-party service.\n   *\n   * @param {*} providerName The OAuth provider name.\n   * @param {*} redirectUrl The redirect URL to use after the flow completes.\n   */\n  authWithOAuth(providerName, redirectUrl) {\n    window.location.replace(this.authManager.getOAuthLoginURL(providerName, redirectUrl));\n  }\n\n  /**\n   * Generates a URL that can be used to initiate an OAuth login flow with the specified OAuth provider.\n   *\n   * @param {*} providerName The OAuth provider name.\n   * @param {*} redirectUrlThe redirect URL to use after the flow completes.\n   */\n  getOAuthLoginURL(providerName, redirectUrl) {\n    return this.authManager.getOAuthLoginURL(providerName, redirectUrl);\n  }\n\n  /**\n   * Logs in as an anonymous user.\n   */\n  anonymousAuth() {\n    return this.authManager.anonymousAuth();\n  }\n\n  /**\n   *  @return {String} Returns the currently authed user's ID.\n   */\n  authedId() {\n    return this.authManager.authedId();\n  }\n\n  /**\n   * @return {Object} Returns the currently authed user's authentication information.\n   */\n  auth() {\n    return this.authManager.get();\n  }\n\n  /**\n   * @return {*} Returns any error from the BaaS authentication system.\n   */\n  authError() {\n    return this.authManager.error();\n  }\n\n  /**\n   * Ends the session for the current user.\n   */\n  logout() {\n    return this._do('/auth', 'DELETE', {refreshOnFailure: false, useRefreshToken: true})\n      .then(() => this.authManager.clear());\n  }\n\n  /**\n   * Factory method for accessing BaaS services.\n   *\n   * @method\n   * @param {String} type The service type [mongodb, {String}]\n   * @param {String} name The service name.\n   * @return {Object} returns a named service.\n   */\n  service(type, name) {\n    if (this.constructor !== BaasClient) {\n      throw new BaasError('`service` is a factory method, do not use `new`');\n    }\n\n    if (type === 'mongodb') {\n      return new MongoDBService(this, name);\n    }\n\n    throw new BaasError('Invalid service type specified: ' + type);\n  }\n\n  /**\n   * Executes a service pipeline.\n   *\n   * @param {Array} stages Stages to process.\n   * @param {Object} [options] Additional options to pass to the execution context.\n   */\n  executePipeline(stages, options = {}) {\n    let responseDecoder = (d) => EJSON.parse(d, { strict: false });\n    let responseEncoder = (d) => EJSON.stringify(d);\n\n    if (options.decoder) {\n      if ((typeof options.decoder) !== 'function') {\n        throw new Error('decoder option must be a function, but \"' + typeof (options.decoder) + '\" was provided');\n      }\n      responseDecoder = options.decoder;\n    }\n\n    if (options.encoder) {\n      if ((typeof options.encoder) !== 'function') {\n        throw new Error('encoder option must be a function, but \"' + typeof (options.encoder) + '\" was provided');\n      }\n      responseEncoder = options.encoder;\n    }\n\n    return this._do('/pipeline', 'POST', { body: responseEncoder(stages) })\n      .then(response => response.text())\n      .then(body => responseDecoder(body));\n  }\n\n  _do(resource, method, options) {\n    options = Object.assign({}, {\n      refreshOnFailure: true,\n      useRefreshToken: false\n    }, options);\n\n    if (!options.noAuth) {\n      if (this.auth() === null) {\n        return Promise.reject(new BaasError('Must auth first', ErrUnauthorized));\n      }\n    }\n\n    let url = `${this.appUrl}${resource}`;\n    let fetchArgs = common.makeFetchArgs(method, options.body);\n\n    if (!!options.headers) {\n      Object.assign(fetchArgs.headers, options.headers);\n    }\n\n    if (!options.noAuth) {\n      let token = options.useRefreshToken ? this.authManager.getRefreshToken() : this.auth().accessToken;\n      fetchArgs.headers.Authorization = `Bearer ${token}`;\n    }\n\n    if (options.queryParams) {\n      url = url + '?' + toQueryString(options.queryParams);\n    }\n\n    return fetch(url, fetchArgs).then((response) => {\n      // Okay: passthrough\n      if (response.status >= 200 && response.status < 300) {\n        return Promise.resolve(response);\n      }\n\n      if (response.headers.get('Content-Type') === common.JSONTYPE) {\n        return response.json().then((json) => {\n          // Only want to try refreshing token when there's an invalid session\n          if ('errorCode' in json && json.errorCode === ErrInvalidSession) {\n            if (!options.refreshOnFailure) {\n              this.authManager.clear();\n              const error = new BaasError(json.error, json.errorCode);\n              error.response = response;\n              error.json = json;\n              throw error;\n            }\n\n            return this._refreshToken().then(() => {\n              options.refreshOnFailure = false;\n              return this._do(resource, method, options);\n            });\n          }\n\n          const error = new BaasError(json.error, json.errorCode);\n          error.response = response;\n          error.json = json;\n          return Promise.reject(error);\n        });\n      }\n\n      const error = new Error(response.statusText);\n      error.response = response;\n\n      return Promise.reject(error);\n    });\n  }\n\n  _refreshToken() {\n    if (this.authManager.isImpersonatingUser()) {\n      return this.authManager.refreshImpersonation(this);\n    }\n\n    return this._do('/auth/newAccessToken', 'POST', { refreshOnFailure: false, useRefreshToken: true })\n      .then(response => response.json())\n      .then(json => this.authManager.setAccessToken(json.accessToken));\n  }\n}\n\nclass Admin {\n  constructor(baseUrl) {\n    this.client = new BaasClient('', {baseUrl});\n  }\n\n  _do(url, method, options) {\n    return this.client._do(url, method, options)\n      .then(response => response.json());\n  }\n\n  _get(url, queryParams) {\n    return this._do(url, 'GET', {queryParams});\n  }\n\n  _put(url, options) {\n    return this._do(url, 'PUT', options);\n  }\n\n  _delete(url) {\n    return this._do(url, 'DELETE');\n  }\n\n  _post(url, body) {\n    return this._do(url, 'POST', {body: JSON.stringify(body)});\n  }\n\n  profile() {\n    let root = this;\n    return {\n      keys: () => ({\n        list: () => root._get('/profile/keys'),\n        create: (key) => root._post('/profile/keys'),\n        apiKey: (keyId) => ({\n          get: () => root._get(`/profile/keys/${keyId}`),\n          remove: () => this._delete(`/profile/keys/${keyId}`),\n          enable: () => root._put(`/profile/keys/${keyId}/enable`),\n          disable: () => root._put(`/profile/keys/${keyId}/disable`)\n        })\n      })\n    };\n  }\n\n  /* Examples of how to access admin API with this client:\n   *\n   * List all apps\n   *    a.apps('580e6d055b199c221fcb821c').list()\n   *\n   * Fetch app under name 'planner'\n   *    a.apps('580e6d055b199c221fcb821c').app('planner').get()\n   *\n   * List services under the app 'planner'\n   *    a.apps('580e6d055b199c221fcb821c').app('planner').services().list()\n   *\n   * Delete a rule by ID\n   *    a.apps('580e6d055b199c221fcb821c').app('planner').services().service('mdb1').rules().rule('580e6d055b199c221fcb821d').remove()\n   *\n   */\n  apps(groupId) {\n    let root = this;\n    return {\n      list: () => root._get(`/groups/${groupId}/apps`),\n      create: (data, options) => {\n        let query = (options && options.defaults) ? '?defaults=true' : '';\n        return root._post(`/groups/${groupId}/apps` + query, data);\n      },\n\n      app: (appID) => ({\n        get: () => root._get(`/groups/${groupId}/apps/${appID}`),\n        remove: () => root._delete(`/groups/${groupId}/apps/${appID}`),\n        replace: (doc) => root._put(`/groups/${groupId}/apps/${appID}`, {\n          headers: { 'X-Baas-Unsafe': appID },\n          body: JSON.stringify(doc)\n        }),\n\n        users: () => ({\n          list: (filter) => this._get(`/groups/${groupId}/apps/${appID}/users`, filter),\n          user: (uid) => ({\n            get: () => this._get(`/groups/${groupId}/apps/${appID}/users/${uid}`),\n            logout: () => this._put(`/groups/${groupId}/apps/${appID}/users/${uid}/logout`)\n          })\n        }),\n\n        sandbox: () => ({\n          executePipeline: (data, userId) => {\n            return this._do(\n              `/groups/${groupId}/apps/${appID}/sandbox/pipeline`,\n              'POST',\n              {body: JSON.stringify(data), queryParams: {user_id: userId}});\n          }\n        }),\n\n        authProviders: () => ({\n          create: (data) => this._post(`/groups/${groupId}/apps/${appID}/authProviders`, data),\n          list: () => this._get(`/groups/${groupId}/apps/${appID}/authProviders`),\n          provider: (authType, authName) => ({\n            get: () => this._get(`/groups/${groupId}/apps/${appID}/authProviders/${authType}/${authName}`),\n            remove: () => this._delete(`/groups/${groupId}/apps/${appID}/authProviders/${authType}/${authName}`),\n            update: (data) => this._post(`/groups/${groupId}/apps/${appID}/authProviders/${authType}/${authName}`, data)\n          })\n        }),\n        values: () => ({\n          list: () => this._get(`/groups/${groupId}/apps/${appID}/values`),\n          value: (varName) => ({\n            get: () => this._get(`/groups/${groupId}/apps/${appID}/values/${varName}`),\n            remove: () => this._delete(`/groups/${groupId}/apps/${appID}/values/${varName}`),\n            create: (data) => this._post(`/groups/${groupId}/apps/${appID}/values/${varName}`, data),\n            update: (data) => this._post(`/groups/${groupId}/apps/${appID}/values/${varName}`, data)\n          })\n        }),\n        pipelines: () => ({\n          list: () => this._get(`/groups/${groupId}/apps/${appID}/pipelines`),\n          pipeline: (varName) => ({\n            get: () => this._get(`/groups/${groupId}/apps/${appID}/pipelines/${varName}`),\n            remove: () => this._delete(`/groups/${groupId}/apps/${appID}/pipelines/${varName}`),\n            create: (data) => this._post(`/groups/${groupId}/apps/${appID}/pipelines/${varName}`, data),\n            update: (data) => this._post(`/groups/${groupId}/apps/${appID}/pipelines/${varName}`, data)\n          })\n        }),\n        logs: () => ({\n          get: (filter) => this._get(`/groups/${groupId}/apps/${appID}/logs`, filter)\n        }),\n        apiKeys: () => ({\n          list: () => this._get(`/groups/${groupId}/apps/${appID}/keys`),\n          create: (data) => this._post(`/groups/${groupId}/apps/${appID}/keys`, data),\n          apiKey: (key) => ({\n            get: () => this._get(`/groups/${groupId}/apps/${appID}/keys/${key}`),\n            remove: () => this._delete(`/groups/${groupId}/apps/${appID}/keys/${key}`),\n            enable: () => this._put(`/groups/${groupId}/apps/${appID}/keys/${key}/enable`),\n            disable: () => this._put(`/groups/${groupId}/apps/${appID}/keys/${key}/disable`)\n          })\n        }),\n        services: () => ({\n          list: () => this._get(`/groups/${groupId}/apps/${appID}/services`),\n          create: (data) => this._post(`/groups/${groupId}/apps/${appID}/services`, data),\n          service: (svc) => ({\n            get: () => this._get(`/groups/${groupId}/apps/${appID}/services/${svc}`),\n            update: (data) => this._post(`/groups/${groupId}/apps/${appID}/services/${svc}`, data),\n            remove: () => this._delete(`/groups/${groupId}/apps/${appID}/services/${svc}`),\n            setConfig: (data) => this._post(`/groups/${groupId}/apps/${appID}/services/${svc}/config`, data),\n\n            rules: () => ({\n              list: () => this._get(`/groups/${groupId}/apps/${appID}/services/${svc}/rules`),\n              create: (data) => this._post(`/groups/${groupId}/apps/${appID}/services/${svc}/rules`),\n              rule: (ruleId) => ({\n                get: () => this._get(`/groups/${groupId}/apps/${appID}/services/${svc}/rules/${ruleId}`),\n                update: (data) => this._post(`/groups/${groupId}/apps/${appID}/services/${svc}/rules/${ruleId}`, data),\n                remove: () => this._delete(`/groups/${groupId}/apps/${appID}/services/${svc}/rules/${ruleId}`)\n              })\n            }),\n\n            incomingWebhooks: () => ({\n              list: () => this._get(`/groups/${groupId}/apps/${appID}/services/${svc}/incomingWebhooks`),\n              create: (data) => this._post(`/groups/${groupId}/apps/${appID}/services/${svc}/incomingWebhooks`),\n              incomingWebhook: (incomingWebhookId) => ({\n                get: () => this._get(`/groups/${groupId}/apps/${appID}/services/${svc}/incomingWebhooks/${incomingWebhookId}`),\n                update: (data) => this._post(`/groups/${groupId}/apps/${appID}/services/${svc}/incomingWebhooks/${incomingWebhookId}`, data),\n                remove: () => this._delete(`/groups/${groupId}/apps/${appID}/services/${svc}/incomingWebhooks/${incomingWebhookId}`)\n              })\n            })\n          })\n        })\n      })\n    };\n  }\n\n  _admin() {\n    return {\n      logs: () => ({\n        get: (filter) => this._do('/admin/logs', 'GET', {useRefreshToken: true, queryParams: filter})\n      }),\n      users: () => ({\n        list: (filter) => this._do('/admin/users', 'GET', {useRefreshToken: true, queryParams: filter}),\n        user: (uid) => ({\n          logout: () => this._do(`/admin/users/${uid}/logout`, 'PUT', {useRefreshToken: true})\n        })\n      })\n    };\n  }\n\n  _isImpersonatingUser() {\n    return this.client.authManager.isImpersonatingUser();\n  }\n\n  _startImpersonation(userId) {\n    return this.client.authManager.startImpersonation(this.client, userId);\n  }\n\n  _stopImpersonation() {\n    return this.client.authManager.stopImpersonation();\n  }\n}\n\nexport {\n  BaasClient,\n  Admin,\n  ErrAuthProviderNotFound,\n  ErrInvalidSession,\n  ErrUnauthorized,\n  toQueryString\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/client.js","/* global window, document, fetch */\n\nimport { createStorage } from './storage';\nimport { BaasError } from './errors';\nimport * as common from './common';\n\nexport default class Auth {\n  constructor(rootUrl) {\n    this.rootUrl = rootUrl;\n    this.authDataStorage = createStorage('localStorage');\n  }\n\n  pageRootUrl() {\n    return [window.location.protocol, '//', window.location.host, window.location.pathname].join('');\n  }\n\n  // The state we generate is to be used for any kind of request where we will\n  // complete an authentication flow via a redirect. We store the generate in\n  // a local storage bound to the app's origin. This ensures that any time we\n  // receive a redirect, there must be a state parameter and it must match\n  // what we ourselves have generated. This state MUST only be sent to\n  // a trusted BaaS endpoint in order to preserve its integrity. BaaS will\n  // store it in some way on its origin (currently a cookie stored on this client)\n  // and use that state at the end of an auth flow as a parameter in the redirect URI.\n  static generateState() {\n    let alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let state = '';\n    const stateLength = 64;\n    for (let i = 0; i < stateLength; i++) {\n      let pos = Math.floor(Math.random() * alpha.length);\n      state += alpha.substring(pos, pos + 1);\n    }\n\n    return state;\n  }\n\n  setAccessToken(token) {\n    let currAuth = this.get();\n    currAuth.accessToken = token;\n    currAuth.refreshToken = this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n    this.set(currAuth);\n  }\n\n  error() {\n    return this._error;\n  }\n\n  handleRedirect() {\n    if (typeof (window) === 'undefined') {\n      // This means we're running in some environment other\n      // than a browser - so handling a redirect makes no sense here.\n      return;\n    }\n    if (!window.location || !window.location.hash) {\n      return;\n    }\n\n    let ourState = this.authDataStorage.get(common.STATE_KEY);\n    let redirectFragment = window.location.hash.substring(1);\n    const redirectState = common.parseRedirectFragment(redirectFragment, ourState);\n    if (redirectState.lastError) {\n      console.error(`BaasClient: error from redirect: ${redirectState.lastError}`);\n      this._error = redirectState.lastError;\n      window.history.replaceState(null, '', this.pageRootUrl());\n      return;\n    }\n\n    if (!redirectState.found) {\n      return;\n    }\n\n    this.authDataStorage.remove(common.STATE_KEY);\n    if (!redirectState.stateValid) {\n      console.error('BaasClient: state values did not match!');\n      window.history.replaceState(null, '', this.pageRootUrl());\n      return;\n    }\n\n    if (!redirectState.ua) {\n      console.error('BaasClient: no UA value was returned from redirect!');\n      return;\n    }\n\n    // If we get here, the state is valid - set auth appropriately.\n    this.set(redirectState.ua);\n    window.history.replaceState(null, '', this.pageRootUrl());\n  }\n\n  getCookie(name) {\n    let splitCookies = document.cookie.split(' ');\n    for (let i = 0; i < splitCookies.length; i++) {\n      let cookie = splitCookies[0];\n      let sepIdx = cookie.indexOf('=');\n      let cookieName = cookie.substring(0, sepIdx);\n      if (cookieName === name) {\n        let cookieVal = cookie.substring(sepIdx + 1, cookie.length);\n        if (cookieVal[cookieVal.length - 1] === ';') {\n          return cookieVal.substring(0, cookie.length - 1);\n        }\n        return cookieVal;\n      }\n    }\n  }\n\n  handleCookie() {\n    if (typeof (window) === 'undefined' || typeof (document) === 'undefined') {\n      // This means we're running in some environment other\n      // than a browser - so handling a cookie makes no sense here.\n      return;\n    }\n    if (!document.cookie) {\n      return;\n    }\n\n    let uaCookie = this.getCookie(common.USER_AUTH_COOKIE_NAME);\n    if (!uaCookie) {\n      return;\n    }\n    document.cookie = `${common.USER_AUTH_COOKIE_NAME}=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT;`;\n\n    let ua = JSON.parse(window.atob(uaCookie));\n    this.set(ua);\n  }\n\n  getOAuthLoginURL(providerName, redirectUrl) {\n    if (redirectUrl === undefined) {\n      redirectUrl = this.pageRootUrl();\n    }\n\n    let state = Auth.generateState();\n    this.authDataStorage.set(common.STATE_KEY, state);\n    let result = `${this.rootUrl}/oauth2/${providerName}?redirect=${encodeURI(redirectUrl)}&state=${state}`;\n    return result;\n  }\n\n  anonymousAuth() {\n    let fetchArgs = common.makeFetchArgs('GET');\n    fetchArgs.cors = true;\n\n    return fetch(`${this.rootUrl}/anon/user`, fetchArgs)\n      .then(common.checkStatus)\n      .then(response => response.json())\n      .then(json => this.set(json));\n  }\n\n  apiKeyAuth(key) {\n    const fetchArgs = common.makeFetchArgs('POST', JSON.stringify({'key': key}));\n    fetchArgs.cors = true;\n\n    return fetch(`${this.rootUrl}/api/key`, fetchArgs)\n      .then(common.checkStatus)\n      .then(response => response.json())\n      .then(json => this.set(json));\n  }\n\n  localAuth(username, password, options = {cors: true}) {\n    const fetchArgs = common.makeFetchArgs('POST', JSON.stringify({username, password}));\n    fetchArgs.cors = true;\n\n    return fetch(`${this.rootUrl}/local/userpass`, fetchArgs)\n      .then(common.checkStatus)\n      .then(response => response.json())\n      .then(json => {\n        this.set(json);\n        return json;\n      });\n  }\n\n  mongodbCloudAuth(username, apiKey, options = {cors: true, cookie: false}) {\n    const fetchArgs = common.makeFetchArgs('POST', JSON.stringify({username, apiKey}));\n    fetchArgs.cors = true;\n    fetchArgs.credentials = 'include';\n\n    let url = `${this.rootUrl}/mongodb/cloud`;\n    if (!options.cookie) {\n      return fetch(url, fetchArgs)\n        .then(common.checkStatus)\n        .then(response => response.json())\n        .then(json => {\n          this.set(json);\n          return json;\n        });\n    }\n\n    return fetch(url + '?cookie=true', fetchArgs)\n      .then(common.checkStatus);\n  }\n\n  clear() {\n    this.authDataStorage.remove(common.USER_AUTH_KEY);\n    this.authDataStorage.remove(common.REFRESH_TOKEN_KEY);\n    this.clearImpersonation();\n  }\n\n  getRefreshToken() {\n    return this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n  }\n\n  set(json) {\n    let rt = json.refreshToken;\n    delete json.refreshToken;\n\n    this.authDataStorage.set(common.USER_AUTH_KEY, JSON.stringify(json));\n    this.authDataStorage.set(common.REFRESH_TOKEN_KEY, rt);\n  }\n\n  get() {\n    if (!this.authDataStorage.get(common.USER_AUTH_KEY)) {\n      return null;\n    }\n\n    const item = this.authDataStorage.get(common.USER_AUTH_KEY);\n    try {\n      return JSON.parse(item);\n    } catch (e) {\n      // Need to back out and clear auth otherwise we will never\n      // be able to do anything useful.\n      this.clear();\n      throw new BaasError('Failure retrieving stored auth');\n    }\n  }\n\n  authedId() {\n    return ((this.get() || {}).user || {})._id;\n  }\n\n  isImpersonatingUser() {\n    return this.authDataStorage.get(common.IMPERSONATION_ACTIVE_KEY) === 'true';\n  }\n\n  refreshImpersonation(client) {\n    let userId = this.authDataStorage.get(common.IMPERSONATION_USER_KEY);\n    return client._do(`/admin/users/${userId}/impersonate`, 'POST', { refreshOnFailure: false, useRefreshToken: true })\n      .then(response => response.json())\n      .then(json => {\n        json.refreshToken = this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n        this.set(json);\n      })\n      .catch(e => {\n        this.stopImpersonation();\n        throw e;  // rethrow\n      });\n  }\n\n  startImpersonation(client, userId) {\n    if (this.get() === null) {\n      return Promise.reject(new BaasError('Must auth first'));\n    }\n\n    if (this.isImpersonatingUser()) {\n      return Promise.reject(new BaasError('Already impersonating a user'));\n    }\n\n    this.authDataStorage.set(common.IMPERSONATION_ACTIVE_KEY, 'true');\n    this.authDataStorage.set(common.IMPERSONATION_USER_KEY, userId);\n\n    let realUserAuth = JSON.parse(this.authDataStorage.get(common.USER_AUTH_KEY));\n    realUserAuth.refreshToken = this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n    this.authDataStorage.set(common.IMPERSONATION_REAL_USER_AUTH_KEY, JSON.stringify(realUserAuth));\n    return this.refreshImpersonation(client);\n  }\n\n  stopImpersonation() {\n    if (!this.isImpersonatingUser()) {\n      throw new BaasError('Not impersonating a user');\n    }\n\n    return new Promise((resolve, reject) => {\n      let realUserAuth = JSON.parse(this.authDataStorage.get(common.IMPERSONATION_REAL_USER_AUTH_KEY));\n      this.set(realUserAuth);\n      this.clearImpersonation();\n      resolve();\n    });\n  }\n\n  clearImpersonation() {\n    this.authDataStorage.remove(common.IMPERSONATION_ACTIVE_KEY);\n    this.authDataStorage.remove(common.IMPERSONATION_USER_KEY);\n    this.authDataStorage.remove(common.IMPERSONATION_REAL_USER_AUTH_KEY);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/auth.js","import { BaasClient, Admin } from './client';\n\nexport {\n  BaasClient,\n  Admin\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { deprecate } from '../../util';\nimport { BSON } from 'mongodb-extjson';\nconst { ObjectID } = BSON;\n\n/**\n * Create a new Collection instance (not meant to be instantiated directly).\n *\n * @class\n * @return {Collection} a Collection instance.\n */\nclass Collection {\n  constructor(db, name) {\n    this.db = db;\n    this.name = name;\n  }\n\n  /**\n   * Inserts a single document.\n   *\n   * @method\n   * @param {Object} doc The document to insert.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} a Promise for the operation.\n   */\n  insertOne(doc, options = {}) {\n    return insertOp(this, doc, options);\n  }\n\n  /**\n   * Inserts multiple documents.\n   *\n   * @method\n   * @param {Array} docs The documents to insert.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} Returns a Promise for the operation.\n   */\n  insertMany(docs, options = {}) {\n    return insertOp(this, docs, options);\n  }\n\n  /**\n   * Deletes a single document.\n   *\n   * @method\n   * @param {Object} query The query used to match a single document.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} Returns a Promise for the operation.\n   */\n  deleteOne(query, options = {}) {\n    return deleteOp(this, query, Object.assign({}, options, { singleDoc: true }));\n  }\n\n  /**\n   * Deletes all documents matching query.\n   *\n   * @method\n   * @param {Object} query The query used to match the documents to delete.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} Returns a Promise for the operation.\n   */\n  deleteMany(query, options = {}) {\n    return deleteOp(this, query, Object.assign({}, options, { singleDoc: false }));\n  }\n\n  /**\n   * Updates a single document.\n   *\n   * @method\n   * @param {Object} query The query used to match a single document.\n   * @param {Object} update The update operations to perform on the matching document.\n   * @param {Object} [options] Additional options object.\n   * @param {Boolean} [options.upsert=false] Perform an upsert operation.\n   * @return {Promise<Object, Error>} A Promise for the operation.\n   */\n  updateOne(query, update, options = {}) {\n    return updateOp(this, query, update, Object.assign({}, options, { multi: false }));\n  }\n\n  /**\n   * Updates multiple documents.\n   *\n   * @method\n   * @param {Object} query The query used to match the documents.\n   * @param {Object} update The update operations to perform on the matching documents.\n   * @param {Object} [options] Additional options object.\n   * @param {Boolean} [options.upsert=false] Perform an upsert operation.\n   * @return {Promise<Object, Error>} Returns a Promise for the operation.\n   */\n  updateMany(query, update, options = {}) {\n    return updateOp(this, query, update, Object.assign({}, options, { multi: true }));\n  }\n\n  /**\n   * Finds documents.\n   *\n   * @method\n   * @param {Object} query The query used to match documents.\n   * @param {Object} [options] Additional options object.\n   * @param {Object} [options.projection=null] The query document projection.\n   * @param {Number} [options.limit=null] The maximum number of documents to return.\n   * @return {Array} An array of documents.\n   */\n  find(query, options = {}) {\n    return findOp(this, query, options);\n  }\n\n  /**\n   * Gets the number of documents matching the filter.\n   *\n   * @param {Object} query The query used to match documents.\n   * @param {Object} options Additional find options.\n   * @param {Number} [options.limit=null] The maximum number of documents to return.\n   * @return {Number} An array of documents.\n   */\n  count(query, options = {}) {\n    return findOp(this, query, Object.assign({}, options, { count: true }))\n      .then(result => result[0] || 0);\n  }\n\n  // deprecated\n  insert(docs, options = {}) {\n    return insertOp(this, docs, options);\n  }\n\n  upsert(query, update, options = {}) {\n    return updateOp(this, query, update, Object.assign({}, options, { upsert: true }));\n  }\n}\n\n// deprecated methods\nCollection.prototype.upsert =\n  deprecate(Collection.prototype.upsert, 'use `updateOne`/`updateMany` instead of `upsert`');\n\n// private\nfunction insertOp(self, docs, options) {\n  docs = Array.isArray(docs) ? docs : [ docs ];\n\n  // add ObjectIds to docs that have none\n  docs = docs.map(doc => {\n    if (!doc._id) doc._id = new ObjectID();\n    return doc;\n  });\n\n  return self.db.client.executePipeline([\n    {\n      action: 'literal',\n      args: {\n        items: docs\n      }\n    },\n    {\n      service: self.db.service,\n      action: 'insert',\n      args: {\n        database: self.db.name,\n        collection: self.name\n      }\n    }\n  ])\n  .then(response => {\n    return {\n      insertedIds: response.result.map(doc => doc._id)\n    };\n  });\n}\n\nfunction deleteOp(self, query, options) {\n  const args = Object.assign({\n    database: self.db.name,\n    collection: self.name,\n    query: query\n  }, options);\n\n  return self.db.client.executePipeline([\n    {\n      service: self.db.service,\n      action: 'delete',\n      args: args\n    }\n  ])\n  .then(response => {\n    return {\n      deletedCount: response.result[0].removed\n    };\n  });\n}\n\nfunction updateOp(self, query, update, options) {\n  const args = Object.assign({\n    database: self.db.name,\n    collection: self.name,\n    query: query,\n    update: update\n  }, options);\n\n  return self.db.client.executePipeline([\n    {\n      service: self.db.service,\n      action: 'update',\n      args: args\n    }\n  ]);\n}\n\nfunction findOp(self, query, options) {\n  const args = Object.assign({\n    database: self.db.name,\n    collection: self.name,\n    query: query\n  }, options);\n\n  // legacy argument naming\n  if (args.projection) {\n    args.project = args.projection;\n    delete args.projection;\n  }\n\n  return self.db.client.executePipeline([\n    {\n      service: self.db.service,\n      action: 'find',\n      args: args\n    }\n  ])\n  .then(response => response.result);\n}\n\nexport default Collection;\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/mongodb/collection.js","import Collection from './collection';\nimport { deprecate } from '../../util';\n\n/**\n * Create a new DB instance (not meant to be instantiated directly).\n * @class\n * @return {DB} a DB instance.\n */\nclass DB {\n  constructor(client, service, name) {\n    this.client = client;\n    this.service = service;\n    this.name = name;\n  }\n\n  /**\n   * Returns a Collection instance representing a MongoDB Collection object.\n   *\n   * @method\n   * @param {String} name The collection name.\n   * @param {Object} [options] Additional options.\n   * @return {Collection} returns a Collection instance representing a MongoDb collection.\n   */\n  collection(name, options = {}) {\n    return new Collection(this, name, options);\n  }\n}\n\n// deprecated\nDB.prototype.getCollection =\n  deprecate(DB.prototype.collection, 'use `collection` instead of `getCollection`');\n\nexport default DB;\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/mongodb/db.js","import DB from './db';\nimport { deprecate } from '../../util';\n\n/**\n * Create a new MongoDBService instance (not meant to be instantiated directly).\n *\n * @class\n * @return {MongoDBService} a MongoDBService instance.\n */\nclass MongoDBService {\n  constructor(baasClient, serviceName) {\n    this.baasClient = baasClient;\n    this.serviceName = serviceName;\n  }\n\n  /**\n   * Get a DB instance\n   *\n   * @method\n   * @param {String} databaseName The MongoDB database name\n   * @param {Object} [options] Additional options.\n   * @return {DB} returns a DB instance representing a MongoDB database.\n   */\n  db(databaseName, options = {}) {\n    return new DB(this.baasClient, this.serviceName, databaseName);\n  }\n}\n\n// deprecated\nMongoDBService.prototype.getDB =\nMongoDBService.prototype.getDb =\n  deprecate(MongoDBService.prototype.db, 'use `db` instead of `getDB`');\n\n\nexport default MongoDBService;\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/mongodb/mongodb_service.js","class MemoryStorage {\n  constructor() {\n    this._data = {};\n  }\n\n  getItem(key) {\n    return (key in this._data) ? this._data[key] : null;\n  }\n\n  setItem(key, value) {\n    this._data[key] = value;\n    return this._data[key];\n  }\n\n  removeItem(key) {\n    delete this._data[key];\n    return undefined;\n  }\n\n  clear() {\n    this._data = {};\n    return this._data;\n  }\n}\n\nclass Storage {\n  constructor(store) {\n    this.store = store;\n  }\n\n  get(key) { return this.store.getItem(key); }\n  set(key, value) { return this.store.setItem(key, value); }\n  remove(key) { return this.store.removeItem(key); }\n  clear() { return this.store.clear(); }\n}\n\nexport function createStorage(type) {\n  if (type === 'localStorage') {\n    if ((typeof window !== 'undefined') && 'localStorage' in window && window.localStorage !== null) {\n      return new Storage(window.localStorage);\n    }\n  } else if (type === 'sessionStorage') {\n    if ((typeof window !== 'undefined') && 'sessionStorage' in window && window.sessionStorage !== null) {\n      return new Storage(window.sessionStorage);\n    }\n  }\n\n  // default to memory storage\n  return new Storage(new MemoryStorage());\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage.js","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 15\n// module chunks = 0","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nvar globalObj = typeof self !== 'undefined' && self || this;\nmodule.exports = globalObj.fetch.bind(globalObj);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fetch-everywhere/fetch-npm-browserify.js\n// module id = 16\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 17\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 18\n// module chunks = 0","\"use strict\";\n\nvar btoa = require('./shared').btoa;\n\n/**\n * Module dependencies.\n * @ignore\n */\nfunction convert(integer) {\n  var str = Number(integer).toString(16);\n  return str.length == 1 ? \"0\" + str : str;\n};\n\n/**\n * A class representation of the BSON Binary type.\n *\n * Sub types\n *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.\n *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.\n *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.\n *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.\n *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.\n *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.\n *\n * @class\n * @param {Buffer} buffer a buffer object containing the binary data.\n * @param {Number} [subType] the option binary type.\n * @return {Binary}\n */\nvar Binary = function(buffer, subType) {\n  this._bsontype = 'Binary';\n\n  if(buffer instanceof Number) {\n    this.sub_type = buffer;\n    this.position = 0;\n  } else {\n    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;\n    this.position = 0;\n  }\n\n  if(buffer != null && !(buffer instanceof Number)) {\n    // Only accept Buffer or Uint8Array\n    if(typeof buffer == 'string') {\n      this.buffer = writeStringToArray(buffer);\n    } else if(buffer instanceof Uint8Array) {\n      this.buffer = buffer;\n    } else {\n      throw new Error('passed in buffer must be an Uint8Array instance');\n    }\n\n    this.position = buffer.length;\n  } else {\n    this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));\n    // Set position to start of buffer\n    this.position = 0;\n  }\n}\n\n/**\n * Updates this binary with byte_value.\n *\n * @method\n * @param {String} byte_value a single byte we wish to write.\n */\nBinary.prototype.put = function(byte_value) {\n  // If it's a string and a has more than one character throw an error\n  if(byte_value['length'] != null && typeof byte_value != 'number' && byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");\n  if(typeof byte_value != 'number' && byte_value < 0 || byte_value > 255) throw new Error(\"only accepts number in a valid unsigned byte range 0-255\");\n\n  // Decode the byte value once\n  var decoded_byte = null;\n  if(typeof byte_value == 'string') {\n    decoded_byte = byte_value.charCodeAt(0);\n  } else if(byte_value['length'] != null) {\n    decoded_byte = byte_value[0];\n  } else {\n    decoded_byte = byte_value;\n  }\n\n  if(this.buffer.length > this.position) {\n    this.buffer[this.position++] = decoded_byte;\n  } else {\n    var buffer = null;\n    // Create a new buffer (typed or normal array)\n    buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));\n\n    // We need to copy all the content to the new array\n    for(var i = 0; i < this.buffer.length; i++) {\n      buffer[i] = this.buffer[i];\n    }\n\n    // Reassign the buffer\n    this.buffer = buffer;\n    // Write the byte\n    this.buffer[this.position++] = decoded_byte;\n  }\n}\n\n/**\n * Writes a buffer or string to the binary.\n *\n * @method\n * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object.\n * @param {number} offset specify the binary of where to write the content.\n * @return {null}\n */\nBinary.prototype.write = function(string, offset) {\n  offset = typeof offset == 'number' ? offset : this.position;\n\n  // If the buffer is to small let's extend the buffer\n  if(this.buffer.length < offset + string.length) {\n    var buffer = null;\n    // Create a new buffer\n    buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))\n    // Copy the content\n    for(var i = 0; i < this.position; i++) {\n      buffer[i] = this.buffer[i];\n    }\n\n    // Assign the new buffer\n    this.buffer = buffer;\n  }\n\n  for(var i = 0; i < string.length; i++) {\n    this.buffer[offset++] = string[i];\n  }\n\n  this.position = offset > this.position ? offset : this.position;\n}\n\n/**\n * Reads **length** bytes starting at **position**.\n *\n * @method\n * @param {number} position read from the given position in the Binary.\n * @param {number} length the number of bytes to read.\n * @return {Buffer}\n */\nBinary.prototype.read = function(position, length) {\n  length = length && length > 0\n    ? length\n    : this.position;\n\n  // Let's return the data based on the type we have\n  return this.buffer.slice(position, position + length);\n}\n\n/**\n * Returns the value of this binary as a string.\n *\n * @method\n * @return {String}\n */\nBinary.prototype.value = function(asRaw) {\n  asRaw = asRaw == null ? false : asRaw;\n  if(asRaw) return this.buffer.slice(0, this.position);\n  return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);\n}\n\n/**\n * Length.\n *\n * @method\n * @return {number} the length of the binary.\n */\nBinary.prototype.length = function() {\n  return this.position;\n}\n\nBinary.prototype.equals = function(value) {\n  if(!value) return false;\n  if(value._bsontype != 'Binary') return false;\n  if(!value.buffer) return false;\n  if(value.buffer.length != this.buffer.length) return false;\n  for(var i = 0; i < this.buffer.length; i++) {\n    if(this.buffer[i] != value.buffer[i]) return false;\n  }\n\n  return true;\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toJSON = function() {\n  // If we are in the node.js context use Buffer.toString, otherwise the btoa\n  var binary = typeof Buffer !== 'undefined'\n    ? this.buffer.toString('base64')\n    : btoa(String.fromCharCode.apply(null, this.buffer));\n\n  return {\n    $binary: binary,\n    $type: convert(this.sub_type)\n  }\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toString = function(format) {\n  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';\n}\n\n/**\n * Binary default subtype\n * @ignore\n */\nvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/**\n * @ignore\n */\nvar writeStringToArray = function(data) {\n  // Create a buffer\n  var buffer = new Uint8Array(new ArrayBuffer(data.length));\n  // Write the content to the buffer\n  for(var i = 0; i < data.length; i++) {\n    buffer[i] = data.charCodeAt(i);\n  }\n  // Write the string to the buffer\n  return buffer;\n}\n\n/**\n * Convert Array ot Uint8Array to Binary String\n *\n * @ignore\n */\nvar convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {\n  var result = \"\";\n  for(var i = startIndex; i < endIndex; i++) {\n   result = result + String.fromCharCode(byteArray[i]);\n  }\n  return result;\n};\n\nBinary.BUFFER_SIZE = 256;\n\n/**\n * Default BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_DEFAULT = 0;\n/**\n * Function BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_FUNCTION = 1;\n/**\n * Byte Array BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/**\n * OLD UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID_OLD = 3;\n/**\n * UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID = 4;\n/**\n * MD5 BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_MD5 = 5;\n/**\n * User BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_USER_DEFINED = 128;\n\nmodule.exports = Binary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/binary.js\n// module id = 19\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function(code, scope) {\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope;\n}\n\nCode.prototype.equals = function(value) {\n  if(!value || !value.code) return false;\n  if(value._bsontype != 'Code') return false;\n  if(this.code == value.code) return true;\n  return false;\n}\n\nCode.prototype.toJSON = function() {\n  return { $code: this.code, $scope: this.scope };\n}\n\nmodule.exports = Code;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/code.js\n// module id = 20\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON DBRef type.\n *\n * @class\n * @param {String} namespace the collection name.\n * @param {ObjectID} oid the reference ObjectID.\n * @param {String} [db] optional db name, if omitted the reference is local to the current db.\n * @return {DBRef}\n */\nvar DBRef = function(namespace, oid, db) {\n  this._bsontype = 'DBRef';\n  this.namespace = namespace;\n  this.oid = oid;\n  this.db = db;\n}\n\nDBRef.prototype.equals = function(value) {\n  if(value == null || value.namespace == null  || value.db == null || value.oid == null) return false;\n  if(value._bsontype != 'DBRef') return false;\n\n  if(this.oid && this.oid.equals) {\n    return this.oid.equals(value.oid) && this.namespace == value.namespace && this.db == value.db;\n  } else {\n    return this.oid == value.oid && this.namespace == value.namespace && this.db == value.db;\n  }\n}\n\nDBRef.prototype.toJSON = function() {\n  return {\n    '$ref':this.namespace,\n    '$id':this.oid,\n    '$db':this.db == null ? '' : this.db\n  };\n}\n\nmodule.exports = DBRef;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/db_ref.js\n// module id = 21\n// module chunks = 0","\"use strict\"\n\nvar Long = require('./long');\n\nvar PARSE_STRING_REGEXP = /^(\\+|\\-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([\\-\\+])?(\\d+)?$/;\nvar PARSE_INF_REGEXP = /^(\\+|\\-)?(Infinity|inf)$/i;\nvar PARSE_NAN_REGEXP = /^(\\+|\\-)?NaN$/i;\n\nvar EXPONENT_MAX = 6111;\nvar EXPONENT_MIN = -6176;\nvar EXPONENT_BIAS = 6176;\nvar MAX_DIGITS = 34;\n\n// Nan value bits as 32 bit values (due to lack of longs)\nvar NAN_BUFFER = [0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n// Infinity value bits 32 bit values (due to lack of longs)\nvar INF_NEGATIVE_BUFFER = [0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\nvar INF_POSITIVE_BUFFER = [0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n\nvar EXPONENT_REGEX = /^([\\-\\+])?(\\d+)?$/;\n\n// Extract least significant 5 bits\nvar COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nvar EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nvar COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nvar COMBINATION_NAN = 31;\n// Value of combination field for NaN\nvar COMBINATION_SNAN = 32;\n// decimal128 exponent bias\nvar EXPONENT_BIAS = 6176;\n\n// Detect if the value is a digit\nvar isDigit = function(value) {\n  return !isNaN(parseInt(value, 10));\n}\n\n// Divide two uint128 values\nvar divideu128 = function(value) {\n  var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n  var _rem = Long.fromNumber(0);\n  var i = 0;\n\n  if(!value.parts[0] && !value.parts[1] &&\n     !value.parts[2] && !value.parts[3]) {\n    return { quotient: value, rem: _rem };\n  }\n\n  for(var i = 0; i <= 3; i++) {\n    // Adjust remainder to match value of next dividend\n    _rem = _rem.shiftLeft(32);\n    // Add the divided to _rem\n    _rem = _rem.add(new Long(value.parts[i], 0));\n    value.parts[i] = _rem.div(DIVISOR).low_;\n    _rem = _rem.modulo(DIVISOR);\n  }\n\n  return { quotient: value, rem: _rem };\n}\n\n// Multiply two Long values and return the 128 bit value\nvar multiply64x2 = function(left, right) {\n  if(!left && !right) {\n    return {high: Long.fromNumber(0), low: Long.fromNumber(0)};\n  }\n\n  var leftHigh = left.shiftRightUnsigned(32);\n  var leftLow = new Long(left.getLowBits(), 0);\n  var rightHigh = right.shiftRightUnsigned(32);\n  var rightLow = new Long(right.getLowBits(), 0);\n\n  var productHigh = leftHigh.multiply(rightHigh);\n  var productMid = leftHigh.multiply(rightLow);\n  var productMid2 = leftLow.multiply(rightHigh);\n  var productLow = leftLow.multiply(rightLow);\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productMid = new Long(productMid.getLowBits(), 0)\n                .add(productMid2)\n                .add(productLow.shiftRightUnsigned(32));\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n\n  // Return the 128 bit result\n  return {high: productHigh, low: productLow};\n}\n\nvar lessThan = function(left, right) {\n  // Make values unsigned\n  var uhleft = left.high_ >>> 0;\n  var uhright = right.high_ >>> 0;\n\n  // Compare high bits first\n  if(uhleft < uhright) {\n    return true\n  } else if(uhleft == uhright) {\n    var ulleft = left.low_ >>> 0;\n    var ulright = right.low_ >>> 0;\n    if(ulleft < ulright) return true;\n  }\n\n  return false;\n}\n\nvar longtoHex = function(value) {\n  var buffer = new Buffer(8);\n  var index = 0;\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = value.low_ & 0xff;\n  buffer[index++] = (value.low_ >> 8) & 0xff;\n  buffer[index++] = (value.low_ >> 16) & 0xff;\n  buffer[index++] = (value.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = value.high_ & 0xff;\n  buffer[index++] = (value.high_ >> 8) & 0xff;\n  buffer[index++] = (value.high_ >> 16) & 0xff;\n  buffer[index++] = (value.high_ >> 24) & 0xff;\n  return buffer.reverse().toString('hex');\n}\n\nvar int32toHex = function(value) {\n  var buffer = new Buffer(4);\n  var index = 0;\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = value & 0xff;\n  buffer[index++] = (value >> 8) & 0xff;\n  buffer[index++] = (value >> 16) & 0xff;\n  buffer[index++] = (value >> 24) & 0xff;\n  return buffer.reverse().toString('hex');\n}\n\n/**\n * A class representation of the BSON Decimal128 type.\n *\n * @class\n * @param {Buffer} bytes A buffer representing the Decimal128 bytes.\n * @return {Decimal128}\n */\nvar Decimal128 = function(bytes) {\n  this._bsontype = 'Decimal128';\n  this.bytes = bytes;\n}\n\n/**\n * Creates a Decimal128 instance from a string representation.\n *\n * @method\n * @param {String} string A string representing a Decimal128 value.\n */\nDecimal128.fromString = function(string) {\n  // Parse state tracking\n  var isNegative = false;\n  var sawRadix = false;\n  var foundNonZero = false;\n\n  // Total number of significant digits (no leading or trailing zero)\n  var significantDigits = 0;\n  // Total number of significand digits read\n  var nDigitsRead = 0;\n  // Total number of digits (no leading zeros)\n  var nDigits = 0;\n  // The number of the digits after radix\n  var radixPosition = 0;\n  // The index of the first non-zero in *str*\n  var firstNonZero = 0;\n\n  // Digits Array\n  var digits = [0];\n  // The number of digits in digits\n  var nDigitsStored = 0;\n  // Insertion pointer for digits\n  var digitsInsert = 0;\n  // The index of the first non-zero digit\n  var firstDigit = 0;\n  // The index of the last digit\n  var lastDigit = 0;\n\n  // Exponent\n  var exponent = 0;\n  // loop index over array\n  var i = 0;\n  // The high 17 digits of the significand\n  var significandHigh = [0, 0];\n  // The low 17 digits of the significand\n  var significandLow = [0, 0];\n  // The biased exponent\n  var biasedExponent = 0;\n\n  // Read index\n  var index = 0;\n\n  // Trim the string\n  string = string.trim();\n\n  // Results\n  var stringMatch = string.match(PARSE_STRING_REGEXP);\n  var infMatch = string.match(PARSE_INF_REGEXP);\n  var nanMatch = string.match(PARSE_NAN_REGEXP);\n\n  // Validate the string\n  if(!stringMatch\n    && ! infMatch\n    && ! nanMatch || string.length == 0) {\n      throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Check if we have an illegal exponent format\n  if(stringMatch && stringMatch[4] && stringMatch[2] === undefined) {\n    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Get the negative or positive sign\n  if(string[index] == '+' || string[index] == '-') {\n    isNegative = string[index++] == '-';\n  }\n\n  // Check if user passed Infinity or NaN\n  if(!isDigit(string[index]) && string[index] != '.') {\n    if(string[index] == 'i' || string[index] == 'I') {\n      return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n    } else if(string[index] == 'N') {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n  }\n\n  // Read all the digits\n  while(isDigit(string[index]) || string[index] == '.') {\n    if(string[index] == '.') {\n      if(sawRadix) {\n        return new Decimal128(new Buffer(NAN_BUFFER));\n      }\n\n      sawRadix = true;\n      index = index + 1;\n      continue;\n    }\n\n    if(nDigitsStored < 34) {\n      if(string[index] != '0' || foundNonZero) {\n        if(!foundNonZero) {\n          firstNonZero = nDigitsRead;\n        }\n\n        foundNonZero = true;\n\n        // Only store 34 digits\n        digits[digitsInsert++] = parseInt(string[index], 10);\n        nDigitsStored = nDigitsStored + 1;\n      }\n    }\n\n    if(foundNonZero) {\n      nDigits = nDigits + 1;\n    }\n\n    if(sawRadix) {\n      radixPosition = radixPosition + 1;\n    }\n\n    nDigitsRead = nDigitsRead + 1;\n    index = index + 1;\n  }\n\n  if(sawRadix && !nDigitsRead) {\n    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Read exponent if exists\n  if(string[index] == 'e' || string[index] == 'E') {\n    // Read exponent digits\n    var match = string.substr(++index).match(EXPONENT_REGEX);\n\n    // No digits read\n    if(!match || !match[2]) {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n\n    // Get exponent\n    exponent = parseInt(match[0], 10);\n\n    // Adjust the index\n    index = index + match[0].length;\n  }\n\n  // Return not a number\n  if(string[index]) {\n    return new Decimal128(new Buffer(NAN_BUFFER));\n  }\n\n  // Done reading input\n  // Find first non-zero digit in digits\n  firstDigit = 0;\n\n  if(!nDigitsStored) {\n    firstDigit = 0;\n    lastDigit = 0;\n    digits[0] = 0;\n    nDigits = 1;\n    nDigitsStored = 1;\n    significantDigits = 0;\n  } else {\n    lastDigit = nDigitsStored - 1;\n    significantDigits = nDigits;\n\n    if(exponent != 0 && significantDigits != 1) {\n      while(string[firstNonZero + significantDigits - 1] == '0') {\n        significantDigits = significantDigits - 1;\n      }\n    }\n  }\n\n  // Normalization of exponent\n  // Correct exponent based on radix position, and shift significand as needed\n  // to represent user input\n\n  // Overflow prevention\n  if(exponent <= radixPosition && radixPosition - exponent > (1 << 14)) {\n    exponent = EXPONENT_MIN;\n  } else {\n    exponent = exponent - radixPosition;\n  }\n\n  // Attempt to normalize the exponent\n  while(exponent > EXPONENT_MAX) {\n    // Shift exponent to significand and decrease\n    lastDigit = lastDigit + 1;\n\n    if(lastDigit - firstDigit > MAX_DIGITS) {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if(digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n      }\n    }\n\n    exponent = exponent - 1;\n  }\n\n  while(exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n    // Shift last digit\n    if(lastDigit == 0) {\n      exponent = EXPONENT_MIN;\n      significantDigits = 0;\n      break;\n    }\n\n    if(nDigitsStored < nDigits) {\n      // adjust to match digits not stored\n      nDigits = nDigits - 1;\n    } else {\n      // adjust to round\n      lastDigit = lastDigit - 1;\n    }\n\n    if(exponent < EXPONENT_MAX) {\n      exponent = exponent + 1;\n    } else {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if(digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))\n      }\n    }\n  }\n\n  // Round\n  // We've normalized the exponent, but might still need to round.\n  if((lastDigit - firstDigit + 1 < significantDigits) && string[significantDigits] != '0') {\n    var endOfString = nDigitsRead;\n\n    // If we have seen a radix point, 'string' is 1 longer than we have\n    // documented with ndigits_read, so inc the position of the first nonzero\n    // digit and the position that digits are read to.\n    if(sawRadix && exponent == EXPONENT_MIN) {\n      firstNonZero = firstNonZero + 1;\n      endOfString = endOfString + 1;\n    }\n\n    var roundDigit = parseInt(string[firstNonZero + lastDigit + 1], 10);\n    var roundBit = 0;\n\n    if(roundDigit >= 5) {\n      roundBit = 1;\n\n      if(roundDigit == 5) {\n        roundBit = digits[lastDigit] % 2 == 1;\n\n        for(var i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n          if(parseInt(string[i], 10)) {\n            roundBit = 1;\n            break;\n          }\n        }\n      }\n    }\n\n    if(roundBit) {\n      var dIdx = lastDigit;\n\n      for(; dIdx >= 0; dIdx--) {\n        if(++digits[dIdx] > 9) {\n          digits[dIdx] = 0;\n\n          // overflowed most significant digit\n          if(dIdx == 0) {\n            if(exponent < EXPONENT_MAX) {\n              exponent = exponent + 1;\n              digits[dIdx] = 1;\n            } else {\n              return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))\n            }\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n  // Encode significand\n  // The high 17 digits of the significand\n  significandHigh = Long.fromNumber(0);\n  // The low 17 digits of the significand\n  significandLow = Long.fromNumber(0);\n\n  // read a zero\n  if(significantDigits == 0) {\n    significandHigh = Long.fromNumber(0);\n    significandLow = Long.fromNumber(0);\n  } else if(lastDigit - firstDigit < 17) {\n    var dIdx = firstDigit;\n    significandLow = Long.fromNumber(digits[dIdx++]);\n    significandHigh = new Long(0, 0);\n\n    for(; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  } else {\n    var dIdx = firstDigit;\n    significandHigh = Long.fromNumber(digits[dIdx++]);\n\n    for(; dIdx <= lastDigit - 17; dIdx++) {\n      significandHigh = significandHigh.multiply(Long.fromNumber(10));\n      significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n    }\n\n    significandLow = Long.fromNumber(digits[dIdx++]);\n\n    for(; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  }\n\n  var significand = multiply64x2(significandHigh, Long.fromString(\"100000000000000000\"));\n\n  significand.low = significand.low.add(significandLow);\n\n  if(lessThan(significand.low, significandLow)) {\n    significand.high = significand.high.add(Long.fromNumber(1));\n  }\n\n  // Biased exponent\n  var biasedExponent = (exponent + EXPONENT_BIAS);\n  var dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n\n  // Encode combination, exponent, and significand.\n  if(significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber)) {\n    // Encode '11' into bits 1 to 3\n    dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47)));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n  } else {\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n  }\n\n  dec.low = significand.low;\n\n  // Encode sign\n  if(isNegative) {\n    dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n  }\n\n  // Encode into a buffer\n  var buffer = new Buffer(16);\n  var index = 0;\n\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.low.low_ & 0xff;\n  buffer[index++] = (dec.low.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.low.high_ & 0xff;\n  buffer[index++] = (dec.low.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 24) & 0xff;\n\n  // Encode the high 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.high.low_ & 0xff;\n  buffer[index++] = (dec.high.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.high.high_ & 0xff;\n  buffer[index++] = (dec.high.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 24) & 0xff;\n\n  // Return the new Decimal128\n  return new Decimal128(buffer);\n}\n\nDecimal128.prototype.toString = function() {\n  // Note: bits in this routine are referred to starting at 0,\n  // from the sign bit, towards the coefficient.\n\n  // bits 0 - 31\n  var high;\n  // bits 32 - 63\n  var midh;\n  // bits 64 - 95\n  var midl;\n  // bits 96 - 127\n  var low;\n  // bits 1 - 5\n  var combination;\n  // decoded biased exponent (14 bits)\n  var biased_exponent;\n  // the number of significand digits\n  var significand_digits = 0;\n  // the base-10 digits in the significand\n  var significand = new Array(36);\n  for(var i = 0; i < significand.length; i++) significand[i] = 0;\n  // read pointer into significand\n  var index = 0;\n\n  // unbiased exponent\n  var exponent;\n  // the exponent if scientific notation is used\n  var scientific_exponent;\n\n  // true if the number is zero\n  var is_zero = false;\n\n  // the most signifcant significand bits (50-46)\n  var significand_msb;\n  // temporary storage for significand decoding\n  var significand128 = {parts: new Array(4)};\n  // indexing variables\n  var i;\n  var j, k;\n\n  // Output string\n  var string = [];\n\n  // Unpack index\n  var index = 0;\n\n  // Buffer reference\n  var buffer = this.bytes;\n\n  // Unpack the low 64bits into a long\n  low = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n  midl = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Unpack the high 64bits into a long\n  midh = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n  high = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Unpack index\n  var index = 0;\n\n  // Create the state of the decimal\n  var dec = {\n    low: new Long(low, midl),\n    high: new Long(midh, high) };\n\n  if(dec.high.lessThan(Long.ZERO)) {\n    string.push('-');\n  }\n\n  // Decode combination field and exponent\n  combination = (high >> 26) & COMBINATION_MASK;\n\n  if((combination >> 3) == 3) {\n    // Check for 'special' values\n    if(combination == COMBINATION_INFINITY) {\n      return string.join('') + \"Infinity\";\n    } else if(combination == COMBINATION_NAN) {\n      return \"NaN\";\n    } else {\n      biased_exponent = (high >> 15) & EXPONENT_MASK;\n      significand_msb = 0x08 + ((high >> 14) & 0x01);\n    }\n  } else {\n    significand_msb = (high >> 14) & 0x07;\n    biased_exponent = (high >> 17) & EXPONENT_MASK;\n  }\n\n  exponent = biased_exponent - EXPONENT_BIAS;\n\n  // Create string of significand digits\n\n  // Convert the 114-bit binary number represented by\n  // (significand_high, significand_low) to at most 34 decimal\n  // digits through modulo and division.\n  significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n  significand128.parts[1] = midh;\n  significand128.parts[2] = midl;\n  significand128.parts[3] = low;\n\n  if(significand128.parts[0] == 0 && significand128.parts[1] == 0\n    && significand128.parts[2] == 0 && significand128.parts[3] == 0) {\n      is_zero = true;\n  } else {\n    for(var k = 3; k >= 0; k--) {\n      var least_digits = 0;\n      // Peform the divide\n      var result = divideu128(significand128);\n      significand128 = result.quotient;\n      least_digits = result.rem.low_;\n\n      // We now have the 9 least significant digits (in base 2).\n      // Convert and output to string.\n      if(!least_digits) continue;\n\n      for(var j = 8; j >= 0; j--) {\n        // significand[k * 9 + j] = Math.round(least_digits % 10);\n        significand[k * 9 + j] = least_digits % 10;\n        // least_digits = Math.round(least_digits / 10);\n        least_digits = Math.floor(least_digits / 10);\n      }\n    }\n  }\n\n  // Output format options:\n  // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n  // Regular    - ddd.ddd\n\n  if(is_zero) {\n    significand_digits = 1;\n    significand[index] = 0;\n  } else {\n    significand_digits = 36;\n    var i = 0;\n\n    while(!significand[index]) {\n      i++;\n      significand_digits = significand_digits - 1;\n      index = index + 1;\n    }\n  }\n\n  scientific_exponent = significand_digits - 1 + exponent;\n\n  // The scientific exponent checks are dictated by the string conversion\n  // specification and are somewhat arbitrary cutoffs.\n  //\n  // We must check exponent > 0, because if this is the case, the number\n  // has trailing zeros.  However, we *cannot* output these trailing zeros,\n  // because doing so would change the precision of the value, and would\n  // change stored data if the string converted number is round tripped.\n\n  if(scientific_exponent >= 34 || scientific_exponent <= -7 ||\n    exponent > 0) {\n    // Scientific format\n    string.push(significand[index++]);\n    significand_digits = significand_digits - 1;\n\n    if(significand_digits) {\n      string.push('.');\n    }\n\n    for(var i = 0; i < significand_digits; i++) {\n      string.push(significand[index++]);\n    }\n\n    // Exponent\n    string.push('E');\n    if(scientific_exponent > 0) {\n      string.push('+' + scientific_exponent);\n    } else {\n      string.push(scientific_exponent);\n    }\n  } else {\n    // Regular format with no decimal place\n    if(exponent >= 0) {\n      for(var i = 0; i < significand_digits; i++) {\n        string.push(significand[index++]);\n      }\n    } else {\n      var radix_position = significand_digits + exponent;\n\n      // non-zero digits before radix\n      if(radix_position > 0) {\n        for(var i = 0; i < radix_position; i++) {\n          string.push(significand[index++]);\n        }\n      } else {\n        string.push('0');\n      }\n\n      string.push('.');\n      // add leading zeros after radix\n      while(radix_position++ < 0) {\n        string.push('0');\n      }\n\n      for(var i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n        string.push(significand[index++]);\n      }\n    }\n  }\n\n  return string.join('');\n}\n\nDecimal128.prototype.equals = function(value) {\n  if(!value.bytes) return false;\n  return this.bytes.toString('hex') == value.bytes.toString('hex');\n}\n\nDecimal128.prototype.toJSON = function() {\n  return { \"$numberDecimal\": this.toString() };\n}\n\nmodule.exports = Decimal128;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/decimal128.js\n// module id = 22\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nvar Double = function(value) {\n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function() {\n  return this.value;\n}\n\nDouble.prototype.equals = function(value) {\n  if(!value) return false;\n  if(typeof value !== 'number' && value._bsontype != 'Double') return false;\n  if(typeof value === 'number') return this.value === value;\n  return this.value === value.value;\n}\n\nDouble.prototype.toJSON = function() {\n  return { $numberDouble: this.value.toString() };\n}\n\nmodule.exports = Double;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/double.js\n// module id = 23\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function(value) {\n  this._bsontype = 'Int32';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\nInt32.prototype.valueOf = function() {\n  return this.value;\n}\n\nInt32.prototype.equals = function(value) {\n  if(!value) return false;\n  if(typeof value !== 'number' && value._bsontype != 'Int32') return false;\n  if(typeof value === 'number') return this.value === value;\n  return this.value === value.value;\n}\n\nInt32.prototype.toJSON = function() {\n  return { $numberInt: this.value.toString() };\n}\n\nmodule.exports = Int32;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/int_32.js\n// module id = 24\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON MaxKey type.\n *\n * @class\n * @return {MaxKey} A MaxKey instance\n */\nvar MaxKey = function() {\n  this._bsontype = 'MaxKey';\n}\n\nMaxKey.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'MaxKey') return false;\n  return true;\n}\n\nMaxKey.prototype.toJSON = function() {\n  return { $maxKey: 1 };\n}\n\nmodule.exports = MaxKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/max_key.js\n// module id = 25\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON MinKey type.\n *\n * @class\n * @return {MinKey} A MinKey instance\n */\nvar MinKey = function() {\n  this._bsontype = 'MinKey';\n}\n\nMinKey.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'MinKey') return false;\n  return true;\n}\n\nMinKey.prototype.toJSON = function() {\n  return { $minKey: 1 };\n}\n\nmodule.exports = MinKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/min_key.js\n// module id = 26\n// module chunks = 0","\"use strict\";\n\n/**\n * Machine id.\n *\n * Create a random 3-byte value (i.e. unique for this\n * process). Other drivers use a md5 of the machine id here, but\n * that would mean an asyc call to gethostname, so we don't bother.\n * @ignore\n */\nvar MACHINE_ID = parseInt(Math.random() * 0xFFFFFF, 10);\n\n// Regular expression that checks for hex value\nvar checkForHexRegExp = new RegExp(\"^[0-9a-fA-F]{24}$\");\n\n// Precomputed hex table enables speedy hex string conversion\nvar hexTable = [];\nfor (var i = 0; i < 256; i++) {\n  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n\n// Lookup tables\nvar encodeLookup = '0123456789abcdef'.split('')\nvar decodeLookup = []\nvar i = 0\nwhile (i < 10) decodeLookup[0x30 + i] = i++\nwhile (i < 16) decodeLookup[0x61 - 10 + i] = i++\n\nvar convertToHex = function(bytes) {\n  var hexString = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    hexString += hexTable[bytes[i]];\n  }\n\n  return hexString;\n}\n\n/**\n* Create a new ObjectID instance\n*\n* @class\n* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.\n* @property {number} generationTime The generation time of this ObjectId instance\n* @return {ObjectID} instance of ObjectID.\n*/\nvar ObjectID = function(id) {\n  // Duck-typing to support ObjectId from different npm packages\n  if(id instanceof ObjectID) return id;\n  if(!(this instanceof ObjectID)) return new ObjectID(id);\n\n  this._bsontype = 'ObjectID';\n\n  var __id = null;\n  var valid = ObjectID.isValid(id);\n\n  // Throw an error if it's not a valid setup\n  if(!valid && id != null){\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n  } else if(valid && typeof id == 'string' && id.length == 24) {\n    return ObjectID.createFromHexString(id);\n  } else if(id == null || typeof id == 'number') {\n    // convert to 12 byte binary string\n    this.id = this.generate(id);\n  } else if(id != null && id.length === 12) {\n    // assume 12 byte string\n    this.id = id;\n  } else if(id != null && id.toHexString) {\n    // Duck-typing to support ObjectId from different npm packages\n    return id;\n  } else {\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n  }\n\n  if(ObjectID.cacheHexString) this.__id = this.toHexString();\n}\n\n/**\n* Return the ObjectID id as a 24 byte hex string representation\n*\n* @method\n* @return {String} return the 24 byte hex string representation.\n*/\nObjectID.prototype.toHexString = function() {\n  if(ObjectID.cacheHexString && this.__id) return this.__id;\n\n  var hexString = '';\n  if(!this.id || !this.id.length) {\n    throw new Error('invalid ObjectId, ObjectId.id must be either a string or a Uint8Array, but is [' + JSON.stringify(this.id) + ']');\n  }\n\n  if(this.id instanceof Uint8Array) {\n    hexString = convertToHex(this.id);\n    if(ObjectID.cacheHexString) this.__id = hexString;\n    return hexString;\n  }\n\n  for (var i = 0; i < this.id.length; i++) {\n    hexString += hexTable[this.id.charCodeAt(i)];\n  }\n\n  if(ObjectID.cacheHexString) this.__id = hexString;\n  return hexString;\n}\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.getInc = function() {\n  return ObjectID.index = (ObjectID.index + 1) % 0xFFFFFF;\n}\n\n/**\n* Generate a 12 byte id buffer used in ObjectID's\n*\n* @method\n* @param {number} [time] optional parameter allowing to pass in a second based timestamp.\n* @return {Buffer} return the 12 byte id buffer string.\n*/\nObjectID.prototype.generate = function(time) {\n  if ('number' != typeof time) {\n    time = ~~(Date.now()/1000);\n  }\n\n  // Use pid\n  var pid = (typeof process === 'undefined' ? Math.floor(Math.random() * 100000) : process.pid) % 0xFFFF;\n  var inc = this.getInc();\n  // Buffer used\n  var buffer = new Uint8Array(12);\n  // Encode time\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Encode machine\n  buffer[6] = MACHINE_ID & 0xff;\n  buffer[5] = (MACHINE_ID >> 8) & 0xff;\n  buffer[4] = (MACHINE_ID >> 16) & 0xff;\n  // Encode pid\n  buffer[8] = pid & 0xff;\n  buffer[7] = (pid >> 8) & 0xff;\n  // Encode index\n  buffer[11] = inc & 0xff;\n  buffer[10] = (inc >> 8) & 0xff;\n  buffer[9] = (inc >> 16) & 0xff;\n  // Return the buffer\n  return buffer;\n}\n\n/**\n* Converts the id into a 24 byte hex string for printing\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toString = function() {\n  return this.toHexString();\n}\n\n/**\n* Converts to its JSON representation.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toJSON = function() {\n  return { $oid: this.toHexString() };\n}\n\n/**\n* Compares the equality of this ObjectID with `otherID`.\n*\n* @method\n* @param {Object} otherID ObjectID instance to compare against.\n* @return {Boolean} the result of comparing two ObjectID's\n*/\nObjectID.prototype.equals = function(otherId) {\n  var id;\n\n  if(otherId instanceof ObjectID) {\n    return this.toString() == otherId.toString();\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12 && this.id instanceof Uint8Array) {\n    return otherId === this.id.toString('binary');\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 24) {\n    return otherId === this.toHexString();\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12) {\n    return otherId === this.id;\n  } else if(otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {\n    return otherId.toHexString() === this.toHexString();\n  } else {\n    return false;\n  }\n}\n\n/**\n* Returns the generation date (accurate up to the second) that this ID was generated.\n*\n* @method\n* @return {date} the generation date\n*/\nObjectID.prototype.getTimestamp = function() {\n  var timestamp = new Date();\n  var time = this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n  timestamp.setTime(Math.floor(time) * 1000);\n  return timestamp;\n}\n\n/**\n* Creates an ObjectID from a hex string representation of an ObjectID.\n*\n* @method\n* @param {String} hexString create a ObjectID from a passed in 24 byte hexstring.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromHexString = function(string) {\n  // Throw an error if it's not a valid setup\n  if(typeof string === 'undefined' || string != null && string.length != 24)\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n\n  var length = string.length;\n\n  if(length > 12*2) {\n    throw new Error('Id cannot be longer than 12 bytes');\n  }\n\n  // Calculate lengths\n  var sizeof = length >> 1;\n  var array = new Uint8Array(sizeof);\n  var n = 0;\n  var i = 0;\n\n  while (i < length) {\n    array[n++] = decodeLookup[string.charCodeAt(i++)] << 4 | decodeLookup[string.charCodeAt(i++)]\n  }\n\n  return new ObjectID(array);\n}\n\n/**\n* Checks if a value is a valid bson ObjectId\n*\n* @method\n* @return {Boolean} return true if the value is a valid bson ObjectId, return false otherwise.\n*/\nObjectID.isValid = function(id) {\n  if(id == null) return false;\n\n  if(typeof id == 'number') {\n    return true;\n  }\n\n  if(typeof id == 'string') {\n    return id.length == 12 || (id.length == 24 && checkForHexRegExp.test(id));\n  }\n\n  if(id instanceof ObjectID) {\n    return true;\n  }\n\n  if(id instanceof Uint8Array) {\n    return true;\n  }\n\n  // Duck-Typing detection of ObjectId like objects\n  if(id.toHexString) {\n    return id.id.length == 12 || (id.id.length == 24 && checkForHexRegExp.test(id.id));\n  }\n\n  return false;\n}\n\n/**\n* @ignore\n*/\nObjectID.createPk = function() {\n  return new ObjectID();\n}\n\n/**\n* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\n*\n* @method\n* @param {number} time an integer number representing a number of seconds.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromTime = function(time) {\n  var buffer = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  // Encode time into first 4 bytes\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Return the new objectId\n  return new ObjectID(buffer);\n}\n\n/**\n* @ignore\n*/\nObject.defineProperty(ObjectID.prototype, \"generationTime\", {\n   enumerable: true\n , get: function () {\n     return this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n   }\n , set: function (value) {\n     // Encode time into first 4 bytes\n     this.id[3] = value & 0xff;\n     this.id[2] = (value >> 8) & 0xff;\n     this.id[1] = (value >> 16) & 0xff;\n     this.id[0] = (value >> 24) & 0xff;\n   }\n});\n\n/**\n* @ignore\n*/\nObjectID.index = ~~(Math.random() * 0xFFFFFF);\n\nmodule.exports = ObjectID;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/objectid.js\n// module id = 27\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON RegExp type.\n *\n * @class\n * @return {BSONRegExp} A MinKey instance\n */\nvar BSONRegExp = function(pattern, options) {\n  // Execute\n  this._bsontype = 'BSONRegExp';\n  this.pattern = pattern;\n  this.options = options || '';\n  // Perform validation of parameters\n  if(typeof this.pattern != 'string') throw Error('pattern must be a string');\n  if(typeof this.options != 'string') throw Error('options must be a string');\n\n  // Validate options\n  for(var i = 0; i < options.length; i++) {\n    if(!(this.options[i] == 'i'\n      || this.options[i] == 'm'\n      || this.options[i] == 'x'\n      || this.options[i] == 'l'\n      || this.options[i] == 's'\n      || this.options[i] == 'u'\n    )) {\n      throw new Error('the regular expression options [' + this.options[i] + \"] is not supported\");\n    }\n  }\n}\n\nBSONRegExp.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'BSONRegExp') return false;\n  return this.pattern == value.pattern && this.options == value.options;\n}\n\nBSONRegExp.prototype.toJSON = function() {\n  return { $regex: this.pattern, $options: this.options };\n}\n\nmodule.exports = BSONRegExp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/regexp.js\n// module id = 28\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON Symbol type.\n *\n * @class\n * @deprecated\n * @param {String} value the string representing the symbol.\n * @return {Symbol}\n */\nvar Symbol = function(value) {\n  this._bsontype = 'Symbol';\n  this.value = value;\n}\n\n/**\n * Access the wrapped string value.\n *\n * @method\n * @return {String} returns the wrapped string.\n */\nSymbol.prototype.valueOf = function() {\n  return this.value;\n};\n\nSymbol.prototype.equals = function(value) {\n  if(!value || !value.value) return false;\n  if(value._bsontype != 'Symbol') return false;\n  return this.value === value.value;\n}\n\n/**\n * @ignore\n */\nSymbol.prototype.toJSON = function() {\n  return { $symbol: this.value };\n}\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/symbol.js\n// module id = 29\n// module chunks = 0","\"use strict\";\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Timestamp.\n * @param {number} high the high (signed) 32 bits of the Timestamp.\n * @return {Timestamp}\n */\nvar Timestamp = function(low, high) {\n  this._bsontype = 'Timestamp';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0;  // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0;  // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nTimestamp.prototype.toInt = function() {\n  return this.low_;\n}\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nTimestamp.prototype.toNumber = function() {\n  return this.high_ * Timestamp.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n}\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {String} the JSON representation.\n */\nTimestamp.prototype.toJSON = function() {\n  return {\n    $timestamp: this.toString(),\n  };\n}\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {String} the textual representation of this value.\n */\nTimestamp.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Timestamp.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nTimestamp.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nTimestamp.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nTimestamp.prototype.getLowBitsUnsigned = function() {\n  return (this.low_ >= 0) ?\n      this.low_ : Timestamp.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Timestamp.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Timestamp.\n */\nTimestamp.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ != 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) != 0) {\n        break;\n      }\n    }\n    return this.high_ != 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {Boolean} whether this value is zero.\n */\nTimestamp.prototype.isZero = function() {\n  return this.high_ == 0 && this.low_ == 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {Boolean} whether this value is negative.\n */\nTimestamp.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {Boolean} whether this value is odd.\n */\nTimestamp.prototype.isOdd = function() {\n  return (this.low_ & 1) == 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long equals the other\n */\nTimestamp.prototype.equals = function(other) {\n  return (this.high_ == other.high_) && (this.low_ == other.low_);\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long does not equal the other.\n */\nTimestamp.prototype.notEquals = function(other) {\n  return (this.high_ != other.high_) || (this.low_ != other.low_);\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is less than the other.\n */\nTimestamp.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is less than or equal to the other.\n */\nTimestamp.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is greater than the other.\n */\nTimestamp.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is greater than or equal to the other.\n */\nTimestamp.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nTimestamp.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Timestamp} the negation of this value.\n */\nTimestamp.prototype.negate = function() {\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.MIN_VALUE;\n  } else {\n    return this.not().add(Timestamp.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to add to this one.\n * @return {Timestamp} the sum of this and the given Timestamp.\n */\nTimestamp.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to subtract from this.\n * @return {Timestamp} the difference of this and the given Timestamp.\n */\nTimestamp.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to multiply with this.\n * @return {Timestamp} the product of this and the other.\n */\nTimestamp.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Timestamp.ZERO;\n  } else if (other.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return other.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return this.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Timestamp.TWO_PWR_24_) &&\n      other.lessThan(Timestamp.TWO_PWR_24_)) {\n    return Timestamp.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Timestamp} other Long by which to divide.\n * @return {Timestamp} this Long divided by the given one.\n */\nTimestamp.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    if (other.equals(Timestamp.ONE) ||\n        other.equals(Timestamp.NEG_ONE)) {\n      return Timestamp.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Timestamp.MIN_VALUE)) {\n      return Timestamp.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Timestamp.ZERO)) {\n        return other.isNegative() ? Timestamp.ONE : Timestamp.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate().div(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Timestamp.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Timestamp.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Timestamp.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Timestamp.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Timestamp} other Long by which to mod.\n * @return {Timestamp} this Long modulo the given one.\n */\nTimestamp.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Timestamp} the bitwise-NOT of this value.\n */\nTimestamp.prototype.not = function() {\n  return Timestamp.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to AND.\n * @return {Timestamp} the bitwise-AND of this and the other.\n */\nTimestamp.prototype.and = function(other) {\n  return Timestamp.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to OR.\n * @return {Timestamp} the bitwise-OR of this and the other.\n */\nTimestamp.prototype.or = function(other) {\n  return Timestamp.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to XOR.\n * @return {Timestamp} the bitwise-XOR of this and the other.\n */\nTimestamp.prototype.xor = function(other) {\n  return Timestamp.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the left by the given amount.\n */\nTimestamp.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Timestamp.fromBits(\n                 low << numBits,\n                 (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Timestamp.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount.\n */\nTimestamp.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >> numBits);\n    } else {\n      return Timestamp.fromBits(\n                 high >> (numBits - 32),\n                 high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nTimestamp.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >>> numBits);\n    } else if (numBits == 32) {\n      return Timestamp.fromBits(high, 0);\n    } else {\n      return Timestamp.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Timestamp.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Timestamp(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Timestamp.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Timestamp.ZERO;\n  } else if (value <= -Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MIN_VALUE;\n  } else if (value + 1 >= Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MAX_VALUE;\n  } else if (value < 0) {\n    return Timestamp.fromNumber(-value).negate();\n  } else {\n    return new Timestamp(\n               (value % Timestamp.TWO_PWR_32_DBL_) | 0,\n               (value / Timestamp.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromBits = function(lowBits, highBits) {\n  return new Timestamp(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {String} str the textual representation of the Timestamp.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Timestamp.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));\n\n  var result = Timestamp.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Timestamp.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Timestamp.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Timestamp.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nTimestamp.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Timestamp} */\nTimestamp.ZERO = Timestamp.fromInt(0);\n\n/** @type {Timestamp} */\nTimestamp.ONE = Timestamp.fromInt(1);\n\n/** @type {Timestamp} */\nTimestamp.NEG_ONE = Timestamp.fromInt(-1);\n\n/** @type {Timestamp} */\nTimestamp.MAX_VALUE =\n    Timestamp.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\n/** @type {Timestamp} */\nTimestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Timestamp}\n * @ignore\n */\nTimestamp.TWO_PWR_24_ = Timestamp.fromInt(1 << 24);\n\nmodule.exports = Timestamp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/timestamp.js\n// module id = 30\n// module chunks = 0","\"use strict\";\n\nvar bsonModule = require('./bson')\nvar atob = require('./bson/shared').atob;\nvar bufferConstructor = null;\n\nif (typeof Buffer !== 'undefined') {\n  bufferConstructor = new Buffer(1) instanceof Uint8Array\n    ? Buffer\n    : Uint8Array;\n} else {\n  bufferConstructor = Uint8Array;\n}\n\nvar ExtJSON = function(module) {\n  if (module) {\n    for (var i = 0; i < BSONTypes.length; i++) {\n      if (!module[BSONTypes[i]]) throw new Error('passed in module does not contain all BSON types required');\n    }\n\n    this.bson = module;\n  } else {\n    this.bson = bsonModule;\n  }\n}\n\nExtJSON.extend = function(module) {\n  if (!module) throw new Error(\"expecting mongodb module, invoke by calling ExtJSON.extend(require('mongodb'))\")\n  // Rewrite passed in types\n  for (var i = 0; i < BSONTypes.length; i++) {\n    if (module[BSONTypes[i]]) {\n      // Add the toJSON to the passed in types\n      // This lets us modify the toJSON method withou breaking\n      // backward compatibility\n      module[BSONTypes[i]].prototype.toJSON = bsonModule[BSONTypes[i]].prototype.toJSON;\n    }\n  }\n\n  return module;\n}\n\nfunction deseralizeValue(self, value, options) {\n  if(value['$oid'] != null) {\n    return new self.bson.ObjectID(value['$oid']);\n  } else if(value['$date'] && typeof value['$date'] == 'string') {\n    return Date.parse(value['$date']);\n  } else if(value['$date'] && value['$date'] instanceof self.bson.Long) {\n    var date = new Date();\n    date.setTime(value['$date'].toNumber());\n    return date;\n  } else if(value['$binary'] != null) {\n    if (typeof Buffer !== 'undefined') {\n      if (bufferConstructor === Buffer) {\n        var data = new Buffer(value['$binary'], 'base64');\n        var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n        return new self.bson.Binary(data, type);\n      }\n    }\n\n    var data = new Uint8Array(atob(value['$binary'])\n      .split(\"\")\n      .map(function(c) {\n        return c.charCodeAt(0);\n      }));\n\n    var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n    return new self.bson.Binary(data, type);\n  } else if(value['$maxKey'] != null) {\n    return new self.bson.MaxKey();\n  } else if(value['$minKey'] != null) {\n    return new self.bson.MinKey();\n  } else if(value['$code'] != null) {\n    return new self.bson.Code(value['$code'], deseralizeValue(self, value['$scope'] || {}, options))\n  } else if(value['$numberLong'] != null) {\n    return self.bson.Long.fromString(value['$numberLong']);\n  } else if(value['$numberDouble'] != null && options.strict) {\n    return new self.bson.Double(parseFloat(value['$numberDouble']));\n  } else if(value['$numberDouble'] != null && !options.strict) {\n    return parseFloat(value['$numberDouble']);\n  } else if(value['$numberInt'] != null && options.strict) {\n    return new self.bson.Int32(parseInt(value['$numberInt'], 10));\n  } else if(value['$numberInt'] != null && !options.strict) {\n    return parseInt(value['$numberInt'], 10);\n  } else if(value['$numberDecimal'] != null) {\n    return self.bson.Decimal128.fromString(value['$numberDecimal']);\n  } else if(value['$regex'] != null) {\n    return new self.bson.BSONRegExp(value['$regex'], value['$options'] || '');\n  } else if(value['$symbol'] != null) {\n    return new self.bson.Symbol(value['$symbol']);\n  } else if(value['$ref'] != null) {\n    return new self.bson.DBRef(value['$ref'], deseralizeValue(self, value['$id'], options), value['$db']);\n  } else if(value['$timestamp'] != null) {\n    return self.bson.Timestamp.fromString(value['$timestamp']);\n  } else if(typeof value == 'number' && options.strict) {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return new self.bson.Int32(value);\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return new self.bson.Double(value);\n      } else {\n        return new self.bson.Long.fromNumber(value);\n      }\n    } else {\n      return new self.bson.Double(value);\n    }\n  } else if(typeof value == 'number' && !options.strict) {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return value;\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return value;\n      } else {\n        return new self.bson.Long.fromNumber(value);\n      }\n    } else {\n      return value;\n    }\n  } else {\n    return value;\n  }\n}\n\nExtJSON.prototype.parse = function(text, options) {\n  var self = this;\n  options = options || { strict: true };\n\n  try {\n    return JSON.parse(text, function(key, value) {\n      return deseralizeValue(self, value, options);\n    });\n  } catch(err) {\n    if (err.name === 'SyntaxError') {\n      var error = new Error(err.message);\n      error.stack = err.stack\n      throw error;\n    }\n  }\n}\n\n//\n// Serializer\n//\n\n// MAX INT32 boundaries\nvar BSON_INT32_MAX = 0x7FFFFFFF;\nvar BSON_INT32_MIN = -0x80000000;\n\n// JS MAX PRECISE VALUES\nvar JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.\n\nExtJSON.prototype.stringify = function(value, reducer, indents) {\n  var doc = null;\n\n  if(Array.isArray(value)) {\n    doc = serializeArray(value);\n  } else {\n    doc = serializeDocument(value);\n  }\n\n  return JSON.stringify(doc, reducer, indents);\n}\n\nfunction serializeArray(array) {\n  var _array = new Array(array.length);\n\n  for(var i = 0; i < array.length; i++) {\n    _array[i] = serializeValue(array[i]);\n  }\n\n  return _array;\n}\n\nfunction serializeValue(value) {\n  if(value instanceof Date) {\n    return { $date: { $numberLong: value.getTime().toString() } };\n  } else if(typeof value == 'number') {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return { $numberInt: value.toString() };\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return { $numberDouble: value.toString() };\n      } else {\n        return { $numberLong: value.toString() };\n      }\n    } else {\n      return { $numberDouble: value.toString() };\n    }\n  } else if(Array.isArray(value)) {\n    return serializeArray(value);\n  } else if(value != null && typeof value == 'object') {\n    return serializeDocument(value);\n  }\n\n  return value;\n}\n\nvar BSONTypes = ['Binary', 'Code', 'DBRef', 'Decimal128', 'Double',\n  'Int32', 'Long', 'MaxKey', 'MinKey', 'ObjectID', 'BSONRegExp', 'Symbol', 'Timestamp'];\n\nfunction serializeDocument(doc) {\n  if(doc == null || typeof doc !== 'object') throw new Error('not an object instance');\n  var _doc = {};\n\n  for(var name in doc) {\n    if(Array.isArray(doc[name])) {\n      _doc[name] = serializeArray(doc[name]);\n    } else if(doc[name] != null && doc[name]._bsontype && BSONTypes.indexOf(doc[name]._bsontype) != -1) {\n      _doc[name] = doc[name];\n    } else if(doc[name] instanceof Date) {\n      _doc[name] = serializeValue(doc[name]);\n    } else if(doc[name] != null && typeof doc[name] === 'object') {\n      _doc[name] = serializeDocument(doc[name]);\n    } else {\n      _doc[name] = serializeValue(doc[name]);\n    }\n  }\n\n  return _doc;\n}\n\n// Export the Extended BSON\nmodule.exports = ExtJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/ext_json.js\n// module id = 31\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 32\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 33\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 34\n// module chunks = 0"],"sourceRoot":""}