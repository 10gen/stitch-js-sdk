{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e0419e0b67eaccc7d2d9","webpack:///./src/util.js","webpack:///./~/buffer/index.js","webpack:///./src/common.js","webpack:///./src/errors.js","webpack:///./~/mongodb-extjson/index.js","webpack:///./~/mongodb-extjson/lib/bson/index.js","webpack:///./~/mongodb-extjson/lib/bson/long.js","webpack:///./~/mongodb-extjson/lib/bson/shared.js","webpack:///./src/client.js","webpack:///./~/Base64/base64.js","webpack:///./src/auth.js","webpack:///./src/index.js","webpack:///./src/services/mongodb/collection.js","webpack:///./src/services/mongodb/db.js","webpack:///./src/services/mongodb/mongodb_service.js","webpack:///./src/storage.js","webpack:///./~/base64-js/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/isarray/index.js","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./~/mongodb-extjson/lib/bson/binary.js","webpack:///./~/mongodb-extjson/lib/bson/code.js","webpack:///./~/mongodb-extjson/lib/bson/db_ref.js","webpack:///./~/mongodb-extjson/lib/bson/decimal128.js","webpack:///./~/mongodb-extjson/lib/bson/double.js","webpack:///./~/mongodb-extjson/lib/bson/int_32.js","webpack:///./~/mongodb-extjson/lib/bson/max_key.js","webpack:///./~/mongodb-extjson/lib/bson/min_key.js","webpack:///./~/mongodb-extjson/lib/bson/objectid.js","webpack:///./~/mongodb-extjson/lib/bson/regexp.js","webpack:///./~/mongodb-extjson/lib/bson/symbol.js","webpack:///./~/mongodb-extjson/lib/bson/timestamp.js","webpack:///./~/mongodb-extjson/lib/ext_json.js","webpack:///./~/process/browser.js","webpack:///./~/text-encoding-utf-8/lib/encoding.cjs.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["deprecate","fn","msg","alreadyWarned","deprecated","console","warn","apply","arguments","Object","setPrototypeOf","prototype","JSONTYPE","USER_AUTH_KEY","REFRESH_TOKEN_KEY","STATE_KEY","BAAS_ERROR_KEY","BAAS_LINK_KEY","IMPERSONATION_ACTIVE_KEY","IMPERSONATION_USER_KEY","IMPERSONATION_REAL_USER_AUTH_KEY","DEFAULT_BAAS_SERVER_URL","checkStatus","response","status","error","Error","statusText","makeFetchArgs","method","body","init","headers","cors","parseRedirectFragment","fragment","ourState","vars","split","result","ua","found","stateValid","lastError","shouldBreak","pair","pairParts","pairKey","decodeURIComponent","JSON","parse","window","atob","theirState","BaasError","message","code","name","undefined","captureStackTrace","constructor","stack","common","EJSON","UTF8Decoder","ErrAuthProviderNotFound","ErrInvalidSession","ErrUnauthorized","toQueryString","obj","parts","i","hasOwnProperty","push","encodeURIComponent","join","BaasClient","clientAppID","options","baseUrl","appUrl","authUrl","authManager","handleRedirect","providerName","redirectUrl","location","replace","getOAuthLoginURL","client","stopImpersonation","authedId","get","_do","refreshOnFailure","useRefreshToken","then","clear","type","resource","assign","noAuth","auth","Promise","reject","url","fetchArgs","token","getRefreshToken","accessToken","Authorization","queryParams","fetch","resolve","json","errorCode","_refreshToken","isImpersonatingUser","refreshImpersonation","setAccessToken","stages","responseDecoder","d","strict","responseEncoder","stringify","decoder","encoder","arrayBuffer","buffer","decode","buf","Admin","root","keys","list","_get","create","key","_post","apiKey","keyId","remove","_delete","enable","_put","disable","data","query","defaults","app","appID","doc","users","filter","user","uid","logout","sandbox","executePipeline","userId","user_id","authProviders","provider","authType","authName","update","values","value","varName","pipelines","pipeline","logs","apiKeys","services","service","svc","setConfig","rules","rule","ruleId","incomingWebhooks","incomingWebhook","incomingWebhookId","startImpersonation","Auth","rootUrl","authDataStorage","protocol","host","pathname","currAuth","refreshToken","set","_error","redirectFragment","hash","substring","redirectState","history","replaceState","pageRootUrl","state","generateState","encodeURI","username","password","clearImpersonation","rt","item","id","_id","catch","e","realUserAuth","alpha","stateLength","pos","Math","floor","random","length","ObjectID","Collection","db","insertOp","docs","deleteOp","singleDoc","updateOp","multi","findOp","count","upsert","self","Array","isArray","map","action","args","items","database","collection","insertedIds","deletedCount","removed","projection","project","DB","getCollection","MongoDBService","baasClient","serviceName","databaseName","getDB","getDb","createStorage","MemoryStorage","_data","Storage","store","getItem","setItem","removeItem","localStorage","sessionStorage"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;QChEgBA,S,GAAAA,S;AAAT,SAASA,SAAT,CAAmBC,EAAnB,EAAuBC,GAAvB,EAA4B;AACjC,MAAIC,gBAAgB,KAApB;AACA,WAASC,UAAT,GAAsB;AACpB,QAAI,CAACD,aAAL,EAAoB;AAClBA,sBAAgB,IAAhB;AACAE,cAAQC,IAAR,CAAa,yBAAyBJ,GAAtC;AACD;;AAED,WAAOD,GAAGM,KAAH,CAAS,IAAT,EAAeC,SAAf,CAAP;AACD;;AAEDC,SAAOC,cAAP,CAAsBN,UAAtB,EAAkCH,EAAlC;AACA,MAAIA,GAAGU,SAAP,EAAkB;AAChBP,eAAWO,SAAX,GAAuBV,GAAGU,SAA1B;AACD;;AAED,SAAOP,UAAP;AACD,C;;;;;;;ACjBD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;AC5vDO,IAAMQ,8BAAW,kBAAjB;AACA,IAAMC,wCAAgB,UAAtB;AACA,IAAMC,gDAAoB,UAA1B;AACA,IAAMC,gCAAY,aAAlB;AACA,IAAMC,0CAAiB,aAAvB;AACA,IAAMC,wCAAgB,YAAtB;AACA,IAAMC,8DAA2B,qBAAjC;AACA,IAAMC,0DAAyB,mBAA/B;AACA,IAAMC,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Z;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,sBAAsB;;AAEtB;AACA,YAAY;AACZ;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,KAAK;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA,WAAW,KAAK;AAChB;;AAEA,WAAW,KAAK;AAChB;;AAEA,WAAW,KAAK;AAChB;;AAEA,WAAW,KAAK;AAChB;AACA;;AAEA,WAAW,KAAK;AAChB;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;;;;;;;;ACl1BA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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;AACA,0CAA0C,UAAU;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;ACnFA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;;8CCLA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,mBAAmB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACzRA;;AAEA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;;;;;;;;AC3BA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;8CCrCA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iDAAiD,iBAAiB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,WAAW,WAAW;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,SAAS,mBAAmB;AAC5B;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,SAAS,wBAAwB;AACjC;AACA;AACA;;AAEA;;AAEA,SAAS,mBAAmB;AAC5B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,0DAA0D;AAC9E;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;;;;;;;;;ACtuBA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;;;;;;;;ACnCA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;;;;;;;;ACnCA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;;;;;;;;ACrBA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;;;;;;;;+CCrBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD,GAAG;;AAEpD;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,gBAAgB;AAC1B,aAAa,OAAO;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;;;;;;;;;AClUA;;AAEA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;;;;;;;;ACxCA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,sBAAsB;;AAEtB;AACA,YAAY;AACZ;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA,WAAW,UAAU;AACrB;;AAEA,WAAW,UAAU;AACrB;;AAEA,WAAW,UAAU;AACrB;;AAEA,WAAW,UAAU;AACrB;AACA;;AAEA,WAAW,UAAU;AACrB;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;;;;;;;;8CCp1BA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH,yFAAyF;AACzF,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC,mCAAmC;;AAEnC;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gBAAgB,kBAAkB;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,SAAS,0CAA0C;AAC/D,GAAG;AACH;AACA;AACA,gBAAgB;AAChB,OAAO;AACP,gBAAgB;AAChB,OAAO;AACP,gBAAgB;AAChB;AACA,KAAK;AACL,cAAc;AACd;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;AC9NA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;ACnLtC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,gBAAgB;AAC3B,YAAY,OAAO;AACnB;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,QAAQ;AAC9B;AACA,sBAAsB,QAAQ;AAC9B;AACA,sBAAsB,SAAS;AAC/B;AACA,sBAAsB,QAAQ;AAC9B;AACA,sBAAsB,QAAQ;AAC9B;;AAEA,2CAA2C,eAAe;AAC1D,wCAAwC,mBAAmB;AAC3D,4CAA4C,uBAAuB;AACnE;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,QAAQ;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;;AAEA;;AAEA;;AAEA,eAAe,0BAA0B;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,QAAQ;AAC9B;AACA,sBAAsB,SAAS;AAC/B;AACA,uBAAuB,gBAAgB;AACvC,mBAAmB;;AAEnB,2CAA2C,eAAe;AAC1D;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gBAAgB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;;AAExB;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,0BAA0B;AACxgBAAgB;AAChB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kC;;;;;;ACjoBA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACpBA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,mBAAmB;AAC3D;AACA;;AAEA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;;AAEA;AACA;AACA,wCAAwC,4BAA4B;AACpE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD,SAAS;AACT;AACA,SAAS;AACT,8EAA8E;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,uBAAuB;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,uCAAuC,0BAA0B;AACjE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,0BAA0B,eAAe;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA,CAAC","file":"baas.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"baas\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"baas\"] = factory();\n\telse\n\t\troot[\"baas\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e0419e0b67eaccc7d2d9","export function deprecate(fn, msg) {\n  let alreadyWarned = false;\n  function deprecated() {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      console.warn('DeprecationWarning: ' + msg);\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  Object.setPrototypeOf(deprecated, fn);\n  if (fn.prototype) {\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.js","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 1\n// module chunks = 0","export const JSONTYPE = 'application/json';\nexport const USER_AUTH_KEY = '_baas_ua';\nexport const REFRESH_TOKEN_KEY = '_baas_rt';\nexport const STATE_KEY = '_baas_state';\nexport const BAAS_ERROR_KEY = '_baas_error';\nexport const BAAS_LINK_KEY = '_baas_link';\nexport const IMPERSONATION_ACTIVE_KEY = '_baas_impers_active';\nexport const IMPERSONATION_USER_KEY = '_baas_impers_user';\nexport const IMPERSONATION_REAL_USER_AUTH_KEY = '_baas_impers_real_ua';\nexport const DEFAULT_BAAS_SERVER_URL = 'https://baas-dev.10gen.cc';\n\nexport const checkStatus = (response) => {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  let error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n};\n\nexport const makeFetchArgs = (method, body) => {\n  const init = {\n    method: method,\n    headers: { 'Accept': JSONTYPE, 'Content-Type': JSONTYPE }\n  };\n\n  if (body) {\n    init.body = body;\n  }\n  init.cors = true;\n  return init;\n};\n\nexport const parseRedirectFragment = (fragment, ourState) => {\n  // After being redirected from oauth, the URL will look like:\n  // https://todo.examples.baas-dev.10gen.cc/#_baas_state=...&_baas_ua=...\n  // This function parses out baas-specific tokens from the fragment and\n  // builds an object describing the result.\n  const vars = fragment.split('&');\n  const result = { ua: null, found: false, stateValid: false, lastError: null };\n  let shouldBreak = false;\n  for (const pair of vars) {\n    let pairParts = pair.split('=');\n    const pairKey = decodeURIComponent(pairParts[0]);\n    switch (pairKey) {\n    case BAAS_ERROR_KEY:\n      result.lastError = decodeURIComponent(pairParts[1]);\n      result.found = true;\n      shouldBreak = true;\n      break;\n    case USER_AUTH_KEY:\n      result.ua = JSON.parse(window.atob(decodeURIComponent(pairParts[1])));\n      result.found = true;\n      continue;\n    case BAAS_LINK_KEY:\n      result.found = true;\n      continue;\n    case STATE_KEY:\n      result.found = true;\n      let theirState = decodeURIComponent(pairParts[1]);\n      if (ourState && ourState === theirState) {\n        result.stateValid = true;\n      }\n      continue;\n    default: continue;\n    }\n\n    if (shouldBreak) {\n      break;\n    }\n  }\n\n  return result;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/common.js","/**\n * Creates a new BaasError\n *\n * @class\n * @augments Error\n * @param {String} message The error message\n * @param {Object} fields Optional fields to decorate the error with\n * @return {BaasError} A BaasError instance\n */\nexport class BaasError extends Error {\n  constructor(message, code) {\n    super(message);\n    this.name = 'BaasError';\n    this.message = message;\n    if (code !== undefined) {\n      this.code = code;\n    }\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = (new Error(message)).stack;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/errors.js","var ExtJSON = require('./lib/ext_json');\nExtJSON.BSON = require('./lib/bson');\n\nmodule.exports = ExtJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/index.js\n// module id = 4\n// module chunks = 0","\"use strict\";\n\nvar Binary = require('./binary');\nvar Code = require('./code');\nvar DBRef = require('./db_ref');\nvar Decimal128 = require('./decimal128');\nvar Double = require('./double');\nvar Int32 = require('./int_32');\nvar Long = require('./long');\nvar MaxKey = require('./max_key');\nvar MinKey = require('./min_key');\nvar ObjectID = require('./objectid');\nvar BSONRegExp = require('./regexp');\nvar Symbol = require('./symbol');\nvar Timestamp = require('./timestamp');\n\nmodule.exports = {\n  Binary: Binary, Code: Code, DBRef: DBRef, Decimal128: Decimal128, Double: Double,\n  Int32: Int32, Long: Long, MaxKey: MaxKey, MinKey: MinKey, ObjectID: ObjectID,\n  BSONRegExp: BSONRegExp, Symbol: Symbol, Timestamp: Timestamp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/index.js\n// module id = 5\n// module chunks = 0","\"use strict\";\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Long.\n * @param {number} high the high (signed) 32 bits of the Long.\n * @return {Long}\n */\nvar Long = function(low, high) {\n  this._bsontype = 'Long';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0;  // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0;  // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nLong.prototype.toInt = function() {\n  return this.low_;\n}\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nLong.prototype.toNumber = function() {\n  return this.high_ * Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n}\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {String} the JSON representation.\n */\nLong.prototype.toJSON = function() {\n  return { $numberLong: this.toString() };\n}\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {String} the textual representation of this value.\n */\nLong.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Long.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nLong.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nLong.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nLong.prototype.getLowBitsUnsigned = function() {\n  return (this.low_ >= 0) ?\n      this.low_ : Long.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Long.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Long.\n */\nLong.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ != 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) != 0) {\n        break;\n      }\n    }\n    return this.high_ != 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {Boolean} whether this value is zero.\n */\nLong.prototype.isZero = function() {\n  return this.high_ == 0 && this.low_ == 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {Boolean} whether this value is negative.\n */\nLong.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {Boolean} whether this value is odd.\n */\nLong.prototype.isOdd = function() {\n  return (this.low_ & 1) == 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long equals the other\n */\nLong.prototype.equals = function(other) {\n  return (this.high_ == other.high_) && (this.low_ == other.low_);\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long does not equal the other.\n */\nLong.prototype.notEquals = function(other) {\n  return (this.high_ != other.high_) || (this.low_ != other.low_);\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is less than the other.\n */\nLong.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is less than or equal to the other.\n */\nLong.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is greater than the other.\n */\nLong.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is greater than or equal to the other.\n */\nLong.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nLong.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Long} the negation of this value.\n */\nLong.prototype.negate = function() {\n  if (this.equals(Long.MIN_VALUE)) {\n    return Long.MIN_VALUE;\n  } else {\n    return this.not().add(Long.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Long.\n *\n * @method\n * @param {Long} other Long to add to this one.\n * @return {Long} the sum of this and the given Long.\n */\nLong.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Long.\n *\n * @method\n * @param {Long} other Long to subtract from this.\n * @return {Long} the difference of this and the given Long.\n */\nLong.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Long.\n *\n * @method\n * @param {Long} other Long to multiply with this.\n * @return {Long} the product of this and the other.\n */\nLong.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Long.ZERO;\n  } else if (other.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    return other.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Long.TWO_PWR_24_) &&\n      other.lessThan(Long.TWO_PWR_24_)) {\n    return Long.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Long} other Long by which to divide.\n * @return {Long} this Long divided by the given one.\n */\nLong.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    if (other.equals(Long.ONE) ||\n        other.equals(Long.NEG_ONE)) {\n      return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Long.MIN_VALUE)) {\n      return Long.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Long.ZERO)) {\n        return other.isNegative() ? Long.ONE : Long.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate().div(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Long.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Long.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Long.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Long.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Long} other Long by which to mod.\n * @return {Long} this Long modulo the given one.\n */\nLong.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Long} the bitwise-NOT of this value.\n */\nLong.prototype.not = function() {\n  return Long.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to AND.\n * @return {Long} the bitwise-AND of this and the other.\n */\nLong.prototype.and = function(other) {\n  return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to OR.\n * @return {Long} the bitwise-OR of this and the other.\n */\nLong.prototype.or = function(other) {\n  return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to XOR.\n * @return {Long} the bitwise-XOR of this and the other.\n */\nLong.prototype.xor = function(other) {\n  return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the left by the given amount.\n */\nLong.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Long.fromBits(\n                 low << numBits,\n                 (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Long.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount.\n */\nLong.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >> numBits);\n    } else {\n      return Long.fromBits(\n                 high >> (numBits - 32),\n                 high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nLong.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >>> numBits);\n    } else if (numBits == 32) {\n      return Long.fromBits(high, 0);\n    } else {\n      return Long.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Long.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Long(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Long.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Long.ZERO;\n  } else if (value <= -Long.TWO_PWR_63_DBL_) {\n    return Long.MIN_VALUE;\n  } else if (value + 1 >= Long.TWO_PWR_63_DBL_) {\n    return Long.MAX_VALUE;\n  } else if (value < 0) {\n    return Long.fromNumber(-value).negate();\n  } else {\n    return new Long(\n               (value % Long.TWO_PWR_32_DBL_) | 0,\n               (value / Long.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Long} the corresponding Long value.\n */\nLong.fromBits = function(lowBits, highBits) {\n  return new Long(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {String} str the textual representation of the Long.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Long} the corresponding Long value.\n */\nLong.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Long.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 8));\n\n  var result = Long.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Long.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Long.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Long.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nLong.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Long} */\nLong.ZERO = Long.fromInt(0);\n\n/** @type {Long} */\nLong.ONE = Long.fromInt(1);\n\n/** @type {Long} */\nLong.NEG_ONE = Long.fromInt(-1);\n\n/** @type {Long} */\nLong.MAX_VALUE =\n    Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\n/** @type {Long} */\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Long}\n * @ignore\n */\nLong.TWO_PWR_24_ = Long.fromInt(1 << 24);\n\nmodule.exports = Long;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/long.js\n// module id = 6\n// module chunks = 0","\"use strict\";\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction btoa(input) {\n  var str = String(input);\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars, output = '';\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3/4);\n    if (charCode > 0xFF) {\n      throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n};\n\nfunction atob(input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n};\n\nmodule.exports = {\n  btoa: btoa, atob: atob,\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/shared.js\n// module id = 7\n// module chunks = 0","/* global window, fetch */\n/* eslint no-labels: ['error', { 'allowLoop': true }] */\nimport 'isomorphic-fetch';\nimport Auth from './auth';\nimport MongoDBService from './services/mongodb/mongodb_service';\nimport { BaasError } from './errors';\nimport * as common from './common';\nimport { TextDecoder } from 'text-encoding-utf-8';\nimport ExtJSONModule from 'mongodb-extjson';\nconst EJSON = new ExtJSONModule();\nconst UTF8Decoder = new TextDecoder('utf-8');\n\nexport const ErrAuthProviderNotFound = 'AuthProviderNotFound';\nexport const ErrInvalidSession = 'InvalidSession';\nexport const ErrUnauthorized = 'Unauthorized';\n\nexport const toQueryString = (obj) => {\n  let parts = [];\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      parts.push(encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]));\n    }\n  }\n  return parts.join('&');\n};\n\nexport class BaasClient {\n  constructor(clientAppID, options) {\n    let baseUrl = common.DEFAULT_BAAS_SERVER_URL;\n    if (options && options.baseUrl) {\n      baseUrl = options.baseUrl;\n    }\n    this.appUrl = `${baseUrl}/admin/v1`;\n    this.authUrl = `${baseUrl}/admin/v1/auth`;\n    if (clientAppID) {\n      this.appUrl = `${baseUrl}/v1/app/${clientAppID}`;\n      this.authUrl = `${this.appUrl}/auth`;\n    }\n    this.authManager = new Auth(this.authUrl);\n    this.authManager.handleRedirect();\n  }\n\n  authWithOAuth(providerName, redirectUrl) {\n    window.location.replace(this.authManager.getOAuthLoginURL(providerName, redirectUrl));\n  }\n\n  getOAuthLoginURL(providerName, redirectUrl) {\n    return this.authManager.getOAuthLoginURL(providerName, redirectUrl);\n  }\n\n  anonymousAuth() {\n    return this.client.authManager.stopImpersonation();\n  }\n\n  authedId() {\n    return this.authManager.authedId();\n  }\n\n  auth() {\n    return this.authManager.get();\n  }\n\n  authError() {\n    return this.authManager.error();\n  }\n\n  logout() {\n    return this._do('/auth', 'DELETE', {refreshOnFailure: false, useRefreshToken: true})\n      .then(() => this.authManager.clear());\n  }\n\n  /**\n   * Get a BAAS service\n   *\n   * @method\n   * @param {String} type The service type [mongodb, {String}]\n   * @param {String} name The service name.\n   * @return {Object} returns a named service\n   */\n  service(type, name) {\n    if (type === 'mongodb') {\n      return new MongoDBService(this, name);\n    }\n\n    throw new BaasError('Invalid service type specified: ' + type);\n  }\n\n  _do(resource, method, options) {\n    options = Object.assign({}, {\n      refreshOnFailure: true,\n      useRefreshToken: false\n    }, options);\n\n    if (!options.noAuth) {\n      if (this.auth() === null) {\n        return Promise.reject(new BaasError('Must auth first', ErrUnauthorized));\n      }\n    }\n\n    let url = `${this.appUrl}${resource}`;\n    let fetchArgs = common.makeFetchArgs(method, options.body);\n\n    if (!!options.headers) {\n      Object.assign(fetchArgs.headers, options.headers);\n    }\n\n    if (!options.noAuth) {\n      let token = options.useRefreshToken ? this.authManager.getRefreshToken() : this.auth().accessToken;\n      fetchArgs.headers.Authorization = `Bearer ${token}`;\n    }\n\n    if (options.queryParams) {\n      url = url + '?' + toQueryString(options.queryParams);\n    }\n\n    return fetch(url, fetchArgs).then((response) => {\n      // Okay: passthrough\n      if (response.status >= 200 && response.status < 300) {\n        return Promise.resolve(response);\n      }\n\n      if (response.headers.get('Content-Type') === common.JSONTYPE) {\n        return response.json().then((json) => {\n          // Only want to try refreshing token when there's an invalid session\n          if ('errorCode' in json && json.errorCode === ErrInvalidSession) {\n            if (!options.refreshOnFailure) {\n              this.authManager.clear();\n              const error = new BaasError(json.error, json.errorCode);\n              error.response = response;\n              throw error;\n            }\n\n            return this._refreshToken().then(() => {\n              options.refreshOnFailure = false;\n              return this._do(resource, method, options);\n            });\n          }\n\n          const error = new BaasError(json.error, json.errorCode);\n          error.response = response;\n          return Promise.reject(error);\n        });\n      }\n\n      const error = new Error(response.statusText);\n      error.response = response;\n\n      return Promise.reject(error);\n    });\n  }\n\n  _refreshToken() {\n    if (this.authManager.isImpersonatingUser()) {\n      return this.authManager.refreshImpersonation(this);\n    }\n\n    return this._do('/auth/newAccessToken', 'POST', { refreshOnFailure: false, useRefreshToken: true })\n      .then(response => response.json())\n      .then(json => this.authManager.setAccessToken(json.accessToken));\n  }\n\n  executePipeline(stages, options = {}) {\n    let responseDecoder = (d) => EJSON.parse(d, { strict: false });\n    let responseEncoder = (d) => EJSON.stringify(d);\n\n    if (options.decoder) {\n      if ((typeof options.decoder) !== 'function') {\n        throw new Error('decoder option must be a function, but \"' + typeof (options.decoder) + '\" was provided');\n      }\n      responseDecoder = options.decoder;\n    }\n\n    if (options.encoder) {\n      if ((typeof options.encoder) !== 'function') {\n        throw new Error('encoder option must be a function, but \"' + typeof (options.encoder) + '\" was provided');\n      }\n      responseEncoder = options.encoder;\n    }\n\n    return this._do('/pipeline', 'POST', { body: responseEncoder(stages) })\n      .then(response => (response.arrayBuffer) ? response.arrayBuffer() : response.buffer())\n      .then(buf => UTF8Decoder.decode(buf))\n      .then(body => responseDecoder(body));\n  }\n}\n\nexport class Admin {\n  constructor(baseUrl) {\n    this.client = new BaasClient('', {baseUrl});\n  }\n\n  _do(url, method, options) {\n    return this.client._do(url, method, options)\n      .then(response => response.json());\n  }\n\n  _get(url, queryParams) {\n    return this._do(url, 'GET', {queryParams});\n  }\n\n  _put(url, options) {\n    return this._do(url, 'PUT', options);\n  }\n\n  _delete(url) {\n    return this._do(url, 'DELETE');\n  }\n\n  _post(url, body) {\n    return this._do(url, 'POST', {body: JSON.stringify(body)});\n  }\n\n  profile() {\n    let root = this;\n    return {\n      keys: () => ({\n        list: () => root._get('/profile/keys'),\n        create: (key) => root._post('/profile/keys'),\n        apiKey: (keyId) => ({\n          get: () => root._get(`/profile/keys/${keyId}`),\n          remove: () => this._delete(`/profile/keys/${keyId}`),\n          enable: () => root._put(`/profile/keys/${keyId}/enable`),\n          disable: () => root._put(`/profile/keys/${keyId}/disable`)\n        })\n      })\n    };\n  }\n\n  /* Examples of how to access admin API with this client:\n   *\n   * List all apps\n   *    a.apps().list()\n   *\n   * Fetch app under name 'planner'\n   *    a.apps().app('planner').get()\n   *\n   * List services under the app 'planner'\n   *    a.apps().app('planner').services().list()\n   *\n   * Delete a rule by ID\n   *    a.apps().app('planner').services().service('mdb1').rules().rule('580e6d055b199c221fcb821d').remove()\n   *\n   */\n  apps() {\n    let root = this;\n    return {\n      list: () => root._get('/apps'),\n      create: (data, options) => {\n        let query = (options && options.defaults) ? '?defaults=true' : '';\n        return root._post('/apps' + query, data);\n      },\n\n      app: (appID) => ({\n        get: () => root._get(`/apps/${appID}`),\n        remove: () => root._delete(`/apps/${appID}`),\n        replace: (doc) => root._put(`/apps/${appID}`, {\n          headers: { 'X-Baas-Unsafe': appID },\n          body: JSON.stringify(doc)\n        }),\n\n        users: () => ({\n          list: (filter) => this._get(`/apps/${appID}/users`, filter),\n          user: (uid) => ({\n            get: () => this._get(`/apps/${appID}/users/${uid}`),\n            logout: () => this._put(`/apps/${appID}/users/${uid}/logout`)\n          })\n        }),\n\n        sandbox: () => ({\n          executePipeline: (data, userId) => {\n            return this._do(\n              `/apps/${appID}/sandbox/pipeline`,\n              'POST',\n              {body: JSON.stringify(data), queryParams: {user_id: userId}});\n          }\n        }),\n\n        authProviders: () => ({\n          create: (data) => this._post(`/apps/${appID}/authProviders`, data),\n          list: () => this._get(`/apps/${appID}/authProviders`),\n          provider: (authType, authName) => ({\n            get: () => this._get(`/apps/${appID}/authProviders/${authType}/${authName}`),\n            remove: () => this._delete(`/apps/${appID}/authProviders/${authType}/${authName}`),\n            update: (data) => this._post(`/apps/${appID}/authProviders/${authType}/${authName}`, data)\n          })\n        }),\n        values: () => ({\n          list: () => this._get(`/apps/${appID}/values`),\n          value: (varName) => ({\n            get: () => this._get(`/apps/${appID}/values/${varName}`),\n            remove: () => this._delete(`/apps/${appID}/values/${varName}`),\n            create: (data) => this._post(`/apps/${appID}/values/${varName}`, data),\n            update: (data) => this._post(`/apps/${appID}/values/${varName}`, data)\n          })\n        }),\n        pipelines: () => ({\n          list: () => this._get(`/apps/${appID}/pipelines`),\n          pipeline: (varName) => ({\n            get: () => this._get(`/apps/${appID}/pipelines/${varName}`),\n            remove: () => this._delete(`/apps/${appID}/pipelines/${varName}`),\n            create: (data) => this._post(`/apps/${appID}/pipelines/${varName}`, data),\n            update: (data) => this._post(`/apps/${appID}/pipelines/${varName}`, data)\n          })\n        }),\n        logs: () => ({\n          get: (filter) => this._get(`/apps/${appID}/logs`, filter)\n        }),\n        apiKeys: () => ({\n          list: () => this._get(`/apps/${appID}/keys`),\n          create: (data) => this._post(`/apps/${appID}/keys`, data),\n          apiKey: (key) => ({\n            get: () => this._get(`/apps/${appID}/keys/${key}`),\n            remove: () => this._delete(`/apps/${appID}/keys/${key}`),\n            enable: () => this._put(`/apps/${appID}/keys/${key}/enable`),\n            disable: () => this._put(`/apps/${appID}/keys/${key}/disable`)\n          })\n        }),\n        services: () => ({\n          list: () => this._get(`/apps/${appID}/services`),\n          create: (data) => this._post(`/apps/${appID}/services`, data),\n          service: (svc) => ({\n            get: () => this._get(`/apps/${appID}/services/${svc}`),\n            update: (data) => this._post(`/apps/${appID}/services/${svc}`, data),\n            remove: () => this._delete(`/apps/${appID}/services/${svc}`),\n            setConfig: (data) => this._post(`/apps/${appID}/services/${svc}/config`, data),\n\n            rules: () => ({\n              list: () => this._get(`/apps/${appID}/services/${svc}/rules`),\n              create: (data) => this._post(`/apps/${appID}/services/${svc}/rules`),\n              rule: (ruleId) => ({\n                get: () => this._get(`/apps/${appID}/services/${svc}/rules/${ruleId}`),\n                update: (data) => this._post(`/apps/${appID}/services/${svc}/rules/${ruleId}`, data),\n                remove: () => this._delete(`/apps/${appID}/services/${svc}/rules/${ruleId}`)\n              })\n            }),\n\n            incomingWebhooks: () => ({\n              list: () => this._get(`/apps/${appID}/services/${svc}/incomingWebhooks`),\n              create: (data) => this._post(`/apps/${appID}/services/${svc}/incomingWebhooks`),\n              incomingWebhook: (incomingWebhookId) => ({\n                get: () => this._get(`/apps/${appID}/services/${svc}/incomingWebhooks/${incomingWebhookId}`),\n                update: (data) => this._post(`/apps/${appID}/services/${svc}/incomingWebhooks/${incomingWebhookId}`, data),\n                remove: () => this._delete(`/apps/${appID}/services/${svc}/incomingWebhooks/${incomingWebhookId}`)\n              })\n            })\n          })\n        })\n      })\n    };\n  }\n\n  _admin() {\n    return {\n      logs: () => ({\n        get: (filter) => this._do('/admin/logs', 'GET', {useRefreshToken: true, queryParams: filter})\n      }),\n      users: () => ({\n        list: (filter) => this._do('/admin/users', 'GET', {useRefreshToken: true, queryParams: filter}),\n        user: (uid) => ({\n          logout: () => this._do(`/admin/users/${uid}/logout`, 'PUT', {useRefreshToken: true})\n        })\n      })\n    };\n  }\n\n  _isImpersonatingUser() {\n    return this.client.authManager.isImpersonatingUser();\n  }\n\n  _startImpersonation(userId) {\n    return this.client.authManager.startImpersonation(this.client, userId);\n  }\n\n  _stopImpersonation() {\n    return this.client.authManager.stopImpersonation();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client.js",";(function () {\n\n  var object =\n    typeof exports != 'undefined' ? exports :\n    typeof self != 'undefined' ? self : // #8: web workers\n    $.global; // #31: ExtendScript\n\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    var str = String(input);\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next str index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      str.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = str.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    var str = String(input).replace(/[=]+$/, ''); // #31: ExtendScript bad parse of /=\n    if (str.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = str.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/Base64/base64.js\n// module id = 9\n// module chunks = 0","/* global window, fetch */\n\nimport { createStorage } from './storage';\nimport { BaasError } from './errors';\nimport * as common from './common';\nimport {\n  btoa as b64Encode,\n  atob as b64Decode\n} from 'Base64';\n\nexport default class Auth {\n  constructor(rootUrl) {\n    this.rootUrl = rootUrl;\n    this.authDataStorage = createStorage('localStorage');\n  }\n\n  pageRootUrl() {\n    return [window.location.protocol, '//', window.location.host, window.location.pathname].join('');\n  }\n\n  // The state we generate is to be used for any kind of request where we will\n  // complete an authentication flow via a redirect. We store the generate in\n  // a local storage bound to the app's origin. This ensures that any time we\n  // receive a redirect, there must be a state parameter and it must match\n  // what we ourselves have generated. This state MUST only be sent to\n  // a trusted BaaS endpoint in order to preserve its integrity. BaaS will\n  // store it in some way on its origin (currently a cookie stored on this client)\n  // and use that state at the end of an auth flow as a parameter in the redirect URI.\n  static generateState() {\n    let alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let state = '';\n    const stateLength = 64;\n    for (let i = 0; i < stateLength; i++) {\n      let pos = Math.floor(Math.random() * alpha.length);\n      state += alpha.substring(pos, pos + 1);\n    }\n\n    return state;\n  }\n\n  setAccessToken(token) {\n    let currAuth = this.get();\n    currAuth.accessToken = token;\n    currAuth.refreshToken = this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n    this.set(currAuth);\n  }\n\n  error() {\n    return this._error;\n  }\n\n  handleRedirect() {\n    if (typeof (window) === 'undefined') {\n      // This means we're running in some environment other\n      // than a browser - so handling a redirect makes no sense here.\n      return;\n    }\n\n    let ourState = this.authDataStorage.get(common.STATE_KEY);\n    let redirectFragment = window.location.hash.substring(1);\n    const redirectState = common.parseRedirectFragment(redirectFragment, ourState);\n    if (redirectState.lastError) {\n      console.error(`BaasClient: error from redirect: ${redirectState.lastError}`);\n      this._error = redirectState.lastError;\n      window.history.replaceState(null, '', this.pageRootUrl());\n      return;\n    }\n\n    if (!redirectState.found) {\n      return;\n    }\n\n    this.authDataStorage.remove(common.STATE_KEY);\n    if (!redirectState.stateValid) {\n      console.error('BaasClient: state values did not match!');\n      window.history.replaceState(null, '', this.pageRootUrl());\n      return;\n    }\n\n    if (!redirectState.ua) {\n      console.error('BaasClient: no UA value was returned from redirect!');\n      return;\n    }\n\n    // If we get here, the state is valid - set auth appropriately.\n    this.set(redirectState.ua);\n    window.history.replaceState(null, '', this.pageRootUrl());\n  }\n\n  getOAuthLoginURL(providerName, redirectUrl) {\n    if (redirectUrl === undefined) {\n      redirectUrl = this.pageRootUrl();\n    }\n\n    let state = Auth.generateState();\n    this.authDataStorage.set(common.STATE_KEY, state);\n    let result = `${this.rootUrl}/oauth2/${providerName}?redirect=${encodeURI(redirectUrl)}&state=${state}`;\n    return result;\n  }\n\n  anonymousAuth() {\n    let fetchArgs = common.makeFetchArgs('GET');\n    fetchArgs.cors = true;\n\n    return fetch(`${this.rootUrl}/anon/user`, fetchArgs)\n      .then(common.checkStatus)\n      .then(response => response.json())\n      .then(json => {\n        this.set(json);\n      });\n  }\n\n  apiKeyAuth(key) {\n    const fetchArgs = common.makeFetchArgs('POST', JSON.stringify({'key': key}));\n    fetchArgs.cors = true;\n\n    return fetch(`${this.rootUrl}/api/key`, fetchArgs)\n      .then(common.checkStatus)\n      .then(response => response.json())\n      .then(json => {\n        this.set(json);\n      });\n  }\n\n  localAuth(username, password, options = {cors: true}) {\n    const fetchArgs = common.makeFetchArgs('POST', JSON.stringify({username, password}));\n    fetchArgs.cors = true;\n\n    return fetch(`${this.rootUrl}/local/userpass`, fetchArgs)\n      .then(common.checkStatus)\n      .then((response) => {\n        return response.json().then((json) => {\n          this.set(json);\n          return Promise.resolve(json);\n        });\n      });\n  }\n\n  clear() {\n    this.authDataStorage.remove(common.USER_AUTH_KEY);\n    this.authDataStorage.remove(common.REFRESH_TOKEN_KEY);\n    this.clearImpersonation();\n  }\n\n  getRefreshToken() {\n    return this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n  }\n\n  set(json) {\n    let rt = json.refreshToken;\n    delete json.refreshToken;\n\n    this.authDataStorage.set(common.USER_AUTH_KEY, b64Encode(JSON.stringify(json)));\n    this.authDataStorage.set(common.REFRESH_TOKEN_KEY, rt);\n  }\n\n  get() {\n    if (!this.authDataStorage.get(common.USER_AUTH_KEY)) {\n      return null;\n    }\n\n    const item = this.authDataStorage.get(common.USER_AUTH_KEY);\n    return JSON.parse(b64Decode(item));\n  }\n\n  authedId() {\n    let id = ((this.get() || {}).user || {})._id;\n    if (id) {\n      return {'$oid': id};\n    }\n  }\n\n  isImpersonatingUser() {\n    return this.authDataStorage.get(common.IMPERSONATION_ACTIVE_KEY) === 'true';\n  }\n\n  refreshImpersonation(client) {\n    let userId = this.authDataStorage.get(common.IMPERSONATION_USER_KEY);\n    return client._do(`/admin/users/${userId}/impersonate`, 'POST', {refreshOnFailure: false, useRefreshToken: true}).then((response) => {\n      return response.json().then((json) => {\n        json.refreshToken = this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n        this.set(json);\n        return Promise.resolve();\n      });\n    }).catch((e) => {\n      this.stopImpersonation();\n      return Promise.reject(e);\n    });\n  }\n\n  startImpersonation(client, userId) {\n    if (this.get() === null) {\n      return Promise.reject(new BaasError('Must auth first'));\n    }\n\n    if (this.isImpersonatingUser()) {\n      return Promise.reject(new BaasError('Already impersonating a user'));\n    }\n\n    this.authDataStorage.set(common.IMPERSONATION_ACTIVE_KEY, 'true');\n    this.authDataStorage.set(common.IMPERSONATION_USER_KEY, userId);\n\n    let realUserAuth = JSON.parse(b64Decode(this.authDataStorage.get(common.USER_AUTH_KEY)));\n    realUserAuth.refreshToken = this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n    this.authDataStorage.set(common.IMPERSONATION_REAL_USER_AUTH_KEY, b64Encode(JSON.stringify(realUserAuth)));\n    return this.refreshImpersonation(client);\n  }\n\n  stopImpersonation() {\n    if (!this.isImpersonatingUser()) {\n      throw new BaasError('Not impersonating a user');\n    }\n\n    return new Promise((resolve, reject) => {\n      let realUserAuth = JSON.parse(b64Decode(this.authDataStorage.get(common.IMPERSONATION_REAL_USER_AUTH_KEY)));\n      this.set(realUserAuth);\n      this.clearImpersonation();\n      resolve();\n    });\n  }\n\n  clearImpersonation() {\n    this.authDataStorage.remove(common.IMPERSONATION_ACTIVE_KEY);\n    this.authDataStorage.remove(common.IMPERSONATION_USER_KEY);\n    this.authDataStorage.remove(common.IMPERSONATION_REAL_USER_AUTH_KEY);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/auth.js","import { BaasClient, Admin } from './client';\n\nexport {\n  BaasClient,\n  Admin\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { deprecate } from '../../util';\nimport { BSON } from 'mongodb-extjson';\nconst { ObjectID } = BSON;\n\n/**\n * Create a new Collection instance (not meant to be instantiated directly).\n *\n * @class\n * @return {Collection} a Collection instance.\n */\nexport default class Collection {\n  constructor(db, name) {\n    this.db = db;\n    this.name = name;\n  }\n\n  /**\n   * Insert a single document\n   *\n   * @method\n   * @param {Object} doc The document to insert.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} a Promise for the operation.\n   */\n  insertOne(doc, options = {}) {\n    return insertOp(this, doc, options);\n  }\n\n  /**\n   * Insert multiple documents\n   *\n   * @method\n   * @param {Array} docs The documents to insert.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} Returns a Promise for the operation.\n   */\n  insertMany(docs, options = {}) {\n    return insertOp(this, docs, options);\n  }\n\n  /**\n   * Delete a single document\n   *\n   * @method\n   * @param {Object} query The query used to match a single document.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} Returns a Promise for the operation.\n   */\n  deleteOne(query, options = {}) {\n    return deleteOp(this, query, Object.assign({}, options, { singleDoc: true }));\n  }\n\n  /**\n   * Delete all documents matching query\n   *\n   * @method\n   * @param {Object} query The query used to match the documents to delete.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} Returns a Promise for the operation.\n   */\n  deleteMany(query, options = {}) {\n    return deleteOp(this, query, Object.assign({}, options, { singleDoc: false }));\n  }\n\n  /**\n   * Update a single document\n   *\n   * @method\n   * @param {Object} query The query used to match a single document.\n   * @param {Object} update The update operations to perform on the matching document.\n   * @param {Object} [options] Additional options object.\n   * @param {Boolean} [options.upsert=false] Perform an upsert operation.\n   * @return {Promise<Object, Error>} A Promise for the operation.\n   */\n  updateOne(query, update, options = {}) {\n    return updateOp(this, query, update, Object.assign({}, options, { multi: false }));\n  }\n\n  /**\n   * Update multiple documents\n   *\n   * @method\n   * @param {Object} query The query used to match the documents.\n   * @param {Object} update The update operations to perform on the matching documents.\n   * @param {Object} [options] Additional options object.\n   * @param {Boolean} [options.upsert=false] Perform an upsert operation.\n   * @return {Promise<Object, Error>} Returns a Promise for the operation.\n   */\n  updateMany(query, update, options = {}) {\n    return updateOp(this, query, update, Object.assign({}, options, { multi: true }));\n  }\n\n  /**\n   * Find documents\n   *\n   * @method\n   * @param {Object} query The query used to match documents.\n   * @param {Object} [options] Additional options object.\n   * @param {Object} [options.projection=null] The query document projection.\n   * @param {Number} [options.limit=null] The maximum number of documents to return.\n   * @return {Array} An array of documents.\n   */\n  find(query, options = {}) {\n    return findOp(this, query, options);\n  }\n\n  /**\n   * Count number of matching documents for a given query\n   *\n   * @param {Object} query The query used to match documents.\n   * @param {Object} options Additional find options.\n   * @param {Number} [options.limit=null] The maximum number of documents to return.\n   * @return {Array} An array of documents.\n   */\n  count(query, options = {}) {\n    return findOp(this, query, Object.assign({}, options, { count: true }));\n  }\n\n  // deprecated\n  insert(docs, options = {}) {\n    return insertOp(this, docs, options);\n  }\n\n  upsert(query, update, options = {}) {\n    return updateOp(this, query, update, Object.assign({}, options, { upsert: true }));\n  }\n}\n\n// deprecated methods\nCollection.prototype.upsert =\n  deprecate(Collection.prototype.upsert, 'use `updateOne`/`updateMany` instead of `upsert`');\n\n// private\nfunction insertOp(self, docs, options) {\n  docs = Array.isArray(docs) ? docs : [ docs ];\n\n  // add ObjectIds to docs that have none\n  docs = docs.map(doc => {\n    if (!doc._id) doc._id = new ObjectID();\n    return doc;\n  });\n\n  return self.db.client.executePipeline([\n    {\n      action: 'literal',\n      args: {\n        items: docs\n      }\n    },\n    {\n      service: self.db.service,\n      action: 'insert',\n      args: {\n        database: self.db.name,\n        collection: self.name\n      }\n    }\n  ])\n  .then(response => {\n    return {\n      insertedIds: response.result.map(doc => doc._id)\n    };\n  });\n}\n\nfunction deleteOp(self, query, options) {\n  const args = Object.assign({\n    database: self.db.name,\n    collection: self.name,\n    query: query\n  }, options);\n\n  return self.db.client.executePipeline([\n    {\n      service: self.db.service,\n      action: 'delete',\n      args: args\n    }\n  ])\n  .then(response => {\n    return {\n      deletedCount: response.result[0].removed\n    };\n  });\n}\n\nfunction updateOp(self, query, update, options) {\n  const args = Object.assign({\n    database: self.db.name,\n    collection: self.name,\n    query: query,\n    update: update\n  }, options);\n\n  return self.db.client.executePipeline([\n    {\n      service: self.db.service,\n      action: 'update',\n      args: args\n    }\n  ]);\n}\n\nfunction findOp(self, query, options) {\n  const args = Object.assign({\n    database: self.db.name,\n    collection: self.name\n  }, options);\n\n  // legacy argument naming\n  if (args.projection) {\n    args.project = args.projection;\n    delete args.projection;\n  }\n\n  return self.db.client.executePipeline([\n    {\n      service: self.db.service,\n      action: 'find',\n      args: args\n    }\n  ]);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/mongodb/collection.js","import Collection from './collection';\nimport { deprecate } from '../../util';\n\n/**\n * Create a new DB instance (not meant to be instantiated directly).\n * @class\n * @return {DB} a DB instance.\n */\nexport default class DB {\n  constructor(client, service, name) {\n    this.client = client;\n    this.service = service;\n    this.name = name;\n  }\n\n  /**\n   * Returns a Collection instance representing a MongoDB Collection object.\n   *\n   * @method\n   * @param {String} name The collection name.\n   * @param {Object} [options] Additional options.\n   * @return {Collection} returns a Collection instance representing a MongoDb collection.\n   */\n  collection(name, options = {}) {\n    return new Collection(this, name, options);\n  }\n}\n\n// deprecated\nDB.prototype.getCollection =\n  deprecate(DB.prototype.collection, 'use `collection` instead of `getCollection`');\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/mongodb/db.js","import DB from './db';\nimport { deprecate } from '../../util';\n\n/**\n * Create a new MongoClient instance (not meant to be instantiated directly).\n *\n * @class\n * @return {MongoClient} a MongoClient instance.\n */\nexport default class MongoDBService {\n  constructor(baasClient, serviceName) {\n    this.baasClient = baasClient;\n    this.serviceName = serviceName;\n  }\n\n  /**\n   * Get a Db instance\n   *\n   * @method\n   * @param {String} databaseName The MongoDB database name\n   * @param {Object} [options] Additional options.\n   * @return {Db} returns a Db instance representing a MongoDB database.\n   */\n  db(databaseName, options = {}) {\n    return new DB(this.baasClient, this.serviceName, databaseName);\n  }\n}\n\n// deprecated\nMongoDBService.prototype.getDB =\nMongoDBService.prototype.getDb =\n  deprecate(MongoDBService.prototype.db, 'use `db` instead of `getDB`');\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/mongodb/mongodb_service.js","class MemoryStorage {\n  constructor() {\n    this._data = {};\n  }\n\n  getItem(key) {\n    return (key in this._data) ? this._data[key] : undefined;\n  }\n\n  setItem(key, value) {\n    this._data[key] = value;\n    return this._data[key];\n  }\n\n  removeItem(key) {\n    delete this._data[key];\n    return undefined;\n  }\n\n  clear() {\n    this._data = {};\n    return this._data;\n  }\n}\n\nclass Storage {\n  constructor(store) {\n    this.store = store;\n  }\n\n  get(key) { return this.store.getItem(key); }\n  set(key, value) { return this.store.setItem(key, value); }\n  remove(key) { return this.store.removeItem(key); }\n  clear() { return this.store.clear(); }\n}\n\nexport function createStorage(type) {\n  if (type === 'localStorage') {\n    if (window && 'localStorage' in window && window.localStorage !== null) {\n      return new Storage(window.localStorage);\n    }\n\n    // output warning?\n  } else if (type === 'sessionStorage') {\n    if (window && 'sessionStorage' in window && window.sessionStorage !== null) {\n      return new Storage(window.sessionStorage);\n    }\n\n    // output warning?\n  }\n\n  // default to memory storage\n  return new Storage(new MemoryStorage());\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage.js","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 16\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 17\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 18\n// module chunks = 0","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isomorphic-fetch/fetch-npm-browserify.js\n// module id = 19\n// module chunks = 0","\"use strict\";\n\nvar btoa = require('./shared').btoa;\n\n/**\n * Module dependencies.\n * @ignore\n */\nfunction convert(integer) {\n  var str = Number(integer).toString(16);\n  return str.length == 1 ? \"0\" + str : str;\n};\n\n/**\n * A class representation of the BSON Binary type.\n *\n * Sub types\n *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.\n *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.\n *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.\n *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.\n *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.\n *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.\n *\n * @class\n * @param {Buffer} buffer a buffer object containing the binary data.\n * @param {Number} [subType] the option binary type.\n * @return {Binary}\n */\nvar Binary = function(buffer, subType) {\n  this._bsontype = 'Binary';\n\n  if(buffer instanceof Number) {\n    this.sub_type = buffer;\n    this.position = 0;\n  } else {\n    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;\n    this.position = 0;\n  }\n\n  if(buffer != null && !(buffer instanceof Number)) {\n    // Only accept Buffer or Uint8Array\n    if(typeof buffer == 'string') {\n      this.buffer = writeStringToArray(buffer);\n    } else if(buffer instanceof Uint8Array) {\n      this.buffer = buffer;\n    } else {\n      throw new Error('passed in buffer must be an Uint8Array instance');\n    }\n\n    this.position = buffer.length;\n  } else {\n    this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));\n    // Set position to start of buffer\n    this.position = 0;\n  }\n}\n\n/**\n * Updates this binary with byte_value.\n *\n * @method\n * @param {String} byte_value a single byte we wish to write.\n */\nBinary.prototype.put = function(byte_value) {\n  // If it's a string and a has more than one character throw an error\n  if(byte_value['length'] != null && typeof byte_value != 'number' && byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");\n  if(typeof byte_value != 'number' && byte_value < 0 || byte_value > 255) throw new Error(\"only accepts number in a valid unsigned byte range 0-255\");\n\n  // Decode the byte value once\n  var decoded_byte = null;\n  if(typeof byte_value == 'string') {\n    decoded_byte = byte_value.charCodeAt(0);\n  } else if(byte_value['length'] != null) {\n    decoded_byte = byte_value[0];\n  } else {\n    decoded_byte = byte_value;\n  }\n\n  if(this.buffer.length > this.position) {\n    this.buffer[this.position++] = decoded_byte;\n  } else {\n    var buffer = null;\n    // Create a new buffer (typed or normal array)\n    buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));\n\n    // We need to copy all the content to the new array\n    for(var i = 0; i < this.buffer.length; i++) {\n      buffer[i] = this.buffer[i];\n    }\n\n    // Reassign the buffer\n    this.buffer = buffer;\n    // Write the byte\n    this.buffer[this.position++] = decoded_byte;\n  }\n}\n\n/**\n * Writes a buffer or string to the binary.\n *\n * @method\n * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object.\n * @param {number} offset specify the binary of where to write the content.\n * @return {null}\n */\nBinary.prototype.write = function(string, offset) {\n  offset = typeof offset == 'number' ? offset : this.position;\n\n  // If the buffer is to small let's extend the buffer\n  if(this.buffer.length < offset + string.length) {\n    var buffer = null;\n    // Create a new buffer\n    buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))\n    // Copy the content\n    for(var i = 0; i < this.position; i++) {\n      buffer[i] = this.buffer[i];\n    }\n\n    // Assign the new buffer\n    this.buffer = buffer;\n  }\n\n  for(var i = 0; i < string.length; i++) {\n    this.buffer[offset++] = string[i];\n  }\n\n  this.position = offset > this.position ? offset : this.position;\n}\n\n/**\n * Reads **length** bytes starting at **position**.\n *\n * @method\n * @param {number} position read from the given position in the Binary.\n * @param {number} length the number of bytes to read.\n * @return {Buffer}\n */\nBinary.prototype.read = function(position, length) {\n  length = length && length > 0\n    ? length\n    : this.position;\n\n  // Let's return the data based on the type we have\n  return this.buffer.slice(position, position + length);\n}\n\n/**\n * Returns the value of this binary as a string.\n *\n * @method\n * @return {String}\n */\nBinary.prototype.value = function(asRaw) {\n  asRaw = asRaw == null ? false : asRaw;\n  if(asRaw) return this.buffer.slice(0, this.position);\n  return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);\n}\n\n/**\n * Length.\n *\n * @method\n * @return {number} the length of the binary.\n */\nBinary.prototype.length = function() {\n  return this.position;\n}\n\nBinary.prototype.equals = function(value) {\n  if(!value) return false;\n  if(value._bsontype != 'Binary') return false;\n  if(!value.buffer) return false;\n  if(value.buffer.length != this.buffer.length) return false;\n  for(var i = 0; i < this.buffer.length; i++) {\n    if(this.buffer[i] != value.buffer[i]) return false;\n  }\n\n  return true;\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toJSON = function() {\n  // If we are in the node.js context use Buffer.toString, otherwise the btoa\n  var binary = typeof Buffer !== 'undefined'\n    ? this.buffer.toString('base64')\n    : btoa(String.fromCharCode.apply(null, this.buffer));\n\n  return {\n    $binary: binary,\n    $type: convert(this.sub_type)\n  }\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toString = function(format) {\n  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';\n}\n\n/**\n * Binary default subtype\n * @ignore\n */\nvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/**\n * @ignore\n */\nvar writeStringToArray = function(data) {\n  // Create a buffer\n  var buffer = new Uint8Array(new ArrayBuffer(data.length));\n  // Write the content to the buffer\n  for(var i = 0; i < data.length; i++) {\n    buffer[i] = data.charCodeAt(i);\n  }\n  // Write the string to the buffer\n  return buffer;\n}\n\n/**\n * Convert Array ot Uint8Array to Binary String\n *\n * @ignore\n */\nvar convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {\n  var result = \"\";\n  for(var i = startIndex; i < endIndex; i++) {\n   result = result + String.fromCharCode(byteArray[i]);\n  }\n  return result;\n};\n\nBinary.BUFFER_SIZE = 256;\n\n/**\n * Default BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_DEFAULT = 0;\n/**\n * Function BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_FUNCTION = 1;\n/**\n * Byte Array BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/**\n * OLD UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID_OLD = 3;\n/**\n * UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID = 4;\n/**\n * MD5 BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_MD5 = 5;\n/**\n * User BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_USER_DEFINED = 128;\n\nmodule.exports = Binary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/binary.js\n// module id = 20\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function(code, scope) {\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope;\n}\n\nCode.prototype.equals = function(value) {\n  if(!value || !value.code) return false;\n  if(value._bsontype != 'Code') return false;\n  if(this.code == value.code) return true;\n  return false;\n}\n\nCode.prototype.toJSON = function() {\n  return { $code: this.code, $scope: this.scope };\n}\n\nmodule.exports = Code;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/code.js\n// module id = 21\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON DBRef type.\n *\n * @class\n * @param {String} namespace the collection name.\n * @param {ObjectID} oid the reference ObjectID.\n * @param {String} [db] optional db name, if omitted the reference is local to the current db.\n * @return {DBRef}\n */\nvar DBRef = function(namespace, oid, db) {\n  this._bsontype = 'DBRef';\n  this.namespace = namespace;\n  this.oid = oid;\n  this.db = db;\n}\n\nDBRef.prototype.equals = function(value) {\n  if(value == null || value.namespace == null  || value.db == null || value.oid == null) return false;\n  if(value._bsontype != 'DBRef') return false;\n\n  if(this.oid && this.oid.equals) {\n    return this.oid.equals(value.oid) && this.namespace == value.namespace && this.db == value.db;\n  } else {\n    return this.oid == value.oid && this.namespace == value.namespace && this.db == value.db;\n  }\n}\n\nDBRef.prototype.toJSON = function() {\n  return {\n    '$ref':this.namespace,\n    '$id':this.oid,\n    '$db':this.db == null ? '' : this.db\n  };\n}\n\nmodule.exports = DBRef;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/db_ref.js\n// module id = 22\n// module chunks = 0","\"use strict\"\n\nvar Long = require('./long');\n\nvar PARSE_STRING_REGEXP = /^(\\+|\\-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([\\-\\+])?(\\d+)?$/;\nvar PARSE_INF_REGEXP = /^(\\+|\\-)?(Infinity|inf)$/i;\nvar PARSE_NAN_REGEXP = /^(\\+|\\-)?NaN$/i;\n\nvar EXPONENT_MAX = 6111;\nvar EXPONENT_MIN = -6176;\nvar EXPONENT_BIAS = 6176;\nvar MAX_DIGITS = 34;\n\n// Nan value bits as 32 bit values (due to lack of longs)\nvar NAN_BUFFER = [0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n// Infinity value bits 32 bit values (due to lack of longs)\nvar INF_NEGATIVE_BUFFER = [0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\nvar INF_POSITIVE_BUFFER = [0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n\nvar EXPONENT_REGEX = /^([\\-\\+])?(\\d+)?$/;\n\n// Extract least significant 5 bits\nvar COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nvar EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nvar COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nvar COMBINATION_NAN = 31;\n// Value of combination field for NaN\nvar COMBINATION_SNAN = 32;\n// decimal128 exponent bias\nvar EXPONENT_BIAS = 6176;\n\n// Detect if the value is a digit\nvar isDigit = function(value) {\n  return !isNaN(parseInt(value, 10));\n}\n\n// Divide two uint128 values\nvar divideu128 = function(value) {\n  var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n  var _rem = Long.fromNumber(0);\n  var i = 0;\n\n  if(!value.parts[0] && !value.parts[1] &&\n     !value.parts[2] && !value.parts[3]) {\n    return { quotient: value, rem: _rem };\n  }\n\n  for(var i = 0; i <= 3; i++) {\n    // Adjust remainder to match value of next dividend\n    _rem = _rem.shiftLeft(32);\n    // Add the divided to _rem\n    _rem = _rem.add(new Long(value.parts[i], 0));\n    value.parts[i] = _rem.div(DIVISOR).low_;\n    _rem = _rem.modulo(DIVISOR);\n  }\n\n  return { quotient: value, rem: _rem };\n}\n\n// Multiply two Long values and return the 128 bit value\nvar multiply64x2 = function(left, right) {\n  if(!left && !right) {\n    return {high: Long.fromNumber(0), low: Long.fromNumber(0)};\n  }\n\n  var leftHigh = left.shiftRightUnsigned(32);\n  var leftLow = new Long(left.getLowBits(), 0);\n  var rightHigh = right.shiftRightUnsigned(32);\n  var rightLow = new Long(right.getLowBits(), 0);\n\n  var productHigh = leftHigh.multiply(rightHigh);\n  var productMid = leftHigh.multiply(rightLow);\n  var productMid2 = leftLow.multiply(rightHigh);\n  var productLow = leftLow.multiply(rightLow);\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productMid = new Long(productMid.getLowBits(), 0)\n                .add(productMid2)\n                .add(productLow.shiftRightUnsigned(32));\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n\n  // Return the 128 bit result\n  return {high: productHigh, low: productLow};\n}\n\nvar lessThan = function(left, right) {\n  // Make values unsigned\n  var uhleft = left.high_ >>> 0;\n  var uhright = right.high_ >>> 0;\n\n  // Compare high bits first\n  if(uhleft < uhright) {\n    return true\n  } else if(uhleft == uhright) {\n    var ulleft = left.low_ >>> 0;\n    var ulright = right.low_ >>> 0;\n    if(ulleft < ulright) return true;\n  }\n\n  return false;\n}\n\nvar longtoHex = function(value) {\n  var buffer = new Buffer(8);\n  var index = 0;\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = value.low_ & 0xff;\n  buffer[index++] = (value.low_ >> 8) & 0xff;\n  buffer[index++] = (value.low_ >> 16) & 0xff;\n  buffer[index++] = (value.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = value.high_ & 0xff;\n  buffer[index++] = (value.high_ >> 8) & 0xff;\n  buffer[index++] = (value.high_ >> 16) & 0xff;\n  buffer[index++] = (value.high_ >> 24) & 0xff;\n  return buffer.reverse().toString('hex');\n}\n\nvar int32toHex = function(value) {\n  var buffer = new Buffer(4);\n  var index = 0;\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = value & 0xff;\n  buffer[index++] = (value >> 8) & 0xff;\n  buffer[index++] = (value >> 16) & 0xff;\n  buffer[index++] = (value >> 24) & 0xff;\n  return buffer.reverse().toString('hex');\n}\n\n/**\n * A class representation of the BSON Decimal128 type.\n *\n * @class\n * @param {Buffer} bytes A buffer representing the Decimal128 bytes.\n * @return {Decimal128}\n */\nvar Decimal128 = function(bytes) {\n  this._bsontype = 'Decimal128';\n  this.bytes = bytes;\n}\n\n/**\n * Creates a Decimal128 instance from a string representation.\n *\n * @method\n * @param {String} string A string representing a Decimal128 value.\n */\nDecimal128.fromString = function(string) {\n  // Parse state tracking\n  var isNegative = false;\n  var sawRadix = false;\n  var foundNonZero = false;\n\n  // Total number of significant digits (no leading or trailing zero)\n  var significantDigits = 0;\n  // Total number of significand digits read\n  var nDigitsRead = 0;\n  // Total number of digits (no leading zeros)\n  var nDigits = 0;\n  // The number of the digits after radix\n  var radixPosition = 0;\n  // The index of the first non-zero in *str*\n  var firstNonZero = 0;\n\n  // Digits Array\n  var digits = [0];\n  // The number of digits in digits\n  var nDigitsStored = 0;\n  // Insertion pointer for digits\n  var digitsInsert = 0;\n  // The index of the first non-zero digit\n  var firstDigit = 0;\n  // The index of the last digit\n  var lastDigit = 0;\n\n  // Exponent\n  var exponent = 0;\n  // loop index over array\n  var i = 0;\n  // The high 17 digits of the significand\n  var significandHigh = [0, 0];\n  // The low 17 digits of the significand\n  var significandLow = [0, 0];\n  // The biased exponent\n  var biasedExponent = 0;\n\n  // Read index\n  var index = 0;\n\n  // Trim the string\n  string = string.trim();\n\n  // Results\n  var stringMatch = string.match(PARSE_STRING_REGEXP);\n  var infMatch = string.match(PARSE_INF_REGEXP);\n  var nanMatch = string.match(PARSE_NAN_REGEXP);\n\n  // Validate the string\n  if(!stringMatch\n    && ! infMatch\n    && ! nanMatch || string.length == 0) {\n      throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Check if we have an illegal exponent format\n  if(stringMatch && stringMatch[4] && stringMatch[2] === undefined) {\n    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Get the negative or positive sign\n  if(string[index] == '+' || string[index] == '-') {\n    isNegative = string[index++] == '-';\n  }\n\n  // Check if user passed Infinity or NaN\n  if(!isDigit(string[index]) && string[index] != '.') {\n    if(string[index] == 'i' || string[index] == 'I') {\n      return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n    } else if(string[index] == 'N') {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n  }\n\n  // Read all the digits\n  while(isDigit(string[index]) || string[index] == '.') {\n    if(string[index] == '.') {\n      if(sawRadix) {\n        return new Decimal128(new Buffer(NAN_BUFFER));\n      }\n\n      sawRadix = true;\n      index = index + 1;\n      continue;\n    }\n\n    if(nDigitsStored < 34) {\n      if(string[index] != '0' || foundNonZero) {\n        if(!foundNonZero) {\n          firstNonZero = nDigitsRead;\n        }\n\n        foundNonZero = true;\n\n        // Only store 34 digits\n        digits[digitsInsert++] = parseInt(string[index], 10);\n        nDigitsStored = nDigitsStored + 1;\n      }\n    }\n\n    if(foundNonZero) {\n      nDigits = nDigits + 1;\n    }\n\n    if(sawRadix) {\n      radixPosition = radixPosition + 1;\n    }\n\n    nDigitsRead = nDigitsRead + 1;\n    index = index + 1;\n  }\n\n  if(sawRadix && !nDigitsRead) {\n    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Read exponent if exists\n  if(string[index] == 'e' || string[index] == 'E') {\n    // Read exponent digits\n    var match = string.substr(++index).match(EXPONENT_REGEX);\n\n    // No digits read\n    if(!match || !match[2]) {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n\n    // Get exponent\n    exponent = parseInt(match[0], 10);\n\n    // Adjust the index\n    index = index + match[0].length;\n  }\n\n  // Return not a number\n  if(string[index]) {\n    return new Decimal128(new Buffer(NAN_BUFFER));\n  }\n\n  // Done reading input\n  // Find first non-zero digit in digits\n  firstDigit = 0;\n\n  if(!nDigitsStored) {\n    firstDigit = 0;\n    lastDigit = 0;\n    digits[0] = 0;\n    nDigits = 1;\n    nDigitsStored = 1;\n    significantDigits = 0;\n  } else {\n    lastDigit = nDigitsStored - 1;\n    significantDigits = nDigits;\n\n    if(exponent != 0 && significantDigits != 1) {\n      while(string[firstNonZero + significantDigits - 1] == '0') {\n        significantDigits = significantDigits - 1;\n      }\n    }\n  }\n\n  // Normalization of exponent\n  // Correct exponent based on radix position, and shift significand as needed\n  // to represent user input\n\n  // Overflow prevention\n  if(exponent <= radixPosition && radixPosition - exponent > (1 << 14)) {\n    exponent = EXPONENT_MIN;\n  } else {\n    exponent = exponent - radixPosition;\n  }\n\n  // Attempt to normalize the exponent\n  while(exponent > EXPONENT_MAX) {\n    // Shift exponent to significand and decrease\n    lastDigit = lastDigit + 1;\n\n    if(lastDigit - firstDigit > MAX_DIGITS) {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if(digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n      }\n    }\n\n    exponent = exponent - 1;\n  }\n\n  while(exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n    // Shift last digit\n    if(lastDigit == 0) {\n      exponent = EXPONENT_MIN;\n      significantDigits = 0;\n      break;\n    }\n\n    if(nDigitsStored < nDigits) {\n      // adjust to match digits not stored\n      nDigits = nDigits - 1;\n    } else {\n      // adjust to round\n      lastDigit = lastDigit - 1;\n    }\n\n    if(exponent < EXPONENT_MAX) {\n      exponent = exponent + 1;\n    } else {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if(digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))\n      }\n    }\n  }\n\n  // Round\n  // We've normalized the exponent, but might still need to round.\n  if((lastDigit - firstDigit + 1 < significantDigits) && string[significantDigits] != '0') {\n    var endOfString = nDigitsRead;\n\n    // If we have seen a radix point, 'string' is 1 longer than we have\n    // documented with ndigits_read, so inc the position of the first nonzero\n    // digit and the position that digits are read to.\n    if(sawRadix && exponent == EXPONENT_MIN) {\n      firstNonZero = firstNonZero + 1;\n      endOfString = endOfString + 1;\n    }\n\n    var roundDigit = parseInt(string[firstNonZero + lastDigit + 1], 10);\n    var roundBit = 0;\n\n    if(roundDigit >= 5) {\n      roundBit = 1;\n\n      if(roundDigit == 5) {\n        roundBit = digits[lastDigit] % 2 == 1;\n\n        for(var i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n          if(parseInt(string[i], 10)) {\n            roundBit = 1;\n            break;\n          }\n        }\n      }\n    }\n\n    if(roundBit) {\n      var dIdx = lastDigit;\n\n      for(; dIdx >= 0; dIdx--) {\n        if(++digits[dIdx] > 9) {\n          digits[dIdx] = 0;\n\n          // overflowed most significant digit\n          if(dIdx == 0) {\n            if(exponent < EXPONENT_MAX) {\n              exponent = exponent + 1;\n              digits[dIdx] = 1;\n            } else {\n              return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))\n            }\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n  // Encode significand\n  // The high 17 digits of the significand\n  significandHigh = Long.fromNumber(0);\n  // The low 17 digits of the significand\n  significandLow = Long.fromNumber(0);\n\n  // read a zero\n  if(significantDigits == 0) {\n    significandHigh = Long.fromNumber(0);\n    significandLow = Long.fromNumber(0);\n  } else if(lastDigit - firstDigit < 17) {\n    var dIdx = firstDigit;\n    significandLow = Long.fromNumber(digits[dIdx++]);\n    significandHigh = new Long(0, 0);\n\n    for(; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  } else {\n    var dIdx = firstDigit;\n    significandHigh = Long.fromNumber(digits[dIdx++]);\n\n    for(; dIdx <= lastDigit - 17; dIdx++) {\n      significandHigh = significandHigh.multiply(Long.fromNumber(10));\n      significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n    }\n\n    significandLow = Long.fromNumber(digits[dIdx++]);\n\n    for(; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  }\n\n  var significand = multiply64x2(significandHigh, Long.fromString(\"100000000000000000\"));\n\n  significand.low = significand.low.add(significandLow);\n\n  if(lessThan(significand.low, significandLow)) {\n    significand.high = significand.high.add(Long.fromNumber(1));\n  }\n\n  // Biased exponent\n  var biasedExponent = (exponent + EXPONENT_BIAS);\n  var dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n\n  // Encode combination, exponent, and significand.\n  if(significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber)) {\n    // Encode '11' into bits 1 to 3\n    dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47)));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n  } else {\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n  }\n\n  dec.low = significand.low;\n\n  // Encode sign\n  if(isNegative) {\n    dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n  }\n\n  // Encode into a buffer\n  var buffer = new Buffer(16);\n  var index = 0;\n\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.low.low_ & 0xff;\n  buffer[index++] = (dec.low.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.low.high_ & 0xff;\n  buffer[index++] = (dec.low.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 24) & 0xff;\n\n  // Encode the high 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.high.low_ & 0xff;\n  buffer[index++] = (dec.high.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.high.high_ & 0xff;\n  buffer[index++] = (dec.high.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 24) & 0xff;\n\n  // Return the new Decimal128\n  return new Decimal128(buffer);\n}\n\nDecimal128.prototype.toString = function() {\n  // Note: bits in this routine are referred to starting at 0,\n  // from the sign bit, towards the coefficient.\n\n  // bits 0 - 31\n  var high;\n  // bits 32 - 63\n  var midh;\n  // bits 64 - 95\n  var midl;\n  // bits 96 - 127\n  var low;\n  // bits 1 - 5\n  var combination;\n  // decoded biased exponent (14 bits)\n  var biased_exponent;\n  // the number of significand digits\n  var significand_digits = 0;\n  // the base-10 digits in the significand\n  var significand = new Array(36);\n  for(var i = 0; i < significand.length; i++) significand[i] = 0;\n  // read pointer into significand\n  var index = 0;\n\n  // unbiased exponent\n  var exponent;\n  // the exponent if scientific notation is used\n  var scientific_exponent;\n\n  // true if the number is zero\n  var is_zero = false;\n\n  // the most signifcant significand bits (50-46)\n  var significand_msb;\n  // temporary storage for significand decoding\n  var significand128 = {parts: new Array(4)};\n  // indexing variables\n  var i;\n  var j, k;\n\n  // Output string\n  var string = [];\n\n  // Unpack index\n  var index = 0;\n\n  // Buffer reference\n  var buffer = this.bytes;\n\n  // Unpack the low 64bits into a long\n  low = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n  midl = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Unpack the high 64bits into a long\n  midh = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n  high = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Unpack index\n  var index = 0;\n\n  // Create the state of the decimal\n  var dec = {\n    low: new Long(low, midl),\n    high: new Long(midh, high) };\n\n  if(dec.high.lessThan(Long.ZERO)) {\n    string.push('-');\n  }\n\n  // Decode combination field and exponent\n  combination = (high >> 26) & COMBINATION_MASK;\n\n  if((combination >> 3) == 3) {\n    // Check for 'special' values\n    if(combination == COMBINATION_INFINITY) {\n      return string.join('') + \"Infinity\";\n    } else if(combination == COMBINATION_NAN) {\n      return \"NaN\";\n    } else {\n      biased_exponent = (high >> 15) & EXPONENT_MASK;\n      significand_msb = 0x08 + ((high >> 14) & 0x01);\n    }\n  } else {\n    significand_msb = (high >> 14) & 0x07;\n    biased_exponent = (high >> 17) & EXPONENT_MASK;\n  }\n\n  exponent = biased_exponent - EXPONENT_BIAS;\n\n  // Create string of significand digits\n\n  // Convert the 114-bit binary number represented by\n  // (significand_high, significand_low) to at most 34 decimal\n  // digits through modulo and division.\n  significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n  significand128.parts[1] = midh;\n  significand128.parts[2] = midl;\n  significand128.parts[3] = low;\n\n  if(significand128.parts[0] == 0 && significand128.parts[1] == 0\n    && significand128.parts[2] == 0 && significand128.parts[3] == 0) {\n      is_zero = true;\n  } else {\n    for(var k = 3; k >= 0; k--) {\n      var least_digits = 0;\n      // Peform the divide\n      var result = divideu128(significand128);\n      significand128 = result.quotient;\n      least_digits = result.rem.low_;\n\n      // We now have the 9 least significant digits (in base 2).\n      // Convert and output to string.\n      if(!least_digits) continue;\n\n      for(var j = 8; j >= 0; j--) {\n        // significand[k * 9 + j] = Math.round(least_digits % 10);\n        significand[k * 9 + j] = least_digits % 10;\n        // least_digits = Math.round(least_digits / 10);\n        least_digits = Math.floor(least_digits / 10);\n      }\n    }\n  }\n\n  // Output format options:\n  // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n  // Regular    - ddd.ddd\n\n  if(is_zero) {\n    significand_digits = 1;\n    significand[index] = 0;\n  } else {\n    significand_digits = 36;\n    var i = 0;\n\n    while(!significand[index]) {\n      i++;\n      significand_digits = significand_digits - 1;\n      index = index + 1;\n    }\n  }\n\n  scientific_exponent = significand_digits - 1 + exponent;\n\n  // The scientific exponent checks are dictated by the string conversion\n  // specification and are somewhat arbitrary cutoffs.\n  //\n  // We must check exponent > 0, because if this is the case, the number\n  // has trailing zeros.  However, we *cannot* output these trailing zeros,\n  // because doing so would change the precision of the value, and would\n  // change stored data if the string converted number is round tripped.\n\n  if(scientific_exponent >= 34 || scientific_exponent <= -7 ||\n    exponent > 0) {\n    // Scientific format\n    string.push(significand[index++]);\n    significand_digits = significand_digits - 1;\n\n    if(significand_digits) {\n      string.push('.');\n    }\n\n    for(var i = 0; i < significand_digits; i++) {\n      string.push(significand[index++]);\n    }\n\n    // Exponent\n    string.push('E');\n    if(scientific_exponent > 0) {\n      string.push('+' + scientific_exponent);\n    } else {\n      string.push(scientific_exponent);\n    }\n  } else {\n    // Regular format with no decimal place\n    if(exponent >= 0) {\n      for(var i = 0; i < significand_digits; i++) {\n        string.push(significand[index++]);\n      }\n    } else {\n      var radix_position = significand_digits + exponent;\n\n      // non-zero digits before radix\n      if(radix_position > 0) {\n        for(var i = 0; i < radix_position; i++) {\n          string.push(significand[index++]);\n        }\n      } else {\n        string.push('0');\n      }\n\n      string.push('.');\n      // add leading zeros after radix\n      while(radix_position++ < 0) {\n        string.push('0');\n      }\n\n      for(var i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n        string.push(significand[index++]);\n      }\n    }\n  }\n\n  return string.join('');\n}\n\nDecimal128.prototype.equals = function(value) {\n  if(!value.bytes) return false;\n  return this.bytes.toString('hex') == value.bytes.toString('hex');\n}\n\nDecimal128.prototype.toJSON = function() {\n  return { \"$numberDecimal\": this.toString() };\n}\n\nmodule.exports = Decimal128;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/decimal128.js\n// module id = 23\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nvar Double = function(value) {\n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function() {\n  return this.value;\n}\n\nDouble.prototype.equals = function(value) {\n  if(!value) return false;\n  if(typeof value !== 'number' && value._bsontype != 'Double') return false;\n  if(typeof value === 'number') return this.value === value;\n  return this.value === value.value;\n}\n\nDouble.prototype.toJSON = function() {\n  return { $numberDouble: this.value.toString() };\n}\n\nmodule.exports = Double;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/double.js\n// module id = 24\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function(value) {\n  this._bsontype = 'Int32';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\nInt32.prototype.valueOf = function() {\n  return this.value;\n}\n\nInt32.prototype.equals = function(value) {\n  if(!value) return false;\n  if(typeof value !== 'number' && value._bsontype != 'Int32') return false;\n  if(typeof value === 'number') return this.value === value;\n  return this.value === value.value;\n}\n\nInt32.prototype.toJSON = function() {\n  return { $numberInt: this.value.toString() };\n}\n\nmodule.exports = Int32;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/int_32.js\n// module id = 25\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON MaxKey type.\n *\n * @class\n * @return {MaxKey} A MaxKey instance\n */\nvar MaxKey = function() {\n  this._bsontype = 'MaxKey';\n}\n\nMaxKey.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'MaxKey') return false;\n  return true;\n}\n\nMaxKey.prototype.toJSON = function() {\n  return { $maxKey: 1 };\n}\n\nmodule.exports = MaxKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/max_key.js\n// module id = 26\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON MinKey type.\n *\n * @class\n * @return {MinKey} A MinKey instance\n */\nvar MinKey = function() {\n  this._bsontype = 'MinKey';\n}\n\nMinKey.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'MinKey') return false;\n  return true;\n}\n\nMinKey.prototype.toJSON = function() {\n  return { $minKey: 1 };\n}\n\nmodule.exports = MinKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/min_key.js\n// module id = 27\n// module chunks = 0","\"use strict\";\n\n/**\n * Machine id.\n *\n * Create a random 3-byte value (i.e. unique for this\n * process). Other drivers use a md5 of the machine id here, but\n * that would mean an asyc call to gethostname, so we don't bother.\n * @ignore\n */\nvar MACHINE_ID = parseInt(Math.random() * 0xFFFFFF, 10);\n\n// Regular expression that checks for hex value\nvar checkForHexRegExp = new RegExp(\"^[0-9a-fA-F]{24}$\");\n\n// Precomputed hex table enables speedy hex string conversion\nvar hexTable = [];\nfor (var i = 0; i < 256; i++) {\n  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n\n// Lookup tables\nvar encodeLookup = '0123456789abcdef'.split('')\nvar decodeLookup = []\nvar i = 0\nwhile (i < 10) decodeLookup[0x30 + i] = i++\nwhile (i < 16) decodeLookup[0x61 - 10 + i] = i++\n\nvar convertToHex = function(bytes) {\n  var hexString = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    hexString += hexTable[bytes[i]];\n  }\n\n  return hexString;\n}\n\n/**\n* Create a new ObjectID instance\n*\n* @class\n* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.\n* @property {number} generationTime The generation time of this ObjectId instance\n* @return {ObjectID} instance of ObjectID.\n*/\nvar ObjectID = function(id) {\n  // Duck-typing to support ObjectId from different npm packages\n  if(id instanceof ObjectID) return id;\n  if(!(this instanceof ObjectID)) return new ObjectID(id);\n\n  this._bsontype = 'ObjectID';\n\n  var __id = null;\n  var valid = ObjectID.isValid(id);\n\n  // Throw an error if it's not a valid setup\n  if(!valid && id != null){\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n  } else if(valid && typeof id == 'string' && id.length == 24) {\n    return ObjectID.createFromHexString(id);\n  } else if(id == null || typeof id == 'number') {\n    // convert to 12 byte binary string\n    this.id = this.generate(id);\n  } else if(id != null && id.length === 12) {\n    // assume 12 byte string\n    this.id = id;\n  } else if(id != null && id.toHexString) {\n    // Duck-typing to support ObjectId from different npm packages\n    return id;\n  } else {\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n  }\n\n  if(ObjectID.cacheHexString) this.__id = this.toHexString();\n}\n\n/**\n* Return the ObjectID id as a 24 byte hex string representation\n*\n* @method\n* @return {String} return the 24 byte hex string representation.\n*/\nObjectID.prototype.toHexString = function() {\n  if(ObjectID.cacheHexString && this.__id) return this.__id;\n\n  var hexString = '';\n  if(!this.id || !this.id.length) {\n    throw new Error('invalid ObjectId, ObjectId.id must be either a string or a Uint8Array, but is [' + JSON.stringify(this.id) + ']');\n  }\n\n  if(this.id instanceof Uint8Array) {\n    hexString = convertToHex(this.id);\n    if(ObjectID.cacheHexString) this.__id = hexString;\n    return hexString;\n  }\n\n  for (var i = 0; i < this.id.length; i++) {\n    hexString += hexTable[this.id.charCodeAt(i)];\n  }\n\n  if(ObjectID.cacheHexString) this.__id = hexString;\n  return hexString;\n}\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.getInc = function() {\n  return ObjectID.index = (ObjectID.index + 1) % 0xFFFFFF;\n}\n\n/**\n* Generate a 12 byte id buffer used in ObjectID's\n*\n* @method\n* @param {number} [time] optional parameter allowing to pass in a second based timestamp.\n* @return {Buffer} return the 12 byte id buffer string.\n*/\nObjectID.prototype.generate = function(time) {\n  if ('number' != typeof time) {\n    time = ~~(Date.now()/1000);\n  }\n\n  // Use pid\n  var pid = (typeof process === 'undefined' ? Math.floor(Math.random() * 100000) : process.pid) % 0xFFFF;\n  var inc = this.getInc();\n  // Buffer used\n  var buffer = new Uint8Array(12);\n  // Encode time\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Encode machine\n  buffer[6] = MACHINE_ID & 0xff;\n  buffer[5] = (MACHINE_ID >> 8) & 0xff;\n  buffer[4] = (MACHINE_ID >> 16) & 0xff;\n  // Encode pid\n  buffer[8] = pid & 0xff;\n  buffer[7] = (pid >> 8) & 0xff;\n  // Encode index\n  buffer[11] = inc & 0xff;\n  buffer[10] = (inc >> 8) & 0xff;\n  buffer[9] = (inc >> 16) & 0xff;\n  // Return the buffer\n  return buffer;\n}\n\n/**\n* Converts the id into a 24 byte hex string for printing\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toString = function() {\n  return this.toHexString();\n}\n\n/**\n* Converts to its JSON representation.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toJSON = function() {\n  return { $oid: this.toHexString() };\n}\n\n/**\n* Compares the equality of this ObjectID with `otherID`.\n*\n* @method\n* @param {Object} otherID ObjectID instance to compare against.\n* @return {Boolean} the result of comparing two ObjectID's\n*/\nObjectID.prototype.equals = function(otherId) {\n  var id;\n\n  if(otherId instanceof ObjectID) {\n    return this.toString() == otherId.toString();\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12 && this.id instanceof Uint8Array) {\n    return otherId === this.id.toString('binary');\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 24) {\n    return otherId === this.toHexString();\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12) {\n    return otherId === this.id;\n  } else if(otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {\n    return otherId.toHexString() === this.toHexString();\n  } else {\n    return false;\n  }\n}\n\n/**\n* Returns the generation date (accurate up to the second) that this ID was generated.\n*\n* @method\n* @return {date} the generation date\n*/\nObjectID.prototype.getTimestamp = function() {\n  var timestamp = new Date();\n  var time = this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n  timestamp.setTime(Math.floor(time) * 1000);\n  return timestamp;\n}\n\n/**\n* Creates an ObjectID from a hex string representation of an ObjectID.\n*\n* @method\n* @param {String} hexString create a ObjectID from a passed in 24 byte hexstring.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromHexString = function(string) {\n  // Throw an error if it's not a valid setup\n  if(typeof string === 'undefined' || string != null && string.length != 24)\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n\n  var length = string.length;\n\n  if(length > 12*2) {\n    throw new Error('Id cannot be longer than 12 bytes');\n  }\n\n  // Calculate lengths\n  var sizeof = length >> 1;\n  var array = new Uint8Array(sizeof);\n  var n = 0;\n  var i = 0;\n\n  while (i < length) {\n    array[n++] = decodeLookup[string.charCodeAt(i++)] << 4 | decodeLookup[string.charCodeAt(i++)]\n  }\n\n  return new ObjectID(array);\n}\n\n/**\n* Checks if a value is a valid bson ObjectId\n*\n* @method\n* @return {Boolean} return true if the value is a valid bson ObjectId, return false otherwise.\n*/\nObjectID.isValid = function(id) {\n  if(id == null) return false;\n\n  if(typeof id == 'number') {\n    return true;\n  }\n\n  if(typeof id == 'string') {\n    return id.length == 12 || (id.length == 24 && checkForHexRegExp.test(id));\n  }\n\n  if(id instanceof ObjectID) {\n    return true;\n  }\n\n  if(id instanceof Uint8Array) {\n    return true;\n  }\n\n  // Duck-Typing detection of ObjectId like objects\n  if(id.toHexString) {\n    return id.id.length == 12 || (id.id.length == 24 && checkForHexRegExp.test(id.id));\n  }\n\n  return false;\n}\n\n/**\n* @ignore\n*/\nObjectID.createPk = function() {\n  return new ObjectID();\n}\n\n/**\n* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\n*\n* @method\n* @param {number} time an integer number representing a number of seconds.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromTime = function(time) {\n  var buffer = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  // Encode time into first 4 bytes\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Return the new objectId\n  return new ObjectID(buffer);\n}\n\n/**\n* @ignore\n*/\nObject.defineProperty(ObjectID.prototype, \"generationTime\", {\n   enumerable: true\n , get: function () {\n     return this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n   }\n , set: function (value) {\n     // Encode time into first 4 bytes\n     this.id[3] = value & 0xff;\n     this.id[2] = (value >> 8) & 0xff;\n     this.id[1] = (value >> 16) & 0xff;\n     this.id[0] = (value >> 24) & 0xff;\n   }\n});\n\n/**\n* @ignore\n*/\nObjectID.index = ~~(Math.random() * 0xFFFFFF);\n\nmodule.exports = ObjectID;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/objectid.js\n// module id = 28\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON RegExp type.\n *\n * @class\n * @return {BSONRegExp} A MinKey instance\n */\nvar BSONRegExp = function(pattern, options) {\n  // Execute\n  this._bsontype = 'BSONRegExp';\n  this.pattern = pattern;\n  this.options = options || '';\n  // Perform validation of parameters\n  if(typeof this.pattern != 'string') throw Error('pattern must be a string');\n  if(typeof this.options != 'string') throw Error('options must be a string');\n\n  // Validate options\n  for(var i = 0; i < options.length; i++) {\n    if(!(this.options[i] == 'i'\n      || this.options[i] == 'm'\n      || this.options[i] == 'x'\n      || this.options[i] == 'l'\n      || this.options[i] == 's'\n      || this.options[i] == 'u'\n    )) {\n      throw new Error('the regular expression options [' + this.options[i] + \"] is not supported\");\n    }\n  }\n}\n\nBSONRegExp.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'BSONRegExp') return false;\n  return this.pattern == value.pattern && this.options == value.options;\n}\n\nBSONRegExp.prototype.toJSON = function() {\n  return { $regex: this.pattern, $options: this.options };\n}\n\nmodule.exports = BSONRegExp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/regexp.js\n// module id = 29\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON Symbol type.\n *\n * @class\n * @deprecated\n * @param {String} value the string representing the symbol.\n * @return {Symbol}\n */\nvar Symbol = function(value) {\n  this._bsontype = 'Symbol';\n  this.value = value;\n}\n\n/**\n * Access the wrapped string value.\n *\n * @method\n * @return {String} returns the wrapped string.\n */\nSymbol.prototype.valueOf = function() {\n  return this.value;\n};\n\nSymbol.prototype.equals = function(value) {\n  if(!value || !value.value) return false;\n  if(value._bsontype != 'Symbol') return false;\n  return this.value === value.value;\n}\n\n/**\n * @ignore\n */\nSymbol.prototype.toJSON = function() {\n  return { $symbol: this.value };\n}\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/symbol.js\n// module id = 30\n// module chunks = 0","\"use strict\";\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Timestamp.\n * @param {number} high the high (signed) 32 bits of the Timestamp.\n * @return {Timestamp}\n */\nvar Timestamp = function(low, high) {\n  this._bsontype = 'Timestamp';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0;  // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0;  // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nTimestamp.prototype.toInt = function() {\n  return this.low_;\n}\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nTimestamp.prototype.toNumber = function() {\n  return this.high_ * Timestamp.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n}\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {String} the JSON representation.\n */\nTimestamp.prototype.toJSON = function() {\n  return {\n    $timestamp: this.toString(),\n  };\n}\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {String} the textual representation of this value.\n */\nTimestamp.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Timestamp.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nTimestamp.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nTimestamp.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nTimestamp.prototype.getLowBitsUnsigned = function() {\n  return (this.low_ >= 0) ?\n      this.low_ : Timestamp.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Timestamp.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Timestamp.\n */\nTimestamp.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ != 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) != 0) {\n        break;\n      }\n    }\n    return this.high_ != 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {Boolean} whether this value is zero.\n */\nTimestamp.prototype.isZero = function() {\n  return this.high_ == 0 && this.low_ == 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {Boolean} whether this value is negative.\n */\nTimestamp.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {Boolean} whether this value is odd.\n */\nTimestamp.prototype.isOdd = function() {\n  return (this.low_ & 1) == 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long equals the other\n */\nTimestamp.prototype.equals = function(other) {\n  return (this.high_ == other.high_) && (this.low_ == other.low_);\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long does not equal the other.\n */\nTimestamp.prototype.notEquals = function(other) {\n  return (this.high_ != other.high_) || (this.low_ != other.low_);\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is less than the other.\n */\nTimestamp.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is less than or equal to the other.\n */\nTimestamp.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is greater than the other.\n */\nTimestamp.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is greater than or equal to the other.\n */\nTimestamp.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nTimestamp.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Timestamp} the negation of this value.\n */\nTimestamp.prototype.negate = function() {\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.MIN_VALUE;\n  } else {\n    return this.not().add(Timestamp.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to add to this one.\n * @return {Timestamp} the sum of this and the given Timestamp.\n */\nTimestamp.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to subtract from this.\n * @return {Timestamp} the difference of this and the given Timestamp.\n */\nTimestamp.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to multiply with this.\n * @return {Timestamp} the product of this and the other.\n */\nTimestamp.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Timestamp.ZERO;\n  } else if (other.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return other.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return this.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Timestamp.TWO_PWR_24_) &&\n      other.lessThan(Timestamp.TWO_PWR_24_)) {\n    return Timestamp.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Timestamp} other Long by which to divide.\n * @return {Timestamp} this Long divided by the given one.\n */\nTimestamp.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    if (other.equals(Timestamp.ONE) ||\n        other.equals(Timestamp.NEG_ONE)) {\n      return Timestamp.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Timestamp.MIN_VALUE)) {\n      return Timestamp.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Timestamp.ZERO)) {\n        return other.isNegative() ? Timestamp.ONE : Timestamp.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate().div(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Timestamp.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Timestamp.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Timestamp.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Timestamp.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Timestamp} other Long by which to mod.\n * @return {Timestamp} this Long modulo the given one.\n */\nTimestamp.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Timestamp} the bitwise-NOT of this value.\n */\nTimestamp.prototype.not = function() {\n  return Timestamp.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to AND.\n * @return {Timestamp} the bitwise-AND of this and the other.\n */\nTimestamp.prototype.and = function(other) {\n  return Timestamp.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to OR.\n * @return {Timestamp} the bitwise-OR of this and the other.\n */\nTimestamp.prototype.or = function(other) {\n  return Timestamp.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to XOR.\n * @return {Timestamp} the bitwise-XOR of this and the other.\n */\nTimestamp.prototype.xor = function(other) {\n  return Timestamp.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the left by the given amount.\n */\nTimestamp.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Timestamp.fromBits(\n                 low << numBits,\n                 (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Timestamp.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount.\n */\nTimestamp.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >> numBits);\n    } else {\n      return Timestamp.fromBits(\n                 high >> (numBits - 32),\n                 high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nTimestamp.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >>> numBits);\n    } else if (numBits == 32) {\n      return Timestamp.fromBits(high, 0);\n    } else {\n      return Timestamp.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Timestamp.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Timestamp(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Timestamp.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Timestamp.ZERO;\n  } else if (value <= -Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MIN_VALUE;\n  } else if (value + 1 >= Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MAX_VALUE;\n  } else if (value < 0) {\n    return Timestamp.fromNumber(-value).negate();\n  } else {\n    return new Timestamp(\n               (value % Timestamp.TWO_PWR_32_DBL_) | 0,\n               (value / Timestamp.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromBits = function(lowBits, highBits) {\n  return new Timestamp(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {String} str the textual representation of the Timestamp.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Timestamp.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));\n\n  var result = Timestamp.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Timestamp.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Timestamp.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Timestamp.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nTimestamp.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Timestamp} */\nTimestamp.ZERO = Timestamp.fromInt(0);\n\n/** @type {Timestamp} */\nTimestamp.ONE = Timestamp.fromInt(1);\n\n/** @type {Timestamp} */\nTimestamp.NEG_ONE = Timestamp.fromInt(-1);\n\n/** @type {Timestamp} */\nTimestamp.MAX_VALUE =\n    Timestamp.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\n/** @type {Timestamp} */\nTimestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Timestamp}\n * @ignore\n */\nTimestamp.TWO_PWR_24_ = Timestamp.fromInt(1 << 24);\n\nmodule.exports = Timestamp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/timestamp.js\n// module id = 31\n// module chunks = 0","\"use strict\";\n\nvar bsonModule = require('./bson')\nvar atob = require('./bson/shared').atob;\nvar bufferConstructor = null;\n\nif (typeof Buffer !== 'undefined') {\n  bufferConstructor = new Buffer(1) instanceof Uint8Array\n    ? Buffer\n    : Uint8Array;\n} else {\n  bufferConstructor = Uint8Array;\n}\n\nvar ExtJSON = function(module) {\n  if (module) {\n    for (var i = 0; i < BSONTypes.length; i++) {\n      if (!module[BSONTypes[i]]) throw new Error('passed in module does not contain all BSON types required');\n    }\n\n    this.bson = module;\n  } else {\n    this.bson = bsonModule;\n  }\n}\n\nExtJSON.extend = function(module) {\n  if (!module) throw new Error(\"expecting mongodb module, invoke by calling ExtJSON.extend(require('mongodb'))\")\n  // Rewrite passed in types\n  for (var i = 0; i < BSONTypes.length; i++) {\n    if (module[BSONTypes[i]]) {\n      // Add the toJSON to the passed in types\n      // This lets us modify the toJSON method withou breaking\n      // backward compatibility\n      module[BSONTypes[i]].prototype.toJSON = bsonModule[BSONTypes[i]].prototype.toJSON;\n    }\n  }\n\n  return module;\n}\n\nfunction deseralizeValue(self, value, options) {\n  if(value['$oid'] != null) {\n    return new self.bson.ObjectID(value['$oid']);\n  } else if(value['$date'] && typeof value['$date'] == 'string') {\n    return Date.parse(value['$date']);\n  } else if(value['$date'] && value['$date'] instanceof self.bson.Long) {\n    var date = new Date();\n    date.setTime(value['$date'].toNumber());\n    return date;\n  } else if(value['$binary'] != null) {\n    if (typeof Buffer !== 'undefined') {\n      if (bufferConstructor === Buffer) {\n        var data = new Buffer(value['$binary'], 'base64');\n        var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n        return new self.bson.Binary(data, type);\n      }\n    }\n\n    var data = new Uint8Array(atob(value['$binary'])\n      .split(\"\")\n      .map(function(c) {\n        return c.charCodeAt(0);\n      }));\n\n    var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n    return new self.bson.Binary(data, type);\n  } else if(value['$maxKey'] != null) {\n    return new self.bson.MaxKey();\n  } else if(value['$minKey'] != null) {\n    return new self.bson.MinKey();\n  } else if(value['$code'] != null) {\n    return new self.bson.Code(value['$code'], deseralizeValue(self, value['$scope'] || {}, options))\n  } else if(value['$numberLong'] != null) {\n    return self.bson.Long.fromString(value['$numberLong']);\n  } else if(value['$numberDouble'] != null && options.strict) {\n    return new self.bson.Double(parseFloat(value['$numberDouble']));\n  } else if(value['$numberDouble'] != null && !options.strict) {\n    return parseFloat(value['$numberDouble']);\n  } else if(value['$numberInt'] != null && options.strict) {\n    return new self.bson.Int32(parseInt(value['$numberInt'], 10));\n  } else if(value['$numberInt'] != null && !options.strict) {\n    return parseInt(value['$numberInt'], 10);\n  } else if(value['$numberDecimal'] != null) {\n    return self.bson.Decimal128.fromString(value['$numberDecimal']);\n  } else if(value['$regex'] != null) {\n    return new self.bson.BSONRegExp(value['$regex'], value['$options'] || '');\n  } else if(value['$symbol'] != null) {\n    return new self.bson.Symbol(value['$symbol']);\n  } else if(value['$ref'] != null) {\n    return new self.bson.DBRef(value['$ref'], deseralizeValue(self, value['$id'], options), value['$db']);\n  } else if(value['$timestamp'] != null) {\n    return self.bson.Timestamp.fromString(value['$timestamp']);\n  } else if(typeof value == 'number' && options.strict) {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return new self.bson.Int32(value);\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return new self.bson.Double(value);\n      } else {\n        return new self.bson.Long.fromNumber(value);\n      }\n    } else {\n      return new self.bson.Double(value);\n    }\n  } else if(typeof value == 'number' && !options.strict) {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return value;\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return value;\n      } else {\n        return new self.bson.Long.fromNumber(value);\n      }\n    } else {\n      return value;\n    }\n  } else {\n    return value;\n  }\n}\n\nExtJSON.prototype.parse = function(text, options) {\n  var self = this;\n  options = options || { strict: true };\n\n  try {\n    return JSON.parse(text, function(key, value) {\n      return deseralizeValue(self, value, options);\n    });\n  } catch(err) {\n    if (err.name === 'SyntaxError') {\n      var error = new Error(err.message);\n      error.stack = err.stack\n      throw error;\n    }\n  }\n}\n\n//\n// Serializer\n//\n\n// MAX INT32 boundaries\nvar BSON_INT32_MAX = 0x7FFFFFFF;\nvar BSON_INT32_MIN = -0x80000000;\n\n// JS MAX PRECISE VALUES\nvar JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.\n\nExtJSON.prototype.stringify = function(value, reducer, indents) {\n  var doc = null;\n\n  if(Array.isArray(value)) {\n    doc = serializeArray(value);\n  } else {\n    doc = serializeDocument(value);\n  }\n\n  return JSON.stringify(doc, reducer, indents);\n}\n\nfunction serializeArray(array) {\n  var _array = new Array(array.length);\n\n  for(var i = 0; i < array.length; i++) {\n    _array[i] = serializeValue(array[i]);\n  }\n\n  return _array;\n}\n\nfunction serializeValue(value) {\n  if(value instanceof Date) {\n    return { $date: { $numberLong: value.getTime().toString() } };\n  } else if(typeof value == 'number') {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return { $numberInt: value.toString() };\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return { $numberDouble: value.toString() };\n      } else {\n        return { $numberLong: value.toString() };\n      }\n    } else {\n      return { $numberDouble: value.toString() };\n    }\n  } else if(Array.isArray(value)) {\n    return serializeArray(value);\n  } else if(value != null && typeof value == 'object') {\n    return serializeDocument(value);\n  }\n\n  return value;\n}\n\nvar BSONTypes = ['Binary', 'Code', 'DBRef', 'Decimal128', 'Double',\n  'Int32', 'Long', 'MaxKey', 'MinKey', 'ObjectID', 'BSONRegExp', 'Symbol', 'Timestamp'];\n\nfunction serializeDocument(doc) {\n  if(doc == null || typeof doc !== 'object') throw new Error('not an object instance');\n  var _doc = {};\n\n  for(var name in doc) {\n    if(Array.isArray(doc[name])) {\n      _doc[name] = serializeArray(doc[name]);\n    } else if(doc[name] != null && doc[name]._bsontype && BSONTypes.indexOf(doc[name]._bsontype) != -1) {\n      _doc[name] = doc[name];\n    } else if(doc[name] instanceof Date) {\n      _doc[name] = serializeValue(doc[name]);\n    } else if(doc[name] != null && typeof doc[name] === 'object') {\n      _doc[name] = serializeDocument(doc[name]);\n    } else {\n      _doc[name] = serializeValue(doc[name]);\n    }\n  }\n\n  return _doc;\n}\n\n// Export the Extended BSON\nmodule.exports = ExtJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/ext_json.js\n// module id = 32\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 33\n// module chunks = 0","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/text-encoding-utf-8/lib/encoding.cjs.js\n// module id = 34\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 35\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 36\n// module chunks = 0"],"sourceRoot":""}