{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///baas.min.js","webpack:///webpack/bootstrap b98fc2ac1aa79855ca08","webpack:///./src/util.js","webpack:///./~/buffer/index.js","webpack:///./src/common.js","webpack:///./src/errors.js","webpack:///./~/mongodb-extjson/index.js","webpack:///./~/mongodb-extjson/lib/bson/index.js","webpack:///./~/mongodb-extjson/lib/bson/long.js","webpack:///./~/mongodb-extjson/lib/bson/shared.js","webpack:///./src/client.js","webpack:///./~/Base64/base64.js","webpack:///./src/auth.js","webpack:///./src/index.js","webpack:///./src/services/mongodb/collection.js","webpack:///./src/services/mongodb/db.js","webpack:///./src/services/mongodb/mongodb_service.js","webpack:///./src/storage.js","webpack:///./~/base64-js/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/isarray/index.js","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./~/mongodb-extjson/lib/bson/binary.js","webpack:///./~/mongodb-extjson/lib/bson/code.js","webpack:///./~/mongodb-extjson/lib/bson/db_ref.js","webpack:///./~/mongodb-extjson/lib/bson/decimal128.js","webpack:///./~/mongodb-extjson/lib/bson/double.js","webpack:///./~/mongodb-extjson/lib/bson/int_32.js","webpack:///./~/mongodb-extjson/lib/bson/max_key.js","webpack:///./~/mongodb-extjson/lib/bson/min_key.js","webpack:///./~/mongodb-extjson/lib/bson/objectid.js","webpack:///./~/mongodb-extjson/lib/bson/regexp.js","webpack:///./~/mongodb-extjson/lib/bson/symbol.js","webpack:///./~/mongodb-extjson/lib/bson/timestamp.js","webpack:///./~/mongodb-extjson/lib/ext_json.js","webpack:///./~/process/browser.js","webpack:///./~/text-encoding-utf-8/lib/encoding.cjs.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","deprecate","fn","msg","deprecated","alreadyWarned","console","warn","apply","arguments","setPrototypeOf","global","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","Error","allocUnsafe","from","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","byteLength","actual","write","slice","fromArrayLike","array","byteOffset","obj","isBuffer","len","copy","buffer","isnan","type","isArray","data","toString","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","foo","subarray","e","poolSize","_augment","Symbol","species","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","equals","inspect","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","JSONTYPE","USER_AUTH_KEY","STATE_KEY","REFRESH_TOKEN_KEY","BAAS_ERROR_KEY","BAAS_LINK_KEY","IMPERSONATION_ACTIVE_KEY","IMPERSONATION_USER_KEY","IMPERSONATION_REAL_USER_AUTH_KEY","DEFAULT_BAAS_SERVER_URL","checkStatus","response","status","error","statusText","makeFetchArgs","method","body","init","headers","Accept","Content-Type","cors","parseRedirectFragment","fragment","ourState","vars","split","result","ua","stateValid","lastError","shouldBreak","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","pair","pairParts","decodeURIComponent","JSON","parse","window","atob","theirState","err","return","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","BaasError","_Error","message","_this","getPrototypeOf","captureStackTrace","stack","ExtJSON","BSON","Binary","Code","DBRef","Decimal128","Double","Int32","Long","MaxKey","MinKey","ObjectID","BSONRegExp","Timestamp","low","high","_bsontype","low_","high_","toInt","toNumber","TWO_PWR_32_DBL_","getLowBitsUnsigned","$numberLong","opt_radix","radix","isZero","isNegative","MIN_VALUE","radixLong","fromNumber","div","rem","multiply","subtract","negate","radixToPower","remDiv","intval","digits","getHighBits","getLowBits","getNumBitsAbs","bit","isOdd","other","notEquals","lessThan","lessThanOrEqual","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","add","ONE","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","fromBits","ZERO","TWO_PWR_24_","NEG_ONE","halfThis","shiftRight","approx","shiftLeft","log2","ceil","log","LN2","delta","approxRes","approxRem","modulo","and","or","xor","numBits","shiftRightUnsigned","fromInt","cachedObj","INT_CACHE_","TWO_PWR_63_DBL_","MAX_VALUE","lowBits","highBits","charAt","substring","power","TWO_PWR_16_DBL_","TWO_PWR_24_DBL_","TWO_PWR_31_DBL_","TWO_PWR_48_DBL_","TWO_PWR_64_DBL_","btoa","input","block","charCode","idx","map","chars","output","InvalidCharacterError","bs","bc","_interopRequireDefault","default","Admin","BaasClient","toQueryString","ErrUnauthorized","ErrInvalidSession","ErrAuthProviderNotFound","_typeof","_createClass","defineProperties","props","descriptor","key","protoProps","staticProps","_auth","_auth2","_mongodb_service","_mongodb_service2","_errors","_common","common","newObj","_textEncodingUtf","_mongodbExtjson","_mongodbExtjson2","EJSON","UTF8Decoder","TextDecoder","parts","encodeURIComponent","clientAppID","options","baseUrl","appUrl","authUrl","authManager","handleRedirect","providerName","redirectUrl","location","getOAuthLoginURL","anonymousAuth","authedId","_do","refreshOnFailure","useRefreshToken","then","clear","resource","_this2","assign","noAuth","auth","Promise","reject","url","fetchArgs","token","getRefreshToken","accessToken","Authorization","queryParams","fetch","resolve","json","errorCode","_refreshToken","_this3","isImpersonatingUser","refreshImpersonation","setAccessToken","stages","responseDecoder","strict","responseEncoder","stringify","decoder","encoder","arrayBuffer","decode","client","_this4","keys","_get","_post","apiKey","keyId","remove","_delete","enable","_put","disable","_this5","query","defaults","app","appID","doc","X-Baas-Unsafe","users","filter","user","uid","logout","sandbox","executePipeline","userId","user_id","authProviders","provider","authType","authName","update","values","varName","pipelines","pipeline","logs","apiKeys","services","service","svc","setConfig","rules","rule","ruleId","incomingWebhooks","incomingWebhook","incomingWebhookId","_this6","startImpersonation","stopImpersonation","_storage","_Base","Auth","rootUrl","authDataStorage","createStorage","protocol","host","pathname","currAuth","refreshToken","_error","redirectFragment","hash","redirectState","history","replaceState","pageRootUrl","state","generateState","encodeURI","username","password","clearImpersonation","rt","item","id","_id","$oid","catch","realUserAuth","alpha","random","_client","insertOp","docs","db","action","args","items","database","collection","insertedIds","deleteOp","deletedCount","removed","updateOp","findOp","projection","project","_util","Collection","singleDoc","multi","count","upsert","_collection","_collection2","DB","getCollection","_db","_db2","MongoDBService","baasClient","serviceName","databaseName","getDB","getDb","localStorage","Storage","sessionStorage","MemoryStorage","_data","store","getItem","setItem","removeItem","placeHoldersCount","b64","tmp","placeHolders","Arr","L","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","extraBytes","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","abs","bind","convert","integer","subType","sub_type","position","BSON_BINARY_SUBTYPE_DEFAULT","BUFFER_SIZE","writeStringToArray","put","byte_value","decoded_byte","asRaw","convertArraytoUtf8BinaryString","$binary","$type","format","startIndex","endIndex","SUBTYPE_DEFAULT","SUBTYPE_FUNCTION","SUBTYPE_BYTE_ARRAY","SUBTYPE_UUID_OLD","SUBTYPE_UUID","SUBTYPE_MD5","SUBTYPE_USER_DEFINED","scope","$code","$scope","namespace","oid","$ref","$id","$db","EXPONENT_BIAS","NAN_BUFFER","reverse","INF_NEGATIVE_BUFFER","INF_POSITIVE_BUFFER","isDigit","divideu128","DIVISOR","_rem","quotient","multiply64x2","left","right","leftHigh","leftLow","rightHigh","rightLow","productHigh","productMid","productMid2","productLow","uhleft","uhright","sawRadix","foundNonZero","significantDigits","nDigitsRead","nDigits","radixPosition","firstNonZero","nDigitsStored","digitsInsert","firstDigit","lastDigit","exponent","significandHigh","significandLow","biasedExponent","index","stringMatch","infMatch","nanMatch","digitsString","endOfString","roundDigit","roundBit","dIdx","significand","dec","midh","midl","combination","biased_exponent","significand_digits","scientific_exponent","significand_msb","k","is_zero","significand128","least_digits","radix_position","$numberDecimal","valueOf","$numberDouble","$numberInt","$maxKey","$minKey","process","MACHINE_ID","checkForHexRegExp","RegExp","hexTable","decodeLookup","convertToHex","hexString","valid","isValid","createFromHexString","generate","toHexString","cacheHexString","__id","getInc","time","Date","now","pid","inc","otherId","getTimestamp","timestamp","setTime","sizeof","test","createPk","createFromTime","pattern","$regex","$options","$symbol","$timestamp","deseralizeValue","bson","date","bufferConstructor","parseFloat","JS_INT_MIN","JS_INT_MAX","BSON_INT32_MIN","BSON_INT32_MAX","serializeArray","_array","serializeValue","$date","getTime","serializeDocument","_doc","BSONTypes","bsonModule","extend","text","reducer","indents","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask","inRange","ToDictionary","stringToCodePoints","u","codePointsToString","code_points","cp","Stream","tokens","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextEncoder","_encoder","_options","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","end_of_stream","finished","prepend","code_point","UTF8Encoder","temp","endOfStream","shift","unshift","pop","input_stream","encode","opt_string","g","Function","eval","normalizeName","normalizeValue","iteratorFor","support","iterable","Headers","forEach","append","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","view","bufferClone","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","isDataView","_bodyArrayBuffer","isArrayBufferView","rejected","normalizeMethod","upcased","toUpperCase","methods","Request","credentials","mode","referrer","form","parseHeaders","rawHeaders","line","Response","bodyInit","ok","viewClasses","DataView","oldValue","has","callback","thisArg","entries","clone","redirectStatuses","redirect","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"baas.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"baas\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"baas\"] = factory();\n\telse\n\t\troot[\"baas\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"baas\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"baas\"] = factory();\n\telse\n\t\troot[\"baas\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 11);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deprecate = deprecate;\nfunction deprecate(fn, msg) {\n  var alreadyWarned = false;\n  function deprecated() {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      console.warn('DeprecationWarning: ' + msg);\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  Object.setPrototypeOf(deprecated, fn);\n  if (fn.prototype) {\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(16)\nvar ieee754 = __webpack_require__(17)\nvar isArray = __webpack_require__(18)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar JSONTYPE = exports.JSONTYPE = 'application/json';\nvar USER_AUTH_KEY = exports.USER_AUTH_KEY = '_baas_ua';\nvar REFRESH_TOKEN_KEY = exports.REFRESH_TOKEN_KEY = '_baas_rt';\nvar STATE_KEY = exports.STATE_KEY = '_baas_state';\nvar BAAS_ERROR_KEY = exports.BAAS_ERROR_KEY = '_baas_error';\nvar BAAS_LINK_KEY = exports.BAAS_LINK_KEY = '_baas_link';\nvar IMPERSONATION_ACTIVE_KEY = exports.IMPERSONATION_ACTIVE_KEY = '_baas_impers_active';\nvar IMPERSONATION_USER_KEY = exports.IMPERSONATION_USER_KEY = '_baas_impers_user';\nvar IMPERSONATION_REAL_USER_AUTH_KEY = exports.IMPERSONATION_REAL_USER_AUTH_KEY = '_baas_impers_real_ua';\nvar DEFAULT_BAAS_SERVER_URL = exports.DEFAULT_BAAS_SERVER_URL = 'https://baas-dev.10gen.cc';\n\nvar checkStatus = exports.checkStatus = function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  var error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n};\n\nvar makeFetchArgs = exports.makeFetchArgs = function makeFetchArgs(method, body) {\n  var init = {\n    method: method,\n    headers: { 'Accept': JSONTYPE, 'Content-Type': JSONTYPE }\n  };\n\n  if (body) {\n    init.body = body;\n  }\n  init.cors = true;\n  return init;\n};\n\nvar parseRedirectFragment = exports.parseRedirectFragment = function parseRedirectFragment(fragment, ourState) {\n  // After being redirected from oauth, the URL will look like:\n  // https://todo.examples.baas-dev.10gen.cc/#_baas_state=...&_baas_ua=...\n  // This function parses out baas-specific tokens from the fragment and\n  // builds an object describing the result.\n  var vars = fragment.split('&');\n  var result = { ua: null, found: false, stateValid: false, lastError: null };\n  var shouldBreak = false;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = vars[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var pair = _step.value;\n\n      var pairParts = pair.split('=');\n      var pairKey = decodeURIComponent(pairParts[0]);\n      switch (pairKey) {\n        case BAAS_ERROR_KEY:\n          result.lastError = decodeURIComponent(pairParts[1]);\n          result.found = true;\n          shouldBreak = true;\n          break;\n        case USER_AUTH_KEY:\n          result.ua = JSON.parse(window.atob(decodeURIComponent(pairParts[1])));\n          result.found = true;\n          continue;\n        case BAAS_LINK_KEY:\n          result.found = true;\n          continue;\n        case STATE_KEY:\n          result.found = true;\n          var theirState = decodeURIComponent(pairParts[1]);\n          if (ourState && ourState === theirState) {\n            result.stateValid = true;\n          }\n          continue;\n        default:\n          continue;\n      }\n\n      if (shouldBreak) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return result;\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Creates a new BaasError\n *\n * @class\n * @augments Error\n * @param {String} message The error message\n * @param {Object} fields Optional fields to decorate the error with\n * @return {BaasError} A BaasError instance\n */\nvar BaasError = exports.BaasError = function (_Error) {\n  _inherits(BaasError, _Error);\n\n  function BaasError(message, code) {\n    _classCallCheck(this, BaasError);\n\n    var _this = _possibleConstructorReturn(this, (BaasError.__proto__ || Object.getPrototypeOf(BaasError)).call(this, message));\n\n    _this.name = 'BaasError';\n    _this.message = message;\n    if (code !== undefined) {\n      _this.code = code;\n    }\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(_this, _this.constructor);\n    } else {\n      _this.stack = new Error(message).stack;\n    }\n    return _this;\n  }\n\n  return BaasError;\n}(Error);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ExtJSON = __webpack_require__(32);\nExtJSON.BSON = __webpack_require__(5);\n\nmodule.exports = ExtJSON;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Binary = __webpack_require__(20);\nvar Code = __webpack_require__(21);\nvar DBRef = __webpack_require__(22);\nvar Decimal128 = __webpack_require__(23);\nvar Double = __webpack_require__(24);\nvar Int32 = __webpack_require__(25);\nvar Long = __webpack_require__(6);\nvar MaxKey = __webpack_require__(26);\nvar MinKey = __webpack_require__(27);\nvar ObjectID = __webpack_require__(28);\nvar BSONRegExp = __webpack_require__(29);\nvar Symbol = __webpack_require__(30);\nvar Timestamp = __webpack_require__(31);\n\nmodule.exports = {\n  Binary: Binary, Code: Code, DBRef: DBRef, Decimal128: Decimal128, Double: Double,\n  Int32: Int32, Long: Long, MaxKey: MaxKey, MinKey: MinKey, ObjectID: ObjectID,\n  BSONRegExp: BSONRegExp, Symbol: Symbol, Timestamp: Timestamp\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Long.\n * @param {number} high the high (signed) 32 bits of the Long.\n * @return {Long}\n */\nvar Long = function(low, high) {\n  this._bsontype = 'Long';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0;  // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0;  // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nLong.prototype.toInt = function() {\n  return this.low_;\n}\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nLong.prototype.toNumber = function() {\n  return this.high_ * Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n}\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {String} the JSON representation.\n */\nLong.prototype.toJSON = function() {\n  return { $numberLong: this.toString() };\n}\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {String} the textual representation of this value.\n */\nLong.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Long.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nLong.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nLong.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nLong.prototype.getLowBitsUnsigned = function() {\n  return (this.low_ >= 0) ?\n      this.low_ : Long.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Long.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Long.\n */\nLong.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ != 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) != 0) {\n        break;\n      }\n    }\n    return this.high_ != 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {Boolean} whether this value is zero.\n */\nLong.prototype.isZero = function() {\n  return this.high_ == 0 && this.low_ == 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {Boolean} whether this value is negative.\n */\nLong.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {Boolean} whether this value is odd.\n */\nLong.prototype.isOdd = function() {\n  return (this.low_ & 1) == 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long equals the other\n */\nLong.prototype.equals = function(other) {\n  return (this.high_ == other.high_) && (this.low_ == other.low_);\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long does not equal the other.\n */\nLong.prototype.notEquals = function(other) {\n  return (this.high_ != other.high_) || (this.low_ != other.low_);\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is less than the other.\n */\nLong.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is less than or equal to the other.\n */\nLong.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is greater than the other.\n */\nLong.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is greater than or equal to the other.\n */\nLong.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nLong.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Long} the negation of this value.\n */\nLong.prototype.negate = function() {\n  if (this.equals(Long.MIN_VALUE)) {\n    return Long.MIN_VALUE;\n  } else {\n    return this.not().add(Long.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Long.\n *\n * @method\n * @param {Long} other Long to add to this one.\n * @return {Long} the sum of this and the given Long.\n */\nLong.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Long.\n *\n * @method\n * @param {Long} other Long to subtract from this.\n * @return {Long} the difference of this and the given Long.\n */\nLong.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Long.\n *\n * @method\n * @param {Long} other Long to multiply with this.\n * @return {Long} the product of this and the other.\n */\nLong.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Long.ZERO;\n  } else if (other.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    return other.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Long.TWO_PWR_24_) &&\n      other.lessThan(Long.TWO_PWR_24_)) {\n    return Long.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Long} other Long by which to divide.\n * @return {Long} this Long divided by the given one.\n */\nLong.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    if (other.equals(Long.ONE) ||\n        other.equals(Long.NEG_ONE)) {\n      return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Long.MIN_VALUE)) {\n      return Long.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Long.ZERO)) {\n        return other.isNegative() ? Long.ONE : Long.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate().div(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Long.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Long.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Long.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Long.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Long} other Long by which to mod.\n * @return {Long} this Long modulo the given one.\n */\nLong.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Long} the bitwise-NOT of this value.\n */\nLong.prototype.not = function() {\n  return Long.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to AND.\n * @return {Long} the bitwise-AND of this and the other.\n */\nLong.prototype.and = function(other) {\n  return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to OR.\n * @return {Long} the bitwise-OR of this and the other.\n */\nLong.prototype.or = function(other) {\n  return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to XOR.\n * @return {Long} the bitwise-XOR of this and the other.\n */\nLong.prototype.xor = function(other) {\n  return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the left by the given amount.\n */\nLong.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Long.fromBits(\n                 low << numBits,\n                 (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Long.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount.\n */\nLong.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >> numBits);\n    } else {\n      return Long.fromBits(\n                 high >> (numBits - 32),\n                 high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nLong.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >>> numBits);\n    } else if (numBits == 32) {\n      return Long.fromBits(high, 0);\n    } else {\n      return Long.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Long.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Long(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Long.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Long.ZERO;\n  } else if (value <= -Long.TWO_PWR_63_DBL_) {\n    return Long.MIN_VALUE;\n  } else if (value + 1 >= Long.TWO_PWR_63_DBL_) {\n    return Long.MAX_VALUE;\n  } else if (value < 0) {\n    return Long.fromNumber(-value).negate();\n  } else {\n    return new Long(\n               (value % Long.TWO_PWR_32_DBL_) | 0,\n               (value / Long.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Long} the corresponding Long value.\n */\nLong.fromBits = function(lowBits, highBits) {\n  return new Long(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {String} str the textual representation of the Long.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Long} the corresponding Long value.\n */\nLong.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Long.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 8));\n\n  var result = Long.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Long.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Long.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Long.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nLong.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Long} */\nLong.ZERO = Long.fromInt(0);\n\n/** @type {Long} */\nLong.ONE = Long.fromInt(1);\n\n/** @type {Long} */\nLong.NEG_ONE = Long.fromInt(-1);\n\n/** @type {Long} */\nLong.MAX_VALUE =\n    Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\n/** @type {Long} */\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Long}\n * @ignore\n */\nLong.TWO_PWR_24_ = Long.fromInt(1 << 24);\n\nmodule.exports = Long;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction btoa(input) {\n  var str = String(input);\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars, output = '';\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3/4);\n    if (charCode > 0xFF) {\n      throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n};\n\nfunction atob(input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n};\n\nmodule.exports = {\n  btoa: btoa, atob: atob,\n}\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Admin = exports.BaasClient = exports.toQueryString = exports.ErrUnauthorized = exports.ErrInvalidSession = exports.ErrAuthProviderNotFound = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global window, fetch */\n/* eslint no-labels: ['error', { 'allowLoop': true }] */\n\n\n__webpack_require__(19);\n\nvar _auth = __webpack_require__(10);\n\nvar _auth2 = _interopRequireDefault(_auth);\n\nvar _mongodb_service = __webpack_require__(14);\n\nvar _mongodb_service2 = _interopRequireDefault(_mongodb_service);\n\nvar _errors = __webpack_require__(3);\n\nvar _common = __webpack_require__(2);\n\nvar common = _interopRequireWildcard(_common);\n\nvar _textEncodingUtf = __webpack_require__(34);\n\nvar _mongodbExtjson = __webpack_require__(4);\n\nvar _mongodbExtjson2 = _interopRequireDefault(_mongodbExtjson);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EJSON = new _mongodbExtjson2.default();\nvar UTF8Decoder = new _textEncodingUtf.TextDecoder('utf-8');\n\nvar ErrAuthProviderNotFound = exports.ErrAuthProviderNotFound = 'AuthProviderNotFound';\nvar ErrInvalidSession = exports.ErrInvalidSession = 'InvalidSession';\nvar ErrUnauthorized = exports.ErrUnauthorized = 'Unauthorized';\n\nvar toQueryString = exports.toQueryString = function toQueryString(obj) {\n  var parts = [];\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      parts.push(encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]));\n    }\n  }\n  return parts.join('&');\n};\n\nvar BaasClient = exports.BaasClient = function () {\n  function BaasClient(clientAppID, options) {\n    _classCallCheck(this, BaasClient);\n\n    var baseUrl = common.DEFAULT_BAAS_SERVER_URL;\n    if (options && options.baseUrl) {\n      baseUrl = options.baseUrl;\n    }\n    this.appUrl = baseUrl + '/admin/v1';\n    this.authUrl = baseUrl + '/admin/v1/auth';\n    if (clientAppID) {\n      this.appUrl = baseUrl + '/v1/app/' + clientAppID;\n      this.authUrl = this.appUrl + '/auth';\n    }\n    this.authManager = new _auth2.default(this.authUrl);\n    this.authManager.handleRedirect();\n  }\n\n  _createClass(BaasClient, [{\n    key: 'authWithOAuth',\n    value: function authWithOAuth(providerName, redirectUrl) {\n      window.location.replace(this.authManager.getOAuthLoginURL(providerName, redirectUrl));\n    }\n  }, {\n    key: 'getOAuthLoginURL',\n    value: function getOAuthLoginURL(providerName, redirectUrl) {\n      return this.authManager.getOAuthLoginURL(providerName, redirectUrl);\n    }\n  }, {\n    key: 'anonymousAuth',\n    value: function anonymousAuth() {\n      return this.authManager.anonymousAuth();\n    }\n  }, {\n    key: 'authedId',\n    value: function authedId() {\n      return this.authManager.authedId();\n    }\n  }, {\n    key: 'auth',\n    value: function auth() {\n      return this.authManager.get();\n    }\n  }, {\n    key: 'authError',\n    value: function authError() {\n      return this.authManager.error();\n    }\n  }, {\n    key: 'logout',\n    value: function logout() {\n      var _this = this;\n\n      return this._do('/auth', 'DELETE', { refreshOnFailure: false, useRefreshToken: true }).then(function () {\n        return _this.authManager.clear();\n      });\n    }\n\n    /**\n     * Get a BAAS service\n     *\n     * @method\n     * @param {String} type The service type [mongodb, {String}]\n     * @param {String} name The service name.\n     * @return {Object} returns a named service\n     */\n\n  }, {\n    key: 'service',\n    value: function service(type, name) {\n      if (type === 'mongodb') {\n        return new _mongodb_service2.default(this, name);\n      }\n\n      throw new _errors.BaasError('Invalid service type specified: ' + type);\n    }\n  }, {\n    key: '_do',\n    value: function _do(resource, method, options) {\n      var _this2 = this;\n\n      options = Object.assign({}, {\n        refreshOnFailure: true,\n        useRefreshToken: false\n      }, options);\n\n      if (!options.noAuth) {\n        if (this.auth() === null) {\n          return Promise.reject(new _errors.BaasError('Must auth first', ErrUnauthorized));\n        }\n      }\n\n      var url = '' + this.appUrl + resource;\n      var fetchArgs = common.makeFetchArgs(method, options.body);\n\n      if (!!options.headers) {\n        Object.assign(fetchArgs.headers, options.headers);\n      }\n\n      if (!options.noAuth) {\n        var token = options.useRefreshToken ? this.authManager.getRefreshToken() : this.auth().accessToken;\n        fetchArgs.headers.Authorization = 'Bearer ' + token;\n      }\n\n      if (options.queryParams) {\n        url = url + '?' + toQueryString(options.queryParams);\n      }\n\n      return fetch(url, fetchArgs).then(function (response) {\n        // Okay: passthrough\n        if (response.status >= 200 && response.status < 300) {\n          return Promise.resolve(response);\n        }\n\n        if (response.headers.get('Content-Type') === common.JSONTYPE) {\n          return response.json().then(function (json) {\n            // Only want to try refreshing token when there's an invalid session\n            if ('errorCode' in json && json.errorCode === ErrInvalidSession) {\n              if (!options.refreshOnFailure) {\n                _this2.authManager.clear();\n                var _error = new _errors.BaasError(json.error, json.errorCode);\n                _error.response = response;\n                throw _error;\n              }\n\n              return _this2._refreshToken().then(function () {\n                options.refreshOnFailure = false;\n                return _this2._do(resource, method, options);\n              });\n            }\n\n            var error = new _errors.BaasError(json.error, json.errorCode);\n            error.response = response;\n            return Promise.reject(error);\n          });\n        }\n\n        var error = new Error(response.statusText);\n        error.response = response;\n\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: '_refreshToken',\n    value: function _refreshToken() {\n      var _this3 = this;\n\n      if (this.authManager.isImpersonatingUser()) {\n        return this.authManager.refreshImpersonation(this);\n      }\n\n      return this._do('/auth/newAccessToken', 'POST', { refreshOnFailure: false, useRefreshToken: true }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return _this3.authManager.setAccessToken(json.accessToken);\n      });\n    }\n  }, {\n    key: 'executePipeline',\n    value: function executePipeline(stages) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var responseDecoder = function responseDecoder(d) {\n        return EJSON.parse(d, { strict: false });\n      };\n      var responseEncoder = function responseEncoder(d) {\n        return EJSON.stringify(d);\n      };\n\n      if (options.decoder) {\n        if (typeof options.decoder !== 'function') {\n          throw new Error('decoder option must be a function, but \"' + _typeof(options.decoder) + '\" was provided');\n        }\n        responseDecoder = options.decoder;\n      }\n\n      if (options.encoder) {\n        if (typeof options.encoder !== 'function') {\n          throw new Error('encoder option must be a function, but \"' + _typeof(options.encoder) + '\" was provided');\n        }\n        responseEncoder = options.encoder;\n      }\n\n      return this._do('/pipeline', 'POST', { body: responseEncoder(stages) }).then(function (response) {\n        return response.arrayBuffer ? response.arrayBuffer() : response.buffer();\n      }).then(function (buf) {\n        return UTF8Decoder.decode(buf);\n      }).then(function (body) {\n        return responseDecoder(body);\n      });\n    }\n  }]);\n\n  return BaasClient;\n}();\n\nvar Admin = exports.Admin = function () {\n  function Admin(baseUrl) {\n    _classCallCheck(this, Admin);\n\n    this.client = new BaasClient('', { baseUrl: baseUrl });\n  }\n\n  _createClass(Admin, [{\n    key: '_do',\n    value: function _do(url, method, options) {\n      return this.client._do(url, method, options).then(function (response) {\n        return response.json();\n      });\n    }\n  }, {\n    key: '_get',\n    value: function _get(url, queryParams) {\n      return this._do(url, 'GET', { queryParams: queryParams });\n    }\n  }, {\n    key: '_put',\n    value: function _put(url, options) {\n      return this._do(url, 'PUT', options);\n    }\n  }, {\n    key: '_delete',\n    value: function _delete(url) {\n      return this._do(url, 'DELETE');\n    }\n  }, {\n    key: '_post',\n    value: function _post(url, body) {\n      return this._do(url, 'POST', { body: JSON.stringify(body) });\n    }\n  }, {\n    key: 'profile',\n    value: function profile() {\n      var _this4 = this;\n\n      var root = this;\n      return {\n        keys: function keys() {\n          return {\n            list: function list() {\n              return root._get('/profile/keys');\n            },\n            create: function create(key) {\n              return root._post('/profile/keys');\n            },\n            apiKey: function apiKey(keyId) {\n              return {\n                get: function get() {\n                  return root._get('/profile/keys/' + keyId);\n                },\n                remove: function remove() {\n                  return _this4._delete('/profile/keys/' + keyId);\n                },\n                enable: function enable() {\n                  return root._put('/profile/keys/' + keyId + '/enable');\n                },\n                disable: function disable() {\n                  return root._put('/profile/keys/' + keyId + '/disable');\n                }\n              };\n            }\n          };\n        }\n      };\n    }\n\n    /* Examples of how to access admin API with this client:\n     *\n     * List all apps\n     *    a.apps().list()\n     *\n     * Fetch app under name 'planner'\n     *    a.apps().app('planner').get()\n     *\n     * List services under the app 'planner'\n     *    a.apps().app('planner').services().list()\n     *\n     * Delete a rule by ID\n     *    a.apps().app('planner').services().service('mdb1').rules().rule('580e6d055b199c221fcb821d').remove()\n     *\n     */\n\n  }, {\n    key: 'apps',\n    value: function apps() {\n      var _this5 = this;\n\n      var root = this;\n      return {\n        list: function list() {\n          return root._get('/apps');\n        },\n        create: function create(data, options) {\n          var query = options && options.defaults ? '?defaults=true' : '';\n          return root._post('/apps' + query, data);\n        },\n\n        app: function app(appID) {\n          return {\n            get: function get() {\n              return root._get('/apps/' + appID);\n            },\n            remove: function remove() {\n              return root._delete('/apps/' + appID);\n            },\n            replace: function replace(doc) {\n              return root._put('/apps/' + appID, {\n                headers: { 'X-Baas-Unsafe': appID },\n                body: JSON.stringify(doc)\n              });\n            },\n\n            users: function users() {\n              return {\n                list: function list(filter) {\n                  return _this5._get('/apps/' + appID + '/users', filter);\n                },\n                user: function user(uid) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/apps/' + appID + '/users/' + uid);\n                    },\n                    logout: function logout() {\n                      return _this5._put('/apps/' + appID + '/users/' + uid + '/logout');\n                    }\n                  };\n                }\n              };\n            },\n\n            sandbox: function sandbox() {\n              return {\n                executePipeline: function executePipeline(data, userId) {\n                  return _this5._do('/apps/' + appID + '/sandbox/pipeline', 'POST', { body: JSON.stringify(data), queryParams: { user_id: userId } });\n                }\n              };\n            },\n\n            authProviders: function authProviders() {\n              return {\n                create: function create(data) {\n                  return _this5._post('/apps/' + appID + '/authProviders', data);\n                },\n                list: function list() {\n                  return _this5._get('/apps/' + appID + '/authProviders');\n                },\n                provider: function provider(authType, authName) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/apps/' + appID + '/authProviders/' + authType + '/' + authName);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/apps/' + appID + '/authProviders/' + authType + '/' + authName);\n                    },\n                    update: function update(data) {\n                      return _this5._post('/apps/' + appID + '/authProviders/' + authType + '/' + authName, data);\n                    }\n                  };\n                }\n              };\n            },\n            values: function values() {\n              return {\n                list: function list() {\n                  return _this5._get('/apps/' + appID + '/values');\n                },\n                value: function value(varName) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/apps/' + appID + '/values/' + varName);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/apps/' + appID + '/values/' + varName);\n                    },\n                    create: function create(data) {\n                      return _this5._post('/apps/' + appID + '/values/' + varName, data);\n                    },\n                    update: function update(data) {\n                      return _this5._post('/apps/' + appID + '/values/' + varName, data);\n                    }\n                  };\n                }\n              };\n            },\n            pipelines: function pipelines() {\n              return {\n                list: function list() {\n                  return _this5._get('/apps/' + appID + '/pipelines');\n                },\n                pipeline: function pipeline(varName) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/apps/' + appID + '/pipelines/' + varName);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/apps/' + appID + '/pipelines/' + varName);\n                    },\n                    create: function create(data) {\n                      return _this5._post('/apps/' + appID + '/pipelines/' + varName, data);\n                    },\n                    update: function update(data) {\n                      return _this5._post('/apps/' + appID + '/pipelines/' + varName, data);\n                    }\n                  };\n                }\n              };\n            },\n            logs: function logs() {\n              return {\n                get: function get(filter) {\n                  return _this5._get('/apps/' + appID + '/logs', filter);\n                }\n              };\n            },\n            apiKeys: function apiKeys() {\n              return {\n                list: function list() {\n                  return _this5._get('/apps/' + appID + '/keys');\n                },\n                create: function create(data) {\n                  return _this5._post('/apps/' + appID + '/keys', data);\n                },\n                apiKey: function apiKey(key) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/apps/' + appID + '/keys/' + key);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/apps/' + appID + '/keys/' + key);\n                    },\n                    enable: function enable() {\n                      return _this5._put('/apps/' + appID + '/keys/' + key + '/enable');\n                    },\n                    disable: function disable() {\n                      return _this5._put('/apps/' + appID + '/keys/' + key + '/disable');\n                    }\n                  };\n                }\n              };\n            },\n            services: function services() {\n              return {\n                list: function list() {\n                  return _this5._get('/apps/' + appID + '/services');\n                },\n                create: function create(data) {\n                  return _this5._post('/apps/' + appID + '/services', data);\n                },\n                service: function service(svc) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/apps/' + appID + '/services/' + svc);\n                    },\n                    update: function update(data) {\n                      return _this5._post('/apps/' + appID + '/services/' + svc, data);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/apps/' + appID + '/services/' + svc);\n                    },\n                    setConfig: function setConfig(data) {\n                      return _this5._post('/apps/' + appID + '/services/' + svc + '/config', data);\n                    },\n\n                    rules: function rules() {\n                      return {\n                        list: function list() {\n                          return _this5._get('/apps/' + appID + '/services/' + svc + '/rules');\n                        },\n                        create: function create(data) {\n                          return _this5._post('/apps/' + appID + '/services/' + svc + '/rules');\n                        },\n                        rule: function rule(ruleId) {\n                          return {\n                            get: function get() {\n                              return _this5._get('/apps/' + appID + '/services/' + svc + '/rules/' + ruleId);\n                            },\n                            update: function update(data) {\n                              return _this5._post('/apps/' + appID + '/services/' + svc + '/rules/' + ruleId, data);\n                            },\n                            remove: function remove() {\n                              return _this5._delete('/apps/' + appID + '/services/' + svc + '/rules/' + ruleId);\n                            }\n                          };\n                        }\n                      };\n                    },\n\n                    incomingWebhooks: function incomingWebhooks() {\n                      return {\n                        list: function list() {\n                          return _this5._get('/apps/' + appID + '/services/' + svc + '/incomingWebhooks');\n                        },\n                        create: function create(data) {\n                          return _this5._post('/apps/' + appID + '/services/' + svc + '/incomingWebhooks');\n                        },\n                        incomingWebhook: function incomingWebhook(incomingWebhookId) {\n                          return {\n                            get: function get() {\n                              return _this5._get('/apps/' + appID + '/services/' + svc + '/incomingWebhooks/' + incomingWebhookId);\n                            },\n                            update: function update(data) {\n                              return _this5._post('/apps/' + appID + '/services/' + svc + '/incomingWebhooks/' + incomingWebhookId, data);\n                            },\n                            remove: function remove() {\n                              return _this5._delete('/apps/' + appID + '/services/' + svc + '/incomingWebhooks/' + incomingWebhookId);\n                            }\n                          };\n                        }\n                      };\n                    }\n                  };\n                }\n              };\n            }\n          };\n        }\n      };\n    }\n  }, {\n    key: '_admin',\n    value: function _admin() {\n      var _this6 = this;\n\n      return {\n        logs: function logs() {\n          return {\n            get: function get(filter) {\n              return _this6._do('/admin/logs', 'GET', { useRefreshToken: true, queryParams: filter });\n            }\n          };\n        },\n        users: function users() {\n          return {\n            list: function list(filter) {\n              return _this6._do('/admin/users', 'GET', { useRefreshToken: true, queryParams: filter });\n            },\n            user: function user(uid) {\n              return {\n                logout: function logout() {\n                  return _this6._do('/admin/users/' + uid + '/logout', 'PUT', { useRefreshToken: true });\n                }\n              };\n            }\n          };\n        }\n      };\n    }\n  }, {\n    key: '_isImpersonatingUser',\n    value: function _isImpersonatingUser() {\n      return this.client.authManager.isImpersonatingUser();\n    }\n  }, {\n    key: '_startImpersonation',\n    value: function _startImpersonation(userId) {\n      return this.client.authManager.startImpersonation(this.client, userId);\n    }\n  }, {\n    key: '_stopImpersonation',\n    value: function _stopImpersonation() {\n      return this.client.authManager.stopImpersonation();\n    }\n  }]);\n\n  return Admin;\n}();\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n;(function () {\n\n  var object =\n     true ? exports :\n    typeof self != 'undefined' ? self : // #8: web workers\n    $.global; // #31: ExtendScript\n\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    var str = String(input);\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next str index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      str.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = str.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    var str = String(input).replace(/[=]+$/, ''); // #31: ExtendScript bad parse of /=\n    if (str.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = str.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global window, fetch */\n\nvar _storage = __webpack_require__(15);\n\nvar _errors = __webpack_require__(3);\n\nvar _common = __webpack_require__(2);\n\nvar common = _interopRequireWildcard(_common);\n\nvar _Base = __webpack_require__(9);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Auth = function () {\n  function Auth(rootUrl) {\n    _classCallCheck(this, Auth);\n\n    this.rootUrl = rootUrl;\n    this.authDataStorage = (0, _storage.createStorage)('localStorage');\n  }\n\n  _createClass(Auth, [{\n    key: 'pageRootUrl',\n    value: function pageRootUrl() {\n      return [window.location.protocol, '//', window.location.host, window.location.pathname].join('');\n    }\n\n    // The state we generate is to be used for any kind of request where we will\n    // complete an authentication flow via a redirect. We store the generate in\n    // a local storage bound to the app's origin. This ensures that any time we\n    // receive a redirect, there must be a state parameter and it must match\n    // what we ourselves have generated. This state MUST only be sent to\n    // a trusted BaaS endpoint in order to preserve its integrity. BaaS will\n    // store it in some way on its origin (currently a cookie stored on this client)\n    // and use that state at the end of an auth flow as a parameter in the redirect URI.\n\n  }, {\n    key: 'setAccessToken',\n    value: function setAccessToken(token) {\n      var currAuth = this.get();\n      currAuth.accessToken = token;\n      currAuth.refreshToken = this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n      this.set(currAuth);\n    }\n  }, {\n    key: 'error',\n    value: function error() {\n      return this._error;\n    }\n  }, {\n    key: 'handleRedirect',\n    value: function handleRedirect() {\n      if (typeof window === 'undefined') {\n        // This means we're running in some environment other\n        // than a browser - so handling a redirect makes no sense here.\n        return;\n      }\n\n      var ourState = this.authDataStorage.get(common.STATE_KEY);\n      var redirectFragment = window.location.hash.substring(1);\n      var redirectState = common.parseRedirectFragment(redirectFragment, ourState);\n      if (redirectState.lastError) {\n        console.error('BaasClient: error from redirect: ' + redirectState.lastError);\n        this._error = redirectState.lastError;\n        window.history.replaceState(null, '', this.pageRootUrl());\n        return;\n      }\n\n      if (!redirectState.found) {\n        return;\n      }\n\n      this.authDataStorage.remove(common.STATE_KEY);\n      if (!redirectState.stateValid) {\n        console.error('BaasClient: state values did not match!');\n        window.history.replaceState(null, '', this.pageRootUrl());\n        return;\n      }\n\n      if (!redirectState.ua) {\n        console.error('BaasClient: no UA value was returned from redirect!');\n        return;\n      }\n\n      // If we get here, the state is valid - set auth appropriately.\n      this.set(redirectState.ua);\n      window.history.replaceState(null, '', this.pageRootUrl());\n    }\n  }, {\n    key: 'getOAuthLoginURL',\n    value: function getOAuthLoginURL(providerName, redirectUrl) {\n      if (redirectUrl === undefined) {\n        redirectUrl = this.pageRootUrl();\n      }\n\n      var state = Auth.generateState();\n      this.authDataStorage.set(common.STATE_KEY, state);\n      var result = this.rootUrl + '/oauth2/' + providerName + '?redirect=' + encodeURI(redirectUrl) + '&state=' + state;\n      return result;\n    }\n  }, {\n    key: 'anonymousAuth',\n    value: function anonymousAuth() {\n      var _this = this;\n\n      var fetchArgs = common.makeFetchArgs('GET');\n      fetchArgs.cors = true;\n\n      return fetch(this.rootUrl + '/anon/user', fetchArgs).then(common.checkStatus).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this.set(json);\n      });\n    }\n  }, {\n    key: 'apiKeyAuth',\n    value: function apiKeyAuth(key) {\n      var _this2 = this;\n\n      var fetchArgs = common.makeFetchArgs('POST', JSON.stringify({ 'key': key }));\n      fetchArgs.cors = true;\n\n      return fetch(this.rootUrl + '/api/key', fetchArgs).then(common.checkStatus).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this2.set(json);\n      });\n    }\n  }, {\n    key: 'localAuth',\n    value: function localAuth(username, password) {\n      var _this3 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { cors: true };\n\n      var fetchArgs = common.makeFetchArgs('POST', JSON.stringify({ username: username, password: password }));\n      fetchArgs.cors = true;\n\n      return fetch(this.rootUrl + '/local/userpass', fetchArgs).then(common.checkStatus).then(function (response) {\n        return response.json().then(function (json) {\n          _this3.set(json);\n          return Promise.resolve(json);\n        });\n      });\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.authDataStorage.remove(common.USER_AUTH_KEY);\n      this.authDataStorage.remove(common.REFRESH_TOKEN_KEY);\n      this.clearImpersonation();\n    }\n  }, {\n    key: 'getRefreshToken',\n    value: function getRefreshToken() {\n      return this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n    }\n  }, {\n    key: 'set',\n    value: function set(json) {\n      var rt = json.refreshToken;\n      delete json.refreshToken;\n\n      this.authDataStorage.set(common.USER_AUTH_KEY, (0, _Base.btoa)(JSON.stringify(json)));\n      this.authDataStorage.set(common.REFRESH_TOKEN_KEY, rt);\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      if (!this.authDataStorage.get(common.USER_AUTH_KEY)) {\n        return null;\n      }\n\n      var item = this.authDataStorage.get(common.USER_AUTH_KEY);\n      return JSON.parse((0, _Base.atob)(item));\n    }\n  }, {\n    key: 'authedId',\n    value: function authedId() {\n      var id = ((this.get() || {}).user || {})._id;\n      if (id) {\n        return { '$oid': id };\n      }\n    }\n  }, {\n    key: 'isImpersonatingUser',\n    value: function isImpersonatingUser() {\n      return this.authDataStorage.get(common.IMPERSONATION_ACTIVE_KEY) === 'true';\n    }\n  }, {\n    key: 'refreshImpersonation',\n    value: function refreshImpersonation(client) {\n      var _this4 = this;\n\n      var userId = this.authDataStorage.get(common.IMPERSONATION_USER_KEY);\n      return client._do('/admin/users/' + userId + '/impersonate', 'POST', { refreshOnFailure: false, useRefreshToken: true }).then(function (response) {\n        return response.json().then(function (json) {\n          json.refreshToken = _this4.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n          _this4.set(json);\n          return Promise.resolve();\n        });\n      }).catch(function (e) {\n        _this4.stopImpersonation();\n        return Promise.reject(e);\n      });\n    }\n  }, {\n    key: 'startImpersonation',\n    value: function startImpersonation(client, userId) {\n      if (this.get() === null) {\n        return Promise.reject(new _errors.BaasError('Must auth first'));\n      }\n\n      if (this.isImpersonatingUser()) {\n        return Promise.reject(new _errors.BaasError('Already impersonating a user'));\n      }\n\n      this.authDataStorage.set(common.IMPERSONATION_ACTIVE_KEY, 'true');\n      this.authDataStorage.set(common.IMPERSONATION_USER_KEY, userId);\n\n      var realUserAuth = JSON.parse((0, _Base.atob)(this.authDataStorage.get(common.USER_AUTH_KEY)));\n      realUserAuth.refreshToken = this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n      this.authDataStorage.set(common.IMPERSONATION_REAL_USER_AUTH_KEY, (0, _Base.btoa)(JSON.stringify(realUserAuth)));\n      return this.refreshImpersonation(client);\n    }\n  }, {\n    key: 'stopImpersonation',\n    value: function stopImpersonation() {\n      var _this5 = this;\n\n      if (!this.isImpersonatingUser()) {\n        throw new _errors.BaasError('Not impersonating a user');\n      }\n\n      return new Promise(function (resolve, reject) {\n        var realUserAuth = JSON.parse((0, _Base.atob)(_this5.authDataStorage.get(common.IMPERSONATION_REAL_USER_AUTH_KEY)));\n        _this5.set(realUserAuth);\n        _this5.clearImpersonation();\n        resolve();\n      });\n    }\n  }, {\n    key: 'clearImpersonation',\n    value: function clearImpersonation() {\n      this.authDataStorage.remove(common.IMPERSONATION_ACTIVE_KEY);\n      this.authDataStorage.remove(common.IMPERSONATION_USER_KEY);\n      this.authDataStorage.remove(common.IMPERSONATION_REAL_USER_AUTH_KEY);\n    }\n  }], [{\n    key: 'generateState',\n    value: function generateState() {\n      var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var state = '';\n      var stateLength = 64;\n      for (var i = 0; i < stateLength; i++) {\n        var pos = Math.floor(Math.random() * alpha.length);\n        state += alpha.substring(pos, pos + 1);\n      }\n\n      return state;\n    }\n  }]);\n\n  return Auth;\n}();\n\nexports.default = Auth;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Admin = exports.BaasClient = undefined;\n\nvar _client = __webpack_require__(8);\n\nexports.BaasClient = _client.BaasClient;\nexports.Admin = _client.Admin;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __webpack_require__(0);\n\nvar _mongodbExtjson = __webpack_require__(4);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ObjectID = _mongodbExtjson.BSON.ObjectID;\n\n/**\n * Create a new Collection instance (not meant to be instantiated directly).\n *\n * @class\n * @return {Collection} a Collection instance.\n */\n\nvar Collection = function () {\n  function Collection(db, name) {\n    _classCallCheck(this, Collection);\n\n    this.db = db;\n    this.name = name;\n  }\n\n  /**\n   * Insert a single document\n   *\n   * @method\n   * @param {Object} doc The document to insert.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} a Promise for the operation.\n   */\n\n\n  _createClass(Collection, [{\n    key: 'insertOne',\n    value: function insertOne(doc) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return insertOp(this, doc, options);\n    }\n\n    /**\n     * Insert multiple documents\n     *\n     * @method\n     * @param {Array} docs The documents to insert.\n     * @param {Object} [options] Additional options object.\n     * @return {Promise<Object, Error>} Returns a Promise for the operation.\n     */\n\n  }, {\n    key: 'insertMany',\n    value: function insertMany(docs) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return insertOp(this, docs, options);\n    }\n\n    /**\n     * Delete a single document\n     *\n     * @method\n     * @param {Object} query The query used to match a single document.\n     * @param {Object} [options] Additional options object.\n     * @return {Promise<Object, Error>} Returns a Promise for the operation.\n     */\n\n  }, {\n    key: 'deleteOne',\n    value: function deleteOne(query) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return deleteOp(this, query, Object.assign({}, options, { singleDoc: true }));\n    }\n\n    /**\n     * Delete all documents matching query\n     *\n     * @method\n     * @param {Object} query The query used to match the documents to delete.\n     * @param {Object} [options] Additional options object.\n     * @return {Promise<Object, Error>} Returns a Promise for the operation.\n     */\n\n  }, {\n    key: 'deleteMany',\n    value: function deleteMany(query) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return deleteOp(this, query, Object.assign({}, options, { singleDoc: false }));\n    }\n\n    /**\n     * Update a single document\n     *\n     * @method\n     * @param {Object} query The query used to match a single document.\n     * @param {Object} update The update operations to perform on the matching document.\n     * @param {Object} [options] Additional options object.\n     * @param {Boolean} [options.upsert=false] Perform an upsert operation.\n     * @return {Promise<Object, Error>} A Promise for the operation.\n     */\n\n  }, {\n    key: 'updateOne',\n    value: function updateOne(query, update) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      return updateOp(this, query, update, Object.assign({}, options, { multi: false }));\n    }\n\n    /**\n     * Update multiple documents\n     *\n     * @method\n     * @param {Object} query The query used to match the documents.\n     * @param {Object} update The update operations to perform on the matching documents.\n     * @param {Object} [options] Additional options object.\n     * @param {Boolean} [options.upsert=false] Perform an upsert operation.\n     * @return {Promise<Object, Error>} Returns a Promise for the operation.\n     */\n\n  }, {\n    key: 'updateMany',\n    value: function updateMany(query, update) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      return updateOp(this, query, update, Object.assign({}, options, { multi: true }));\n    }\n\n    /**\n     * Find documents\n     *\n     * @method\n     * @param {Object} query The query used to match documents.\n     * @param {Object} [options] Additional options object.\n     * @param {Object} [options.projection=null] The query document projection.\n     * @param {Number} [options.limit=null] The maximum number of documents to return.\n     * @return {Array} An array of documents.\n     */\n\n  }, {\n    key: 'find',\n    value: function find(query) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return findOp(this, query, options);\n    }\n\n    /**\n     * Count number of matching documents for a given query\n     *\n     * @param {Object} query The query used to match documents.\n     * @param {Object} options Additional find options.\n     * @param {Number} [options.limit=null] The maximum number of documents to return.\n     * @return {Array} An array of documents.\n     */\n\n  }, {\n    key: 'count',\n    value: function count(query) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return findOp(this, query, Object.assign({}, options, { count: true }));\n    }\n\n    // deprecated\n\n  }, {\n    key: 'insert',\n    value: function insert(docs) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return insertOp(this, docs, options);\n    }\n  }, {\n    key: 'upsert',\n    value: function upsert(query, update) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      return updateOp(this, query, update, Object.assign({}, options, { upsert: true }));\n    }\n  }]);\n\n  return Collection;\n}();\n\n// deprecated methods\n\n\nexports.default = Collection;\nCollection.prototype.upsert = (0, _util.deprecate)(Collection.prototype.upsert, 'use `updateOne`/`updateMany` instead of `upsert`');\n\n// private\nfunction insertOp(self, docs, options) {\n  docs = Array.isArray(docs) ? docs : [docs];\n\n  // add ObjectIds to docs that have none\n  docs = docs.map(function (doc) {\n    if (!doc._id) doc._id = new ObjectID();\n    return doc;\n  });\n\n  return self.db.client.executePipeline([{\n    action: 'literal',\n    args: {\n      items: docs\n    }\n  }, {\n    service: self.db.service,\n    action: 'insert',\n    args: {\n      database: self.db.name,\n      collection: self.name\n    }\n  }]).then(function (response) {\n    return {\n      insertedIds: response.result.map(function (doc) {\n        return doc._id;\n      })\n    };\n  });\n}\n\nfunction deleteOp(self, query, options) {\n  var args = Object.assign({\n    database: self.db.name,\n    collection: self.name,\n    query: query\n  }, options);\n\n  return self.db.client.executePipeline([{\n    service: self.db.service,\n    action: 'delete',\n    args: args\n  }]).then(function (response) {\n    return {\n      deletedCount: response.result[0].removed\n    };\n  });\n}\n\nfunction updateOp(self, query, update, options) {\n  var args = Object.assign({\n    database: self.db.name,\n    collection: self.name,\n    query: query,\n    update: update\n  }, options);\n\n  return self.db.client.executePipeline([{\n    service: self.db.service,\n    action: 'update',\n    args: args\n  }]);\n}\n\nfunction findOp(self, query, options) {\n  var args = Object.assign({\n    database: self.db.name,\n    collection: self.name\n  }, options);\n\n  // legacy argument naming\n  if (args.projection) {\n    args.project = args.projection;\n    delete args.projection;\n  }\n\n  return self.db.client.executePipeline([{\n    service: self.db.service,\n    action: 'find',\n    args: args\n  }]);\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _collection = __webpack_require__(12);\n\nvar _collection2 = _interopRequireDefault(_collection);\n\nvar _util = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Create a new DB instance (not meant to be instantiated directly).\n * @class\n * @return {DB} a DB instance.\n */\nvar DB = function () {\n  function DB(client, service, name) {\n    _classCallCheck(this, DB);\n\n    this.client = client;\n    this.service = service;\n    this.name = name;\n  }\n\n  /**\n   * Returns a Collection instance representing a MongoDB Collection object.\n   *\n   * @method\n   * @param {String} name The collection name.\n   * @param {Object} [options] Additional options.\n   * @return {Collection} returns a Collection instance representing a MongoDb collection.\n   */\n\n\n  _createClass(DB, [{\n    key: 'collection',\n    value: function collection(name) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return new _collection2.default(this, name, options);\n    }\n  }]);\n\n  return DB;\n}();\n\n// deprecated\n\n\nexports.default = DB;\nDB.prototype.getCollection = (0, _util.deprecate)(DB.prototype.collection, 'use `collection` instead of `getCollection`');\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _db = __webpack_require__(13);\n\nvar _db2 = _interopRequireDefault(_db);\n\nvar _util = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Create a new MongoClient instance (not meant to be instantiated directly).\n *\n * @class\n * @return {MongoClient} a MongoClient instance.\n */\nvar MongoDBService = function () {\n  function MongoDBService(baasClient, serviceName) {\n    _classCallCheck(this, MongoDBService);\n\n    this.baasClient = baasClient;\n    this.serviceName = serviceName;\n  }\n\n  /**\n   * Get a Db instance\n   *\n   * @method\n   * @param {String} databaseName The MongoDB database name\n   * @param {Object} [options] Additional options.\n   * @return {Db} returns a Db instance representing a MongoDB database.\n   */\n\n\n  _createClass(MongoDBService, [{\n    key: 'db',\n    value: function db(databaseName) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return new _db2.default(this.baasClient, this.serviceName, databaseName);\n    }\n  }]);\n\n  return MongoDBService;\n}();\n\n// deprecated\n\n\nexports.default = MongoDBService;\nMongoDBService.prototype.getDB = MongoDBService.prototype.getDb = (0, _util.deprecate)(MongoDBService.prototype.db, 'use `db` instead of `getDB`');\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.createStorage = createStorage;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MemoryStorage = function () {\n  function MemoryStorage() {\n    _classCallCheck(this, MemoryStorage);\n\n    this._data = {};\n  }\n\n  _createClass(MemoryStorage, [{\n    key: 'getItem',\n    value: function getItem(key) {\n      return key in this._data ? this._data[key] : undefined;\n    }\n  }, {\n    key: 'setItem',\n    value: function setItem(key, value) {\n      this._data[key] = value;\n      return this._data[key];\n    }\n  }, {\n    key: 'removeItem',\n    value: function removeItem(key) {\n      delete this._data[key];\n      return undefined;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this._data = {};\n      return this._data;\n    }\n  }]);\n\n  return MemoryStorage;\n}();\n\nvar Storage = function () {\n  function Storage(store) {\n    _classCallCheck(this, Storage);\n\n    this.store = store;\n  }\n\n  _createClass(Storage, [{\n    key: 'get',\n    value: function get(key) {\n      return this.store.getItem(key);\n    }\n  }, {\n    key: 'set',\n    value: function set(key, value) {\n      return this.store.setItem(key, value);\n    }\n  }, {\n    key: 'remove',\n    value: function remove(key) {\n      return this.store.removeItem(key);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      return this.store.clear();\n    }\n  }]);\n\n  return Storage;\n}();\n\nfunction createStorage(type) {\n  if (type === 'localStorage') {\n    if (window && 'localStorage' in window && window.localStorage !== null) {\n      return new Storage(window.localStorage);\n    }\n\n    // output warning?\n  } else if (type === 'sessionStorage') {\n    if (window && 'sessionStorage' in window && window.sessionStorage !== null) {\n      return new Storage(window.sessionStorage);\n    }\n\n    // output warning?\n  }\n\n  // default to memory storage\n  return new Storage(new MemoryStorage());\n}\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\n__webpack_require__(36);\nmodule.exports = self.fetch.bind(self);\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar btoa = __webpack_require__(7).btoa;\n\n/**\n * Module dependencies.\n * @ignore\n */\nfunction convert(integer) {\n  var str = Number(integer).toString(16);\n  return str.length == 1 ? \"0\" + str : str;\n};\n\n/**\n * A class representation of the BSON Binary type.\n *\n * Sub types\n *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.\n *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.\n *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.\n *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.\n *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.\n *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.\n *\n * @class\n * @param {Buffer} buffer a buffer object containing the binary data.\n * @param {Number} [subType] the option binary type.\n * @return {Binary}\n */\nvar Binary = function(buffer, subType) {\n  this._bsontype = 'Binary';\n\n  if(buffer instanceof Number) {\n    this.sub_type = buffer;\n    this.position = 0;\n  } else {\n    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;\n    this.position = 0;\n  }\n\n  if(buffer != null && !(buffer instanceof Number)) {\n    // Only accept Buffer or Uint8Array\n    if(typeof buffer == 'string') {\n      this.buffer = writeStringToArray(buffer);\n    } else if(buffer instanceof Uint8Array) {\n      this.buffer = buffer;\n    } else {\n      throw new Error('passed in buffer must be an Uint8Array instance');\n    }\n\n    this.position = buffer.length;\n  } else {\n    this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));\n    // Set position to start of buffer\n    this.position = 0;\n  }\n}\n\n/**\n * Updates this binary with byte_value.\n *\n * @method\n * @param {String} byte_value a single byte we wish to write.\n */\nBinary.prototype.put = function(byte_value) {\n  // If it's a string and a has more than one character throw an error\n  if(byte_value['length'] != null && typeof byte_value != 'number' && byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");\n  if(typeof byte_value != 'number' && byte_value < 0 || byte_value > 255) throw new Error(\"only accepts number in a valid unsigned byte range 0-255\");\n\n  // Decode the byte value once\n  var decoded_byte = null;\n  if(typeof byte_value == 'string') {\n    decoded_byte = byte_value.charCodeAt(0);\n  } else if(byte_value['length'] != null) {\n    decoded_byte = byte_value[0];\n  } else {\n    decoded_byte = byte_value;\n  }\n\n  if(this.buffer.length > this.position) {\n    this.buffer[this.position++] = decoded_byte;\n  } else {\n    var buffer = null;\n    // Create a new buffer (typed or normal array)\n    buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));\n\n    // We need to copy all the content to the new array\n    for(var i = 0; i < this.buffer.length; i++) {\n      buffer[i] = this.buffer[i];\n    }\n\n    // Reassign the buffer\n    this.buffer = buffer;\n    // Write the byte\n    this.buffer[this.position++] = decoded_byte;\n  }\n}\n\n/**\n * Writes a buffer or string to the binary.\n *\n * @method\n * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object.\n * @param {number} offset specify the binary of where to write the content.\n * @return {null}\n */\nBinary.prototype.write = function(string, offset) {\n  offset = typeof offset == 'number' ? offset : this.position;\n\n  // If the buffer is to small let's extend the buffer\n  if(this.buffer.length < offset + string.length) {\n    var buffer = null;\n    // Create a new buffer\n    buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))\n    // Copy the content\n    for(var i = 0; i < this.position; i++) {\n      buffer[i] = this.buffer[i];\n    }\n\n    // Assign the new buffer\n    this.buffer = buffer;\n  }\n\n  for(var i = 0; i < string.length; i++) {\n    this.buffer[offset++] = string[i];\n  }\n\n  this.position = offset > this.position ? offset : this.position;\n}\n\n/**\n * Reads **length** bytes starting at **position**.\n *\n * @method\n * @param {number} position read from the given position in the Binary.\n * @param {number} length the number of bytes to read.\n * @return {Buffer}\n */\nBinary.prototype.read = function(position, length) {\n  length = length && length > 0\n    ? length\n    : this.position;\n\n  // Let's return the data based on the type we have\n  return this.buffer.slice(position, position + length);\n}\n\n/**\n * Returns the value of this binary as a string.\n *\n * @method\n * @return {String}\n */\nBinary.prototype.value = function(asRaw) {\n  asRaw = asRaw == null ? false : asRaw;\n  if(asRaw) return this.buffer.slice(0, this.position);\n  return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);\n}\n\n/**\n * Length.\n *\n * @method\n * @return {number} the length of the binary.\n */\nBinary.prototype.length = function() {\n  return this.position;\n}\n\nBinary.prototype.equals = function(value) {\n  if(!value) return false;\n  if(value._bsontype != 'Binary') return false;\n  if(!value.buffer) return false;\n  if(value.buffer.length != this.buffer.length) return false;\n  for(var i = 0; i < this.buffer.length; i++) {\n    if(this.buffer[i] != value.buffer[i]) return false;\n  }\n\n  return true;\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toJSON = function() {\n  // If we are in the node.js context use Buffer.toString, otherwise the btoa\n  var binary = typeof Buffer !== 'undefined'\n    ? this.buffer.toString('base64')\n    : btoa(String.fromCharCode.apply(null, this.buffer));\n\n  return {\n    $binary: binary,\n    $type: convert(this.sub_type)\n  }\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toString = function(format) {\n  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';\n}\n\n/**\n * Binary default subtype\n * @ignore\n */\nvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/**\n * @ignore\n */\nvar writeStringToArray = function(data) {\n  // Create a buffer\n  var buffer = new Uint8Array(new ArrayBuffer(data.length));\n  // Write the content to the buffer\n  for(var i = 0; i < data.length; i++) {\n    buffer[i] = data.charCodeAt(i);\n  }\n  // Write the string to the buffer\n  return buffer;\n}\n\n/**\n * Convert Array ot Uint8Array to Binary String\n *\n * @ignore\n */\nvar convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {\n  var result = \"\";\n  for(var i = startIndex; i < endIndex; i++) {\n   result = result + String.fromCharCode(byteArray[i]);\n  }\n  return result;\n};\n\nBinary.BUFFER_SIZE = 256;\n\n/**\n * Default BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_DEFAULT = 0;\n/**\n * Function BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_FUNCTION = 1;\n/**\n * Byte Array BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/**\n * OLD UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID_OLD = 3;\n/**\n * UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID = 4;\n/**\n * MD5 BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_MD5 = 5;\n/**\n * User BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_USER_DEFINED = 128;\n\nmodule.exports = Binary;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function(code, scope) {\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope;\n}\n\nCode.prototype.equals = function(value) {\n  if(!value || !value.code) return false;\n  if(value._bsontype != 'Code') return false;\n  if(this.code == value.code) return true;\n  return false;\n}\n\nCode.prototype.toJSON = function() {\n  return { $code: this.code, $scope: this.scope };\n}\n\nmodule.exports = Code;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON DBRef type.\n *\n * @class\n * @param {String} namespace the collection name.\n * @param {ObjectID} oid the reference ObjectID.\n * @param {String} [db] optional db name, if omitted the reference is local to the current db.\n * @return {DBRef}\n */\nvar DBRef = function(namespace, oid, db) {\n  this._bsontype = 'DBRef';\n  this.namespace = namespace;\n  this.oid = oid;\n  this.db = db;\n}\n\nDBRef.prototype.equals = function(value) {\n  if(value == null || value.namespace == null  || value.db == null || value.oid == null) return false;\n  if(value._bsontype != 'DBRef') return false;\n\n  if(this.oid && this.oid.equals) {\n    return this.oid.equals(value.oid) && this.namespace == value.namespace && this.db == value.db;\n  } else {\n    return this.oid == value.oid && this.namespace == value.namespace && this.db == value.db;\n  }\n}\n\nDBRef.prototype.toJSON = function() {\n  return {\n    '$ref':this.namespace,\n    '$id':this.oid,\n    '$db':this.db == null ? '' : this.db\n  };\n}\n\nmodule.exports = DBRef;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar Long = __webpack_require__(6);\n\nvar PARSE_STRING_REGEXP = /^(\\+|\\-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([\\-\\+])?(\\d+)?$/;\nvar PARSE_INF_REGEXP = /^(\\+|\\-)?(Infinity|inf)$/i;\nvar PARSE_NAN_REGEXP = /^(\\+|\\-)?NaN$/i;\n\nvar EXPONENT_MAX = 6111;\nvar EXPONENT_MIN = -6176;\nvar EXPONENT_BIAS = 6176;\nvar MAX_DIGITS = 34;\n\n// Nan value bits as 32 bit values (due to lack of longs)\nvar NAN_BUFFER = [0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n// Infinity value bits 32 bit values (due to lack of longs)\nvar INF_NEGATIVE_BUFFER = [0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\nvar INF_POSITIVE_BUFFER = [0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n\nvar EXPONENT_REGEX = /^([\\-\\+])?(\\d+)?$/;\n\n// Extract least significant 5 bits\nvar COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nvar EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nvar COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nvar COMBINATION_NAN = 31;\n// Value of combination field for NaN\nvar COMBINATION_SNAN = 32;\n// decimal128 exponent bias\nvar EXPONENT_BIAS = 6176;\n\n// Detect if the value is a digit\nvar isDigit = function(value) {\n  return !isNaN(parseInt(value, 10));\n}\n\n// Divide two uint128 values\nvar divideu128 = function(value) {\n  var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n  var _rem = Long.fromNumber(0);\n  var i = 0;\n\n  if(!value.parts[0] && !value.parts[1] &&\n     !value.parts[2] && !value.parts[3]) {\n    return { quotient: value, rem: _rem };\n  }\n\n  for(var i = 0; i <= 3; i++) {\n    // Adjust remainder to match value of next dividend\n    _rem = _rem.shiftLeft(32);\n    // Add the divided to _rem\n    _rem = _rem.add(new Long(value.parts[i], 0));\n    value.parts[i] = _rem.div(DIVISOR).low_;\n    _rem = _rem.modulo(DIVISOR);\n  }\n\n  return { quotient: value, rem: _rem };\n}\n\n// Multiply two Long values and return the 128 bit value\nvar multiply64x2 = function(left, right) {\n  if(!left && !right) {\n    return {high: Long.fromNumber(0), low: Long.fromNumber(0)};\n  }\n\n  var leftHigh = left.shiftRightUnsigned(32);\n  var leftLow = new Long(left.getLowBits(), 0);\n  var rightHigh = right.shiftRightUnsigned(32);\n  var rightLow = new Long(right.getLowBits(), 0);\n\n  var productHigh = leftHigh.multiply(rightHigh);\n  var productMid = leftHigh.multiply(rightLow);\n  var productMid2 = leftLow.multiply(rightHigh);\n  var productLow = leftLow.multiply(rightLow);\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productMid = new Long(productMid.getLowBits(), 0)\n                .add(productMid2)\n                .add(productLow.shiftRightUnsigned(32));\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n\n  // Return the 128 bit result\n  return {high: productHigh, low: productLow};\n}\n\nvar lessThan = function(left, right) {\n  // Make values unsigned\n  var uhleft = left.high_ >>> 0;\n  var uhright = right.high_ >>> 0;\n\n  // Compare high bits first\n  if(uhleft < uhright) {\n    return true\n  } else if(uhleft == uhright) {\n    var ulleft = left.low_ >>> 0;\n    var ulright = right.low_ >>> 0;\n    if(ulleft < ulright) return true;\n  }\n\n  return false;\n}\n\nvar longtoHex = function(value) {\n  var buffer = new Buffer(8);\n  var index = 0;\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = value.low_ & 0xff;\n  buffer[index++] = (value.low_ >> 8) & 0xff;\n  buffer[index++] = (value.low_ >> 16) & 0xff;\n  buffer[index++] = (value.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = value.high_ & 0xff;\n  buffer[index++] = (value.high_ >> 8) & 0xff;\n  buffer[index++] = (value.high_ >> 16) & 0xff;\n  buffer[index++] = (value.high_ >> 24) & 0xff;\n  return buffer.reverse().toString('hex');\n}\n\nvar int32toHex = function(value) {\n  var buffer = new Buffer(4);\n  var index = 0;\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = value & 0xff;\n  buffer[index++] = (value >> 8) & 0xff;\n  buffer[index++] = (value >> 16) & 0xff;\n  buffer[index++] = (value >> 24) & 0xff;\n  return buffer.reverse().toString('hex');\n}\n\n/**\n * A class representation of the BSON Decimal128 type.\n *\n * @class\n * @param {Buffer} bytes A buffer representing the Decimal128 bytes.\n * @return {Decimal128}\n */\nvar Decimal128 = function(bytes) {\n  this._bsontype = 'Decimal128';\n  this.bytes = bytes;\n}\n\n/**\n * Creates a Decimal128 instance from a string representation.\n *\n * @method\n * @param {String} string A string representing a Decimal128 value.\n */\nDecimal128.fromString = function(string) {\n  // Parse state tracking\n  var isNegative = false;\n  var sawRadix = false;\n  var foundNonZero = false;\n\n  // Total number of significant digits (no leading or trailing zero)\n  var significantDigits = 0;\n  // Total number of significand digits read\n  var nDigitsRead = 0;\n  // Total number of digits (no leading zeros)\n  var nDigits = 0;\n  // The number of the digits after radix\n  var radixPosition = 0;\n  // The index of the first non-zero in *str*\n  var firstNonZero = 0;\n\n  // Digits Array\n  var digits = [0];\n  // The number of digits in digits\n  var nDigitsStored = 0;\n  // Insertion pointer for digits\n  var digitsInsert = 0;\n  // The index of the first non-zero digit\n  var firstDigit = 0;\n  // The index of the last digit\n  var lastDigit = 0;\n\n  // Exponent\n  var exponent = 0;\n  // loop index over array\n  var i = 0;\n  // The high 17 digits of the significand\n  var significandHigh = [0, 0];\n  // The low 17 digits of the significand\n  var significandLow = [0, 0];\n  // The biased exponent\n  var biasedExponent = 0;\n\n  // Read index\n  var index = 0;\n\n  // Trim the string\n  string = string.trim();\n\n  // Results\n  var stringMatch = string.match(PARSE_STRING_REGEXP);\n  var infMatch = string.match(PARSE_INF_REGEXP);\n  var nanMatch = string.match(PARSE_NAN_REGEXP);\n\n  // Validate the string\n  if(!stringMatch\n    && ! infMatch\n    && ! nanMatch || string.length == 0) {\n      throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Check if we have an illegal exponent format\n  if(stringMatch && stringMatch[4] && stringMatch[2] === undefined) {\n    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Get the negative or positive sign\n  if(string[index] == '+' || string[index] == '-') {\n    isNegative = string[index++] == '-';\n  }\n\n  // Check if user passed Infinity or NaN\n  if(!isDigit(string[index]) && string[index] != '.') {\n    if(string[index] == 'i' || string[index] == 'I') {\n      return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n    } else if(string[index] == 'N') {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n  }\n\n  // Read all the digits\n  while(isDigit(string[index]) || string[index] == '.') {\n    if(string[index] == '.') {\n      if(sawRadix) {\n        return new Decimal128(new Buffer(NAN_BUFFER));\n      }\n\n      sawRadix = true;\n      index = index + 1;\n      continue;\n    }\n\n    if(nDigitsStored < 34) {\n      if(string[index] != '0' || foundNonZero) {\n        if(!foundNonZero) {\n          firstNonZero = nDigitsRead;\n        }\n\n        foundNonZero = true;\n\n        // Only store 34 digits\n        digits[digitsInsert++] = parseInt(string[index], 10);\n        nDigitsStored = nDigitsStored + 1;\n      }\n    }\n\n    if(foundNonZero) {\n      nDigits = nDigits + 1;\n    }\n\n    if(sawRadix) {\n      radixPosition = radixPosition + 1;\n    }\n\n    nDigitsRead = nDigitsRead + 1;\n    index = index + 1;\n  }\n\n  if(sawRadix && !nDigitsRead) {\n    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Read exponent if exists\n  if(string[index] == 'e' || string[index] == 'E') {\n    // Read exponent digits\n    var match = string.substr(++index).match(EXPONENT_REGEX);\n\n    // No digits read\n    if(!match || !match[2]) {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n\n    // Get exponent\n    exponent = parseInt(match[0], 10);\n\n    // Adjust the index\n    index = index + match[0].length;\n  }\n\n  // Return not a number\n  if(string[index]) {\n    return new Decimal128(new Buffer(NAN_BUFFER));\n  }\n\n  // Done reading input\n  // Find first non-zero digit in digits\n  firstDigit = 0;\n\n  if(!nDigitsStored) {\n    firstDigit = 0;\n    lastDigit = 0;\n    digits[0] = 0;\n    nDigits = 1;\n    nDigitsStored = 1;\n    significantDigits = 0;\n  } else {\n    lastDigit = nDigitsStored - 1;\n    significantDigits = nDigits;\n\n    if(exponent != 0 && significantDigits != 1) {\n      while(string[firstNonZero + significantDigits - 1] == '0') {\n        significantDigits = significantDigits - 1;\n      }\n    }\n  }\n\n  // Normalization of exponent\n  // Correct exponent based on radix position, and shift significand as needed\n  // to represent user input\n\n  // Overflow prevention\n  if(exponent <= radixPosition && radixPosition - exponent > (1 << 14)) {\n    exponent = EXPONENT_MIN;\n  } else {\n    exponent = exponent - radixPosition;\n  }\n\n  // Attempt to normalize the exponent\n  while(exponent > EXPONENT_MAX) {\n    // Shift exponent to significand and decrease\n    lastDigit = lastDigit + 1;\n\n    if(lastDigit - firstDigit > MAX_DIGITS) {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if(digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n      }\n    }\n\n    exponent = exponent - 1;\n  }\n\n  while(exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n    // Shift last digit\n    if(lastDigit == 0) {\n      exponent = EXPONENT_MIN;\n      significantDigits = 0;\n      break;\n    }\n\n    if(nDigitsStored < nDigits) {\n      // adjust to match digits not stored\n      nDigits = nDigits - 1;\n    } else {\n      // adjust to round\n      lastDigit = lastDigit - 1;\n    }\n\n    if(exponent < EXPONENT_MAX) {\n      exponent = exponent + 1;\n    } else {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if(digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))\n      }\n    }\n  }\n\n  // Round\n  // We've normalized the exponent, but might still need to round.\n  if((lastDigit - firstDigit + 1 < significantDigits) && string[significantDigits] != '0') {\n    var endOfString = nDigitsRead;\n\n    // If we have seen a radix point, 'string' is 1 longer than we have\n    // documented with ndigits_read, so inc the position of the first nonzero\n    // digit and the position that digits are read to.\n    if(sawRadix && exponent == EXPONENT_MIN) {\n      firstNonZero = firstNonZero + 1;\n      endOfString = endOfString + 1;\n    }\n\n    var roundDigit = parseInt(string[firstNonZero + lastDigit + 1], 10);\n    var roundBit = 0;\n\n    if(roundDigit >= 5) {\n      roundBit = 1;\n\n      if(roundDigit == 5) {\n        roundBit = digits[lastDigit] % 2 == 1;\n\n        for(var i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n          if(parseInt(string[i], 10)) {\n            roundBit = 1;\n            break;\n          }\n        }\n      }\n    }\n\n    if(roundBit) {\n      var dIdx = lastDigit;\n\n      for(; dIdx >= 0; dIdx--) {\n        if(++digits[dIdx] > 9) {\n          digits[dIdx] = 0;\n\n          // overflowed most significant digit\n          if(dIdx == 0) {\n            if(exponent < EXPONENT_MAX) {\n              exponent = exponent + 1;\n              digits[dIdx] = 1;\n            } else {\n              return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))\n            }\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n  // Encode significand\n  // The high 17 digits of the significand\n  significandHigh = Long.fromNumber(0);\n  // The low 17 digits of the significand\n  significandLow = Long.fromNumber(0);\n\n  // read a zero\n  if(significantDigits == 0) {\n    significandHigh = Long.fromNumber(0);\n    significandLow = Long.fromNumber(0);\n  } else if(lastDigit - firstDigit < 17) {\n    var dIdx = firstDigit;\n    significandLow = Long.fromNumber(digits[dIdx++]);\n    significandHigh = new Long(0, 0);\n\n    for(; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  } else {\n    var dIdx = firstDigit;\n    significandHigh = Long.fromNumber(digits[dIdx++]);\n\n    for(; dIdx <= lastDigit - 17; dIdx++) {\n      significandHigh = significandHigh.multiply(Long.fromNumber(10));\n      significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n    }\n\n    significandLow = Long.fromNumber(digits[dIdx++]);\n\n    for(; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  }\n\n  var significand = multiply64x2(significandHigh, Long.fromString(\"100000000000000000\"));\n\n  significand.low = significand.low.add(significandLow);\n\n  if(lessThan(significand.low, significandLow)) {\n    significand.high = significand.high.add(Long.fromNumber(1));\n  }\n\n  // Biased exponent\n  var biasedExponent = (exponent + EXPONENT_BIAS);\n  var dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n\n  // Encode combination, exponent, and significand.\n  if(significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber)) {\n    // Encode '11' into bits 1 to 3\n    dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47)));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n  } else {\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n  }\n\n  dec.low = significand.low;\n\n  // Encode sign\n  if(isNegative) {\n    dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n  }\n\n  // Encode into a buffer\n  var buffer = new Buffer(16);\n  var index = 0;\n\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.low.low_ & 0xff;\n  buffer[index++] = (dec.low.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.low.high_ & 0xff;\n  buffer[index++] = (dec.low.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 24) & 0xff;\n\n  // Encode the high 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.high.low_ & 0xff;\n  buffer[index++] = (dec.high.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.high.high_ & 0xff;\n  buffer[index++] = (dec.high.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 24) & 0xff;\n\n  // Return the new Decimal128\n  return new Decimal128(buffer);\n}\n\nDecimal128.prototype.toString = function() {\n  // Note: bits in this routine are referred to starting at 0,\n  // from the sign bit, towards the coefficient.\n\n  // bits 0 - 31\n  var high;\n  // bits 32 - 63\n  var midh;\n  // bits 64 - 95\n  var midl;\n  // bits 96 - 127\n  var low;\n  // bits 1 - 5\n  var combination;\n  // decoded biased exponent (14 bits)\n  var biased_exponent;\n  // the number of significand digits\n  var significand_digits = 0;\n  // the base-10 digits in the significand\n  var significand = new Array(36);\n  for(var i = 0; i < significand.length; i++) significand[i] = 0;\n  // read pointer into significand\n  var index = 0;\n\n  // unbiased exponent\n  var exponent;\n  // the exponent if scientific notation is used\n  var scientific_exponent;\n\n  // true if the number is zero\n  var is_zero = false;\n\n  // the most signifcant significand bits (50-46)\n  var significand_msb;\n  // temporary storage for significand decoding\n  var significand128 = {parts: new Array(4)};\n  // indexing variables\n  var i;\n  var j, k;\n\n  // Output string\n  var string = [];\n\n  // Unpack index\n  var index = 0;\n\n  // Buffer reference\n  var buffer = this.bytes;\n\n  // Unpack the low 64bits into a long\n  low = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n  midl = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Unpack the high 64bits into a long\n  midh = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n  high = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Unpack index\n  var index = 0;\n\n  // Create the state of the decimal\n  var dec = {\n    low: new Long(low, midl),\n    high: new Long(midh, high) };\n\n  if(dec.high.lessThan(Long.ZERO)) {\n    string.push('-');\n  }\n\n  // Decode combination field and exponent\n  combination = (high >> 26) & COMBINATION_MASK;\n\n  if((combination >> 3) == 3) {\n    // Check for 'special' values\n    if(combination == COMBINATION_INFINITY) {\n      return string.join('') + \"Infinity\";\n    } else if(combination == COMBINATION_NAN) {\n      return \"NaN\";\n    } else {\n      biased_exponent = (high >> 15) & EXPONENT_MASK;\n      significand_msb = 0x08 + ((high >> 14) & 0x01);\n    }\n  } else {\n    significand_msb = (high >> 14) & 0x07;\n    biased_exponent = (high >> 17) & EXPONENT_MASK;\n  }\n\n  exponent = biased_exponent - EXPONENT_BIAS;\n\n  // Create string of significand digits\n\n  // Convert the 114-bit binary number represented by\n  // (significand_high, significand_low) to at most 34 decimal\n  // digits through modulo and division.\n  significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n  significand128.parts[1] = midh;\n  significand128.parts[2] = midl;\n  significand128.parts[3] = low;\n\n  if(significand128.parts[0] == 0 && significand128.parts[1] == 0\n    && significand128.parts[2] == 0 && significand128.parts[3] == 0) {\n      is_zero = true;\n  } else {\n    for(var k = 3; k >= 0; k--) {\n      var least_digits = 0;\n      // Peform the divide\n      var result = divideu128(significand128);\n      significand128 = result.quotient;\n      least_digits = result.rem.low_;\n\n      // We now have the 9 least significant digits (in base 2).\n      // Convert and output to string.\n      if(!least_digits) continue;\n\n      for(var j = 8; j >= 0; j--) {\n        // significand[k * 9 + j] = Math.round(least_digits % 10);\n        significand[k * 9 + j] = least_digits % 10;\n        // least_digits = Math.round(least_digits / 10);\n        least_digits = Math.floor(least_digits / 10);\n      }\n    }\n  }\n\n  // Output format options:\n  // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n  // Regular    - ddd.ddd\n\n  if(is_zero) {\n    significand_digits = 1;\n    significand[index] = 0;\n  } else {\n    significand_digits = 36;\n    var i = 0;\n\n    while(!significand[index]) {\n      i++;\n      significand_digits = significand_digits - 1;\n      index = index + 1;\n    }\n  }\n\n  scientific_exponent = significand_digits - 1 + exponent;\n\n  // The scientific exponent checks are dictated by the string conversion\n  // specification and are somewhat arbitrary cutoffs.\n  //\n  // We must check exponent > 0, because if this is the case, the number\n  // has trailing zeros.  However, we *cannot* output these trailing zeros,\n  // because doing so would change the precision of the value, and would\n  // change stored data if the string converted number is round tripped.\n\n  if(scientific_exponent >= 34 || scientific_exponent <= -7 ||\n    exponent > 0) {\n    // Scientific format\n    string.push(significand[index++]);\n    significand_digits = significand_digits - 1;\n\n    if(significand_digits) {\n      string.push('.');\n    }\n\n    for(var i = 0; i < significand_digits; i++) {\n      string.push(significand[index++]);\n    }\n\n    // Exponent\n    string.push('E');\n    if(scientific_exponent > 0) {\n      string.push('+' + scientific_exponent);\n    } else {\n      string.push(scientific_exponent);\n    }\n  } else {\n    // Regular format with no decimal place\n    if(exponent >= 0) {\n      for(var i = 0; i < significand_digits; i++) {\n        string.push(significand[index++]);\n      }\n    } else {\n      var radix_position = significand_digits + exponent;\n\n      // non-zero digits before radix\n      if(radix_position > 0) {\n        for(var i = 0; i < radix_position; i++) {\n          string.push(significand[index++]);\n        }\n      } else {\n        string.push('0');\n      }\n\n      string.push('.');\n      // add leading zeros after radix\n      while(radix_position++ < 0) {\n        string.push('0');\n      }\n\n      for(var i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n        string.push(significand[index++]);\n      }\n    }\n  }\n\n  return string.join('');\n}\n\nDecimal128.prototype.equals = function(value) {\n  if(!value.bytes) return false;\n  return this.bytes.toString('hex') == value.bytes.toString('hex');\n}\n\nDecimal128.prototype.toJSON = function() {\n  return { \"$numberDecimal\": this.toString() };\n}\n\nmodule.exports = Decimal128;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nvar Double = function(value) {\n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function() {\n  return this.value;\n}\n\nDouble.prototype.equals = function(value) {\n  if(!value) return false;\n  if(typeof value !== 'number' && value._bsontype != 'Double') return false;\n  if(typeof value === 'number') return this.value === value;\n  return this.value === value.value;\n}\n\nDouble.prototype.toJSON = function() {\n  return { $numberDouble: this.value.toString() };\n}\n\nmodule.exports = Double;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function(value) {\n  this._bsontype = 'Int32';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\nInt32.prototype.valueOf = function() {\n  return this.value;\n}\n\nInt32.prototype.equals = function(value) {\n  if(!value) return false;\n  if(typeof value !== 'number' && value._bsontype != 'Int32') return false;\n  if(typeof value === 'number') return this.value === value;\n  return this.value === value.value;\n}\n\nInt32.prototype.toJSON = function() {\n  return { $numberInt: this.value.toString() };\n}\n\nmodule.exports = Int32;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON MaxKey type.\n *\n * @class\n * @return {MaxKey} A MaxKey instance\n */\nvar MaxKey = function() {\n  this._bsontype = 'MaxKey';\n}\n\nMaxKey.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'MaxKey') return false;\n  return true;\n}\n\nMaxKey.prototype.toJSON = function() {\n  return { $maxKey: 1 };\n}\n\nmodule.exports = MaxKey;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON MinKey type.\n *\n * @class\n * @return {MinKey} A MinKey instance\n */\nvar MinKey = function() {\n  this._bsontype = 'MinKey';\n}\n\nMinKey.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'MinKey') return false;\n  return true;\n}\n\nMinKey.prototype.toJSON = function() {\n  return { $minKey: 1 };\n}\n\nmodule.exports = MinKey;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\n/**\n * Machine id.\n *\n * Create a random 3-byte value (i.e. unique for this\n * process). Other drivers use a md5 of the machine id here, but\n * that would mean an asyc call to gethostname, so we don't bother.\n * @ignore\n */\nvar MACHINE_ID = parseInt(Math.random() * 0xFFFFFF, 10);\n\n// Regular expression that checks for hex value\nvar checkForHexRegExp = new RegExp(\"^[0-9a-fA-F]{24}$\");\n\n// Precomputed hex table enables speedy hex string conversion\nvar hexTable = [];\nfor (var i = 0; i < 256; i++) {\n  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n\n// Lookup tables\nvar encodeLookup = '0123456789abcdef'.split('')\nvar decodeLookup = []\nvar i = 0\nwhile (i < 10) decodeLookup[0x30 + i] = i++\nwhile (i < 16) decodeLookup[0x61 - 10 + i] = i++\n\nvar convertToHex = function(bytes) {\n  var hexString = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    hexString += hexTable[bytes[i]];\n  }\n\n  return hexString;\n}\n\n/**\n* Create a new ObjectID instance\n*\n* @class\n* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.\n* @property {number} generationTime The generation time of this ObjectId instance\n* @return {ObjectID} instance of ObjectID.\n*/\nvar ObjectID = function(id) {\n  // Duck-typing to support ObjectId from different npm packages\n  if(id instanceof ObjectID) return id;\n  if(!(this instanceof ObjectID)) return new ObjectID(id);\n\n  this._bsontype = 'ObjectID';\n\n  var __id = null;\n  var valid = ObjectID.isValid(id);\n\n  // Throw an error if it's not a valid setup\n  if(!valid && id != null){\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n  } else if(valid && typeof id == 'string' && id.length == 24) {\n    return ObjectID.createFromHexString(id);\n  } else if(id == null || typeof id == 'number') {\n    // convert to 12 byte binary string\n    this.id = this.generate(id);\n  } else if(id != null && id.length === 12) {\n    // assume 12 byte string\n    this.id = id;\n  } else if(id != null && id.toHexString) {\n    // Duck-typing to support ObjectId from different npm packages\n    return id;\n  } else {\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n  }\n\n  if(ObjectID.cacheHexString) this.__id = this.toHexString();\n}\n\n/**\n* Return the ObjectID id as a 24 byte hex string representation\n*\n* @method\n* @return {String} return the 24 byte hex string representation.\n*/\nObjectID.prototype.toHexString = function() {\n  if(ObjectID.cacheHexString && this.__id) return this.__id;\n\n  var hexString = '';\n  if(!this.id || !this.id.length) {\n    throw new Error('invalid ObjectId, ObjectId.id must be either a string or a Uint8Array, but is [' + JSON.stringify(this.id) + ']');\n  }\n\n  if(this.id instanceof Uint8Array) {\n    hexString = convertToHex(this.id);\n    if(ObjectID.cacheHexString) this.__id = hexString;\n    return hexString;\n  }\n\n  for (var i = 0; i < this.id.length; i++) {\n    hexString += hexTable[this.id.charCodeAt(i)];\n  }\n\n  if(ObjectID.cacheHexString) this.__id = hexString;\n  return hexString;\n}\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.getInc = function() {\n  return ObjectID.index = (ObjectID.index + 1) % 0xFFFFFF;\n}\n\n/**\n* Generate a 12 byte id buffer used in ObjectID's\n*\n* @method\n* @param {number} [time] optional parameter allowing to pass in a second based timestamp.\n* @return {Buffer} return the 12 byte id buffer string.\n*/\nObjectID.prototype.generate = function(time) {\n  if ('number' != typeof time) {\n    time = ~~(Date.now()/1000);\n  }\n\n  // Use pid\n  var pid = (typeof process === 'undefined' ? Math.floor(Math.random() * 100000) : process.pid) % 0xFFFF;\n  var inc = this.getInc();\n  // Buffer used\n  var buffer = new Uint8Array(12);\n  // Encode time\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Encode machine\n  buffer[6] = MACHINE_ID & 0xff;\n  buffer[5] = (MACHINE_ID >> 8) & 0xff;\n  buffer[4] = (MACHINE_ID >> 16) & 0xff;\n  // Encode pid\n  buffer[8] = pid & 0xff;\n  buffer[7] = (pid >> 8) & 0xff;\n  // Encode index\n  buffer[11] = inc & 0xff;\n  buffer[10] = (inc >> 8) & 0xff;\n  buffer[9] = (inc >> 16) & 0xff;\n  // Return the buffer\n  return buffer;\n}\n\n/**\n* Converts the id into a 24 byte hex string for printing\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toString = function() {\n  return this.toHexString();\n}\n\n/**\n* Converts to its JSON representation.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toJSON = function() {\n  return { $oid: this.toHexString() };\n}\n\n/**\n* Compares the equality of this ObjectID with `otherID`.\n*\n* @method\n* @param {Object} otherID ObjectID instance to compare against.\n* @return {Boolean} the result of comparing two ObjectID's\n*/\nObjectID.prototype.equals = function(otherId) {\n  var id;\n\n  if(otherId instanceof ObjectID) {\n    return this.toString() == otherId.toString();\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12 && this.id instanceof Uint8Array) {\n    return otherId === this.id.toString('binary');\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 24) {\n    return otherId === this.toHexString();\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12) {\n    return otherId === this.id;\n  } else if(otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {\n    return otherId.toHexString() === this.toHexString();\n  } else {\n    return false;\n  }\n}\n\n/**\n* Returns the generation date (accurate up to the second) that this ID was generated.\n*\n* @method\n* @return {date} the generation date\n*/\nObjectID.prototype.getTimestamp = function() {\n  var timestamp = new Date();\n  var time = this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n  timestamp.setTime(Math.floor(time) * 1000);\n  return timestamp;\n}\n\n/**\n* Creates an ObjectID from a hex string representation of an ObjectID.\n*\n* @method\n* @param {String} hexString create a ObjectID from a passed in 24 byte hexstring.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromHexString = function(string) {\n  // Throw an error if it's not a valid setup\n  if(typeof string === 'undefined' || string != null && string.length != 24)\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n\n  var length = string.length;\n\n  if(length > 12*2) {\n    throw new Error('Id cannot be longer than 12 bytes');\n  }\n\n  // Calculate lengths\n  var sizeof = length >> 1;\n  var array = new Uint8Array(sizeof);\n  var n = 0;\n  var i = 0;\n\n  while (i < length) {\n    array[n++] = decodeLookup[string.charCodeAt(i++)] << 4 | decodeLookup[string.charCodeAt(i++)]\n  }\n\n  return new ObjectID(array);\n}\n\n/**\n* Checks if a value is a valid bson ObjectId\n*\n* @method\n* @return {Boolean} return true if the value is a valid bson ObjectId, return false otherwise.\n*/\nObjectID.isValid = function(id) {\n  if(id == null) return false;\n\n  if(typeof id == 'number') {\n    return true;\n  }\n\n  if(typeof id == 'string') {\n    return id.length == 12 || (id.length == 24 && checkForHexRegExp.test(id));\n  }\n\n  if(id instanceof ObjectID) {\n    return true;\n  }\n\n  if(id instanceof Uint8Array) {\n    return true;\n  }\n\n  // Duck-Typing detection of ObjectId like objects\n  if(id.toHexString) {\n    return id.id.length == 12 || (id.id.length == 24 && checkForHexRegExp.test(id.id));\n  }\n\n  return false;\n}\n\n/**\n* @ignore\n*/\nObjectID.createPk = function() {\n  return new ObjectID();\n}\n\n/**\n* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\n*\n* @method\n* @param {number} time an integer number representing a number of seconds.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromTime = function(time) {\n  var buffer = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  // Encode time into first 4 bytes\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Return the new objectId\n  return new ObjectID(buffer);\n}\n\n/**\n* @ignore\n*/\nObject.defineProperty(ObjectID.prototype, \"generationTime\", {\n   enumerable: true\n , get: function () {\n     return this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n   }\n , set: function (value) {\n     // Encode time into first 4 bytes\n     this.id[3] = value & 0xff;\n     this.id[2] = (value >> 8) & 0xff;\n     this.id[1] = (value >> 16) & 0xff;\n     this.id[0] = (value >> 24) & 0xff;\n   }\n});\n\n/**\n* @ignore\n*/\nObjectID.index = ~~(Math.random() * 0xFFFFFF);\n\nmodule.exports = ObjectID;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(33)))\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON RegExp type.\n *\n * @class\n * @return {BSONRegExp} A MinKey instance\n */\nvar BSONRegExp = function(pattern, options) {\n  // Execute\n  this._bsontype = 'BSONRegExp';\n  this.pattern = pattern;\n  this.options = options || '';\n  // Perform validation of parameters\n  if(typeof this.pattern != 'string') throw Error('pattern must be a string');\n  if(typeof this.options != 'string') throw Error('options must be a string');\n\n  // Validate options\n  for(var i = 0; i < options.length; i++) {\n    if(!(this.options[i] == 'i'\n      || this.options[i] == 'm'\n      || this.options[i] == 'x'\n      || this.options[i] == 'l'\n      || this.options[i] == 's'\n      || this.options[i] == 'u'\n    )) {\n      throw new Error('the regular expression options [' + this.options[i] + \"] is not supported\");\n    }\n  }\n}\n\nBSONRegExp.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'BSONRegExp') return false;\n  return this.pattern == value.pattern && this.options == value.options;\n}\n\nBSONRegExp.prototype.toJSON = function() {\n  return { $regex: this.pattern, $options: this.options };\n}\n\nmodule.exports = BSONRegExp;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A class representation of the BSON Symbol type.\n *\n * @class\n * @deprecated\n * @param {String} value the string representing the symbol.\n * @return {Symbol}\n */\nvar Symbol = function(value) {\n  this._bsontype = 'Symbol';\n  this.value = value;\n}\n\n/**\n * Access the wrapped string value.\n *\n * @method\n * @return {String} returns the wrapped string.\n */\nSymbol.prototype.valueOf = function() {\n  return this.value;\n};\n\nSymbol.prototype.equals = function(value) {\n  if(!value || !value.value) return false;\n  if(value._bsontype != 'Symbol') return false;\n  return this.value === value.value;\n}\n\n/**\n * @ignore\n */\nSymbol.prototype.toJSON = function() {\n  return { $symbol: this.value };\n}\n\nmodule.exports = Symbol;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Timestamp.\n * @param {number} high the high (signed) 32 bits of the Timestamp.\n * @return {Timestamp}\n */\nvar Timestamp = function(low, high) {\n  this._bsontype = 'Timestamp';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0;  // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0;  // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nTimestamp.prototype.toInt = function() {\n  return this.low_;\n}\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nTimestamp.prototype.toNumber = function() {\n  return this.high_ * Timestamp.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n}\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {String} the JSON representation.\n */\nTimestamp.prototype.toJSON = function() {\n  return {\n    $timestamp: this.toString(),\n  };\n}\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {String} the textual representation of this value.\n */\nTimestamp.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Timestamp.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nTimestamp.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nTimestamp.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nTimestamp.prototype.getLowBitsUnsigned = function() {\n  return (this.low_ >= 0) ?\n      this.low_ : Timestamp.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Timestamp.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Timestamp.\n */\nTimestamp.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ != 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) != 0) {\n        break;\n      }\n    }\n    return this.high_ != 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {Boolean} whether this value is zero.\n */\nTimestamp.prototype.isZero = function() {\n  return this.high_ == 0 && this.low_ == 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {Boolean} whether this value is negative.\n */\nTimestamp.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {Boolean} whether this value is odd.\n */\nTimestamp.prototype.isOdd = function() {\n  return (this.low_ & 1) == 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long equals the other\n */\nTimestamp.prototype.equals = function(other) {\n  return (this.high_ == other.high_) && (this.low_ == other.low_);\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long does not equal the other.\n */\nTimestamp.prototype.notEquals = function(other) {\n  return (this.high_ != other.high_) || (this.low_ != other.low_);\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is less than the other.\n */\nTimestamp.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is less than or equal to the other.\n */\nTimestamp.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is greater than the other.\n */\nTimestamp.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is greater than or equal to the other.\n */\nTimestamp.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nTimestamp.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Timestamp} the negation of this value.\n */\nTimestamp.prototype.negate = function() {\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.MIN_VALUE;\n  } else {\n    return this.not().add(Timestamp.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to add to this one.\n * @return {Timestamp} the sum of this and the given Timestamp.\n */\nTimestamp.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to subtract from this.\n * @return {Timestamp} the difference of this and the given Timestamp.\n */\nTimestamp.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to multiply with this.\n * @return {Timestamp} the product of this and the other.\n */\nTimestamp.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Timestamp.ZERO;\n  } else if (other.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return other.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return this.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Timestamp.TWO_PWR_24_) &&\n      other.lessThan(Timestamp.TWO_PWR_24_)) {\n    return Timestamp.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Timestamp} other Long by which to divide.\n * @return {Timestamp} this Long divided by the given one.\n */\nTimestamp.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    if (other.equals(Timestamp.ONE) ||\n        other.equals(Timestamp.NEG_ONE)) {\n      return Timestamp.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Timestamp.MIN_VALUE)) {\n      return Timestamp.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Timestamp.ZERO)) {\n        return other.isNegative() ? Timestamp.ONE : Timestamp.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate().div(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Timestamp.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Timestamp.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Timestamp.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Timestamp.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Timestamp} other Long by which to mod.\n * @return {Timestamp} this Long modulo the given one.\n */\nTimestamp.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Timestamp} the bitwise-NOT of this value.\n */\nTimestamp.prototype.not = function() {\n  return Timestamp.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to AND.\n * @return {Timestamp} the bitwise-AND of this and the other.\n */\nTimestamp.prototype.and = function(other) {\n  return Timestamp.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to OR.\n * @return {Timestamp} the bitwise-OR of this and the other.\n */\nTimestamp.prototype.or = function(other) {\n  return Timestamp.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to XOR.\n * @return {Timestamp} the bitwise-XOR of this and the other.\n */\nTimestamp.prototype.xor = function(other) {\n  return Timestamp.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the left by the given amount.\n */\nTimestamp.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Timestamp.fromBits(\n                 low << numBits,\n                 (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Timestamp.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount.\n */\nTimestamp.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >> numBits);\n    } else {\n      return Timestamp.fromBits(\n                 high >> (numBits - 32),\n                 high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nTimestamp.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >>> numBits);\n    } else if (numBits == 32) {\n      return Timestamp.fromBits(high, 0);\n    } else {\n      return Timestamp.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Timestamp.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Timestamp(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Timestamp.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Timestamp.ZERO;\n  } else if (value <= -Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MIN_VALUE;\n  } else if (value + 1 >= Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MAX_VALUE;\n  } else if (value < 0) {\n    return Timestamp.fromNumber(-value).negate();\n  } else {\n    return new Timestamp(\n               (value % Timestamp.TWO_PWR_32_DBL_) | 0,\n               (value / Timestamp.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromBits = function(lowBits, highBits) {\n  return new Timestamp(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {String} str the textual representation of the Timestamp.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Timestamp.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));\n\n  var result = Timestamp.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Timestamp.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Timestamp.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Timestamp.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nTimestamp.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Timestamp} */\nTimestamp.ZERO = Timestamp.fromInt(0);\n\n/** @type {Timestamp} */\nTimestamp.ONE = Timestamp.fromInt(1);\n\n/** @type {Timestamp} */\nTimestamp.NEG_ONE = Timestamp.fromInt(-1);\n\n/** @type {Timestamp} */\nTimestamp.MAX_VALUE =\n    Timestamp.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\n/** @type {Timestamp} */\nTimestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Timestamp}\n * @ignore\n */\nTimestamp.TWO_PWR_24_ = Timestamp.fromInt(1 << 24);\n\nmodule.exports = Timestamp;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar bsonModule = __webpack_require__(5)\nvar atob = __webpack_require__(7).atob;\nvar bufferConstructor = null;\n\nif (typeof Buffer !== 'undefined') {\n  bufferConstructor = new Buffer(1) instanceof Uint8Array\n    ? Buffer\n    : Uint8Array;\n} else {\n  bufferConstructor = Uint8Array;\n}\n\nvar ExtJSON = function(module) {\n  if (module) {\n    for (var i = 0; i < BSONTypes.length; i++) {\n      if (!module[BSONTypes[i]]) throw new Error('passed in module does not contain all BSON types required');\n    }\n\n    this.bson = module;\n  } else {\n    this.bson = bsonModule;\n  }\n}\n\nExtJSON.extend = function(module) {\n  if (!module) throw new Error(\"expecting mongodb module, invoke by calling ExtJSON.extend(require('mongodb'))\")\n  // Rewrite passed in types\n  for (var i = 0; i < BSONTypes.length; i++) {\n    if (module[BSONTypes[i]]) {\n      // Add the toJSON to the passed in types\n      // This lets us modify the toJSON method withou breaking\n      // backward compatibility\n      module[BSONTypes[i]].prototype.toJSON = bsonModule[BSONTypes[i]].prototype.toJSON;\n    }\n  }\n\n  return module;\n}\n\nfunction deseralizeValue(self, value, options) {\n  if(value['$oid'] != null) {\n    return new self.bson.ObjectID(value['$oid']);\n  } else if(value['$date'] && typeof value['$date'] == 'string') {\n    return Date.parse(value['$date']);\n  } else if(value['$date'] && value['$date'] instanceof self.bson.Long) {\n    var date = new Date();\n    date.setTime(value['$date'].toNumber());\n    return date;\n  } else if(value['$binary'] != null) {\n    if (typeof Buffer !== 'undefined') {\n      if (bufferConstructor === Buffer) {\n        var data = new Buffer(value['$binary'], 'base64');\n        var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n        return new self.bson.Binary(data, type);\n      }\n    }\n\n    var data = new Uint8Array(atob(value['$binary'])\n      .split(\"\")\n      .map(function(c) {\n        return c.charCodeAt(0);\n      }));\n\n    var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n    return new self.bson.Binary(data, type);\n  } else if(value['$maxKey'] != null) {\n    return new self.bson.MaxKey();\n  } else if(value['$minKey'] != null) {\n    return new self.bson.MinKey();\n  } else if(value['$code'] != null) {\n    return new self.bson.Code(value['$code'], deseralizeValue(self, value['$scope'] || {}, options))\n  } else if(value['$numberLong'] != null) {\n    return self.bson.Long.fromString(value['$numberLong']);\n  } else if(value['$numberDouble'] != null && options.strict) {\n    return new self.bson.Double(parseFloat(value['$numberDouble']));\n  } else if(value['$numberDouble'] != null && !options.strict) {\n    return parseFloat(value['$numberDouble']);\n  } else if(value['$numberInt'] != null && options.strict) {\n    return new self.bson.Int32(parseInt(value['$numberInt'], 10));\n  } else if(value['$numberInt'] != null && !options.strict) {\n    return parseInt(value['$numberInt'], 10);\n  } else if(value['$numberDecimal'] != null) {\n    return self.bson.Decimal128.fromString(value['$numberDecimal']);\n  } else if(value['$regex'] != null) {\n    return new self.bson.BSONRegExp(value['$regex'], value['$options'] || '');\n  } else if(value['$symbol'] != null) {\n    return new self.bson.Symbol(value['$symbol']);\n  } else if(value['$ref'] != null) {\n    return new self.bson.DBRef(value['$ref'], deseralizeValue(self, value['$id'], options), value['$db']);\n  } else if(value['$timestamp'] != null) {\n    return self.bson.Timestamp.fromString(value['$timestamp']);\n  } else if(typeof value == 'number' && options.strict) {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return new self.bson.Int32(value);\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return new self.bson.Double(value);\n      } else {\n        return new self.bson.Long.fromNumber(value);\n      }\n    } else {\n      return new self.bson.Double(value);\n    }\n  } else if(typeof value == 'number' && !options.strict) {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return value;\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return value;\n      } else {\n        return new self.bson.Long.fromNumber(value);\n      }\n    } else {\n      return value;\n    }\n  } else {\n    return value;\n  }\n}\n\nExtJSON.prototype.parse = function(text, options) {\n  var self = this;\n  options = options || { strict: true };\n\n  try {\n    return JSON.parse(text, function(key, value) {\n      return deseralizeValue(self, value, options);\n    });\n  } catch(err) {\n    if (err.name === 'SyntaxError') {\n      var error = new Error(err.message);\n      error.stack = err.stack\n      throw error;\n    }\n  }\n}\n\n//\n// Serializer\n//\n\n// MAX INT32 boundaries\nvar BSON_INT32_MAX = 0x7FFFFFFF;\nvar BSON_INT32_MIN = -0x80000000;\n\n// JS MAX PRECISE VALUES\nvar JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.\n\nExtJSON.prototype.stringify = function(value, reducer, indents) {\n  var doc = null;\n\n  if(Array.isArray(value)) {\n    doc = serializeArray(value);\n  } else {\n    doc = serializeDocument(value);\n  }\n\n  return JSON.stringify(doc, reducer, indents);\n}\n\nfunction serializeArray(array) {\n  var _array = new Array(array.length);\n\n  for(var i = 0; i < array.length; i++) {\n    _array[i] = serializeValue(array[i]);\n  }\n\n  return _array;\n}\n\nfunction serializeValue(value) {\n  if(value instanceof Date) {\n    return { $date: { $numberLong: value.getTime().toString() } };\n  } else if(typeof value == 'number') {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return { $numberInt: value.toString() };\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return { $numberDouble: value.toString() };\n      } else {\n        return { $numberLong: value.toString() };\n      }\n    } else {\n      return { $numberDouble: value.toString() };\n    }\n  } else if(Array.isArray(value)) {\n    return serializeArray(value);\n  } else if(value != null && typeof value == 'object') {\n    return serializeDocument(value);\n  }\n\n  return value;\n}\n\nvar BSONTypes = ['Binary', 'Code', 'DBRef', 'Decimal128', 'Double',\n  'Int32', 'Long', 'MaxKey', 'MinKey', 'ObjectID', 'BSONRegExp', 'Symbol', 'Timestamp'];\n\nfunction serializeDocument(doc) {\n  if(doc == null || typeof doc !== 'object') throw new Error('not an object instance');\n  var _doc = {};\n\n  for(var name in doc) {\n    if(Array.isArray(doc[name])) {\n      _doc[name] = serializeArray(doc[name]);\n    } else if(doc[name] != null && doc[name]._bsontype && BSONTypes.indexOf(doc[name]._bsontype) != -1) {\n      _doc[name] = doc[name];\n    } else if(doc[name] instanceof Date) {\n      _doc[name] = serializeValue(doc[name]);\n    } else if(doc[name] != null && typeof doc[name] === 'object') {\n      _doc[name] = serializeDocument(doc[name]);\n    } else {\n      _doc[name] = serializeValue(doc[name]);\n    }\n  }\n\n  return _doc;\n}\n\n// Export the Extended BSON\nmodule.exports = ExtJSON;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// baas.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b98fc2ac1aa79855ca08","export function deprecate(fn, msg) {\n  let alreadyWarned = false;\n  function deprecated() {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      console.warn('DeprecationWarning: ' + msg);\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  Object.setPrototypeOf(deprecated, fn);\n  if (fn.prototype) {\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.js","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 1\n// module chunks = 0","export const JSONTYPE = 'application/json';\nexport const USER_AUTH_KEY = '_baas_ua';\nexport const REFRESH_TOKEN_KEY = '_baas_rt';\nexport const STATE_KEY = '_baas_state';\nexport const BAAS_ERROR_KEY = '_baas_error';\nexport const BAAS_LINK_KEY = '_baas_link';\nexport const IMPERSONATION_ACTIVE_KEY = '_baas_impers_active';\nexport const IMPERSONATION_USER_KEY = '_baas_impers_user';\nexport const IMPERSONATION_REAL_USER_AUTH_KEY = '_baas_impers_real_ua';\nexport const DEFAULT_BAAS_SERVER_URL = 'https://baas-dev.10gen.cc';\n\nexport const checkStatus = (response) => {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  let error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n};\n\nexport const makeFetchArgs = (method, body) => {\n  const init = {\n    method: method,\n    headers: { 'Accept': JSONTYPE, 'Content-Type': JSONTYPE }\n  };\n\n  if (body) {\n    init.body = body;\n  }\n  init.cors = true;\n  return init;\n};\n\nexport const parseRedirectFragment = (fragment, ourState) => {\n  // After being redirected from oauth, the URL will look like:\n  // https://todo.examples.baas-dev.10gen.cc/#_baas_state=...&_baas_ua=...\n  // This function parses out baas-specific tokens from the fragment and\n  // builds an object describing the result.\n  const vars = fragment.split('&');\n  const result = { ua: null, found: false, stateValid: false, lastError: null };\n  let shouldBreak = false;\n  for (const pair of vars) {\n    let pairParts = pair.split('=');\n    const pairKey = decodeURIComponent(pairParts[0]);\n    switch (pairKey) {\n    case BAAS_ERROR_KEY:\n      result.lastError = decodeURIComponent(pairParts[1]);\n      result.found = true;\n      shouldBreak = true;\n      break;\n    case USER_AUTH_KEY:\n      result.ua = JSON.parse(window.atob(decodeURIComponent(pairParts[1])));\n      result.found = true;\n      continue;\n    case BAAS_LINK_KEY:\n      result.found = true;\n      continue;\n    case STATE_KEY:\n      result.found = true;\n      let theirState = decodeURIComponent(pairParts[1]);\n      if (ourState && ourState === theirState) {\n        result.stateValid = true;\n      }\n      continue;\n    default: continue;\n    }\n\n    if (shouldBreak) {\n      break;\n    }\n  }\n\n  return result;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/common.js","/**\n * Creates a new BaasError\n *\n * @class\n * @augments Error\n * @param {String} message The error message\n * @param {Object} fields Optional fields to decorate the error with\n * @return {BaasError} A BaasError instance\n */\nexport class BaasError extends Error {\n  constructor(message, code) {\n    super(message);\n    this.name = 'BaasError';\n    this.message = message;\n    if (code !== undefined) {\n      this.code = code;\n    }\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = (new Error(message)).stack;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/errors.js","var ExtJSON = require('./lib/ext_json');\nExtJSON.BSON = require('./lib/bson');\n\nmodule.exports = ExtJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/index.js\n// module id = 4\n// module chunks = 0","\"use strict\";\n\nvar Binary = require('./binary');\nvar Code = require('./code');\nvar DBRef = require('./db_ref');\nvar Decimal128 = require('./decimal128');\nvar Double = require('./double');\nvar Int32 = require('./int_32');\nvar Long = require('./long');\nvar MaxKey = require('./max_key');\nvar MinKey = require('./min_key');\nvar ObjectID = require('./objectid');\nvar BSONRegExp = require('./regexp');\nvar Symbol = require('./symbol');\nvar Timestamp = require('./timestamp');\n\nmodule.exports = {\n  Binary: Binary, Code: Code, DBRef: DBRef, Decimal128: Decimal128, Double: Double,\n  Int32: Int32, Long: Long, MaxKey: MaxKey, MinKey: MinKey, ObjectID: ObjectID,\n  BSONRegExp: BSONRegExp, Symbol: Symbol, Timestamp: Timestamp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/index.js\n// module id = 5\n// module chunks = 0","\"use strict\";\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Long.\n * @param {number} high the high (signed) 32 bits of the Long.\n * @return {Long}\n */\nvar Long = function(low, high) {\n  this._bsontype = 'Long';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0;  // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0;  // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nLong.prototype.toInt = function() {\n  return this.low_;\n}\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nLong.prototype.toNumber = function() {\n  return this.high_ * Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n}\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {String} the JSON representation.\n */\nLong.prototype.toJSON = function() {\n  return { $numberLong: this.toString() };\n}\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {String} the textual representation of this value.\n */\nLong.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Long.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nLong.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nLong.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nLong.prototype.getLowBitsUnsigned = function() {\n  return (this.low_ >= 0) ?\n      this.low_ : Long.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Long.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Long.\n */\nLong.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ != 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) != 0) {\n        break;\n      }\n    }\n    return this.high_ != 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {Boolean} whether this value is zero.\n */\nLong.prototype.isZero = function() {\n  return this.high_ == 0 && this.low_ == 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {Boolean} whether this value is negative.\n */\nLong.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {Boolean} whether this value is odd.\n */\nLong.prototype.isOdd = function() {\n  return (this.low_ & 1) == 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long equals the other\n */\nLong.prototype.equals = function(other) {\n  return (this.high_ == other.high_) && (this.low_ == other.low_);\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long does not equal the other.\n */\nLong.prototype.notEquals = function(other) {\n  return (this.high_ != other.high_) || (this.low_ != other.low_);\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is less than the other.\n */\nLong.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is less than or equal to the other.\n */\nLong.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is greater than the other.\n */\nLong.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is greater than or equal to the other.\n */\nLong.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nLong.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Long} the negation of this value.\n */\nLong.prototype.negate = function() {\n  if (this.equals(Long.MIN_VALUE)) {\n    return Long.MIN_VALUE;\n  } else {\n    return this.not().add(Long.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Long.\n *\n * @method\n * @param {Long} other Long to add to this one.\n * @return {Long} the sum of this and the given Long.\n */\nLong.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Long.\n *\n * @method\n * @param {Long} other Long to subtract from this.\n * @return {Long} the difference of this and the given Long.\n */\nLong.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Long.\n *\n * @method\n * @param {Long} other Long to multiply with this.\n * @return {Long} the product of this and the other.\n */\nLong.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Long.ZERO;\n  } else if (other.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    return other.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Long.TWO_PWR_24_) &&\n      other.lessThan(Long.TWO_PWR_24_)) {\n    return Long.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Long} other Long by which to divide.\n * @return {Long} this Long divided by the given one.\n */\nLong.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    if (other.equals(Long.ONE) ||\n        other.equals(Long.NEG_ONE)) {\n      return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Long.MIN_VALUE)) {\n      return Long.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Long.ZERO)) {\n        return other.isNegative() ? Long.ONE : Long.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate().div(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Long.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Long.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Long.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Long.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Long} other Long by which to mod.\n * @return {Long} this Long modulo the given one.\n */\nLong.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Long} the bitwise-NOT of this value.\n */\nLong.prototype.not = function() {\n  return Long.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to AND.\n * @return {Long} the bitwise-AND of this and the other.\n */\nLong.prototype.and = function(other) {\n  return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to OR.\n * @return {Long} the bitwise-OR of this and the other.\n */\nLong.prototype.or = function(other) {\n  return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to XOR.\n * @return {Long} the bitwise-XOR of this and the other.\n */\nLong.prototype.xor = function(other) {\n  return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the left by the given amount.\n */\nLong.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Long.fromBits(\n                 low << numBits,\n                 (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Long.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount.\n */\nLong.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >> numBits);\n    } else {\n      return Long.fromBits(\n                 high >> (numBits - 32),\n                 high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nLong.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >>> numBits);\n    } else if (numBits == 32) {\n      return Long.fromBits(high, 0);\n    } else {\n      return Long.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Long.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Long(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Long.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Long.ZERO;\n  } else if (value <= -Long.TWO_PWR_63_DBL_) {\n    return Long.MIN_VALUE;\n  } else if (value + 1 >= Long.TWO_PWR_63_DBL_) {\n    return Long.MAX_VALUE;\n  } else if (value < 0) {\n    return Long.fromNumber(-value).negate();\n  } else {\n    return new Long(\n               (value % Long.TWO_PWR_32_DBL_) | 0,\n               (value / Long.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Long} the corresponding Long value.\n */\nLong.fromBits = function(lowBits, highBits) {\n  return new Long(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {String} str the textual representation of the Long.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Long} the corresponding Long value.\n */\nLong.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Long.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 8));\n\n  var result = Long.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Long.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Long.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Long.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nLong.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Long} */\nLong.ZERO = Long.fromInt(0);\n\n/** @type {Long} */\nLong.ONE = Long.fromInt(1);\n\n/** @type {Long} */\nLong.NEG_ONE = Long.fromInt(-1);\n\n/** @type {Long} */\nLong.MAX_VALUE =\n    Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\n/** @type {Long} */\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Long}\n * @ignore\n */\nLong.TWO_PWR_24_ = Long.fromInt(1 << 24);\n\nmodule.exports = Long;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/long.js\n// module id = 6\n// module chunks = 0","\"use strict\";\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction btoa(input) {\n  var str = String(input);\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars, output = '';\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3/4);\n    if (charCode > 0xFF) {\n      throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n};\n\nfunction atob(input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n};\n\nmodule.exports = {\n  btoa: btoa, atob: atob,\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/shared.js\n// module id = 7\n// module chunks = 0","/* global window, fetch */\n/* eslint no-labels: ['error', { 'allowLoop': true }] */\nimport 'isomorphic-fetch';\nimport Auth from './auth';\nimport MongoDBService from './services/mongodb/mongodb_service';\nimport { BaasError } from './errors';\nimport * as common from './common';\nimport { TextDecoder } from 'text-encoding-utf-8';\nimport ExtJSONModule from 'mongodb-extjson';\nconst EJSON = new ExtJSONModule();\nconst UTF8Decoder = new TextDecoder('utf-8');\n\nexport const ErrAuthProviderNotFound = 'AuthProviderNotFound';\nexport const ErrInvalidSession = 'InvalidSession';\nexport const ErrUnauthorized = 'Unauthorized';\n\nexport const toQueryString = (obj) => {\n  let parts = [];\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      parts.push(encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]));\n    }\n  }\n  return parts.join('&');\n};\n\nexport class BaasClient {\n  constructor(clientAppID, options) {\n    let baseUrl = common.DEFAULT_BAAS_SERVER_URL;\n    if (options && options.baseUrl) {\n      baseUrl = options.baseUrl;\n    }\n    this.appUrl = `${baseUrl}/admin/v1`;\n    this.authUrl = `${baseUrl}/admin/v1/auth`;\n    if (clientAppID) {\n      this.appUrl = `${baseUrl}/v1/app/${clientAppID}`;\n      this.authUrl = `${this.appUrl}/auth`;\n    }\n    this.authManager = new Auth(this.authUrl);\n    this.authManager.handleRedirect();\n  }\n\n  authWithOAuth(providerName, redirectUrl) {\n    window.location.replace(this.authManager.getOAuthLoginURL(providerName, redirectUrl));\n  }\n\n  getOAuthLoginURL(providerName, redirectUrl) {\n    return this.authManager.getOAuthLoginURL(providerName, redirectUrl);\n  }\n\n  anonymousAuth() {\n    return this.authManager.anonymousAuth();\n  }\n\n  authedId() {\n    return this.authManager.authedId();\n  }\n\n  auth() {\n    return this.authManager.get();\n  }\n\n  authError() {\n    return this.authManager.error();\n  }\n\n  logout() {\n    return this._do('/auth', 'DELETE', {refreshOnFailure: false, useRefreshToken: true})\n      .then(() => this.authManager.clear());\n  }\n\n  /**\n   * Get a BAAS service\n   *\n   * @method\n   * @param {String} type The service type [mongodb, {String}]\n   * @param {String} name The service name.\n   * @return {Object} returns a named service\n   */\n  service(type, name) {\n    if (type === 'mongodb') {\n      return new MongoDBService(this, name);\n    }\n\n    throw new BaasError('Invalid service type specified: ' + type);\n  }\n\n  _do(resource, method, options) {\n    options = Object.assign({}, {\n      refreshOnFailure: true,\n      useRefreshToken: false\n    }, options);\n\n    if (!options.noAuth) {\n      if (this.auth() === null) {\n        return Promise.reject(new BaasError('Must auth first', ErrUnauthorized));\n      }\n    }\n\n    let url = `${this.appUrl}${resource}`;\n    let fetchArgs = common.makeFetchArgs(method, options.body);\n\n    if (!!options.headers) {\n      Object.assign(fetchArgs.headers, options.headers);\n    }\n\n    if (!options.noAuth) {\n      let token = options.useRefreshToken ? this.authManager.getRefreshToken() : this.auth().accessToken;\n      fetchArgs.headers.Authorization = `Bearer ${token}`;\n    }\n\n    if (options.queryParams) {\n      url = url + '?' + toQueryString(options.queryParams);\n    }\n\n    return fetch(url, fetchArgs).then((response) => {\n      // Okay: passthrough\n      if (response.status >= 200 && response.status < 300) {\n        return Promise.resolve(response);\n      }\n\n      if (response.headers.get('Content-Type') === common.JSONTYPE) {\n        return response.json().then((json) => {\n          // Only want to try refreshing token when there's an invalid session\n          if ('errorCode' in json && json.errorCode === ErrInvalidSession) {\n            if (!options.refreshOnFailure) {\n              this.authManager.clear();\n              const error = new BaasError(json.error, json.errorCode);\n              error.response = response;\n              throw error;\n            }\n\n            return this._refreshToken().then(() => {\n              options.refreshOnFailure = false;\n              return this._do(resource, method, options);\n            });\n          }\n\n          const error = new BaasError(json.error, json.errorCode);\n          error.response = response;\n          return Promise.reject(error);\n        });\n      }\n\n      const error = new Error(response.statusText);\n      error.response = response;\n\n      return Promise.reject(error);\n    });\n  }\n\n  _refreshToken() {\n    if (this.authManager.isImpersonatingUser()) {\n      return this.authManager.refreshImpersonation(this);\n    }\n\n    return this._do('/auth/newAccessToken', 'POST', { refreshOnFailure: false, useRefreshToken: true })\n      .then(response => response.json())\n      .then(json => this.authManager.setAccessToken(json.accessToken));\n  }\n\n  executePipeline(stages, options = {}) {\n    let responseDecoder = (d) => EJSON.parse(d, { strict: false });\n    let responseEncoder = (d) => EJSON.stringify(d);\n\n    if (options.decoder) {\n      if ((typeof options.decoder) !== 'function') {\n        throw new Error('decoder option must be a function, but \"' + typeof (options.decoder) + '\" was provided');\n      }\n      responseDecoder = options.decoder;\n    }\n\n    if (options.encoder) {\n      if ((typeof options.encoder) !== 'function') {\n        throw new Error('encoder option must be a function, but \"' + typeof (options.encoder) + '\" was provided');\n      }\n      responseEncoder = options.encoder;\n    }\n\n    return this._do('/pipeline', 'POST', { body: responseEncoder(stages) })\n      .then(response => (response.arrayBuffer) ? response.arrayBuffer() : response.buffer())\n      .then(buf => UTF8Decoder.decode(buf))\n      .then(body => responseDecoder(body));\n  }\n}\n\nexport class Admin {\n  constructor(baseUrl) {\n    this.client = new BaasClient('', {baseUrl});\n  }\n\n  _do(url, method, options) {\n    return this.client._do(url, method, options)\n      .then(response => response.json());\n  }\n\n  _get(url, queryParams) {\n    return this._do(url, 'GET', {queryParams});\n  }\n\n  _put(url, options) {\n    return this._do(url, 'PUT', options);\n  }\n\n  _delete(url) {\n    return this._do(url, 'DELETE');\n  }\n\n  _post(url, body) {\n    return this._do(url, 'POST', {body: JSON.stringify(body)});\n  }\n\n  profile() {\n    let root = this;\n    return {\n      keys: () => ({\n        list: () => root._get('/profile/keys'),\n        create: (key) => root._post('/profile/keys'),\n        apiKey: (keyId) => ({\n          get: () => root._get(`/profile/keys/${keyId}`),\n          remove: () => this._delete(`/profile/keys/${keyId}`),\n          enable: () => root._put(`/profile/keys/${keyId}/enable`),\n          disable: () => root._put(`/profile/keys/${keyId}/disable`)\n        })\n      })\n    };\n  }\n\n  /* Examples of how to access admin API with this client:\n   *\n   * List all apps\n   *    a.apps().list()\n   *\n   * Fetch app under name 'planner'\n   *    a.apps().app('planner').get()\n   *\n   * List services under the app 'planner'\n   *    a.apps().app('planner').services().list()\n   *\n   * Delete a rule by ID\n   *    a.apps().app('planner').services().service('mdb1').rules().rule('580e6d055b199c221fcb821d').remove()\n   *\n   */\n  apps() {\n    let root = this;\n    return {\n      list: () => root._get('/apps'),\n      create: (data, options) => {\n        let query = (options && options.defaults) ? '?defaults=true' : '';\n        return root._post('/apps' + query, data);\n      },\n\n      app: (appID) => ({\n        get: () => root._get(`/apps/${appID}`),\n        remove: () => root._delete(`/apps/${appID}`),\n        replace: (doc) => root._put(`/apps/${appID}`, {\n          headers: { 'X-Baas-Unsafe': appID },\n          body: JSON.stringify(doc)\n        }),\n\n        users: () => ({\n          list: (filter) => this._get(`/apps/${appID}/users`, filter),\n          user: (uid) => ({\n            get: () => this._get(`/apps/${appID}/users/${uid}`),\n            logout: () => this._put(`/apps/${appID}/users/${uid}/logout`)\n          })\n        }),\n\n        sandbox: () => ({\n          executePipeline: (data, userId) => {\n            return this._do(\n              `/apps/${appID}/sandbox/pipeline`,\n              'POST',\n              {body: JSON.stringify(data), queryParams: {user_id: userId}});\n          }\n        }),\n\n        authProviders: () => ({\n          create: (data) => this._post(`/apps/${appID}/authProviders`, data),\n          list: () => this._get(`/apps/${appID}/authProviders`),\n          provider: (authType, authName) => ({\n            get: () => this._get(`/apps/${appID}/authProviders/${authType}/${authName}`),\n            remove: () => this._delete(`/apps/${appID}/authProviders/${authType}/${authName}`),\n            update: (data) => this._post(`/apps/${appID}/authProviders/${authType}/${authName}`, data)\n          })\n        }),\n        values: () => ({\n          list: () => this._get(`/apps/${appID}/values`),\n          value: (varName) => ({\n            get: () => this._get(`/apps/${appID}/values/${varName}`),\n            remove: () => this._delete(`/apps/${appID}/values/${varName}`),\n            create: (data) => this._post(`/apps/${appID}/values/${varName}`, data),\n            update: (data) => this._post(`/apps/${appID}/values/${varName}`, data)\n          })\n        }),\n        pipelines: () => ({\n          list: () => this._get(`/apps/${appID}/pipelines`),\n          pipeline: (varName) => ({\n            get: () => this._get(`/apps/${appID}/pipelines/${varName}`),\n            remove: () => this._delete(`/apps/${appID}/pipelines/${varName}`),\n            create: (data) => this._post(`/apps/${appID}/pipelines/${varName}`, data),\n            update: (data) => this._post(`/apps/${appID}/pipelines/${varName}`, data)\n          })\n        }),\n        logs: () => ({\n          get: (filter) => this._get(`/apps/${appID}/logs`, filter)\n        }),\n        apiKeys: () => ({\n          list: () => this._get(`/apps/${appID}/keys`),\n          create: (data) => this._post(`/apps/${appID}/keys`, data),\n          apiKey: (key) => ({\n            get: () => this._get(`/apps/${appID}/keys/${key}`),\n            remove: () => this._delete(`/apps/${appID}/keys/${key}`),\n            enable: () => this._put(`/apps/${appID}/keys/${key}/enable`),\n            disable: () => this._put(`/apps/${appID}/keys/${key}/disable`)\n          })\n        }),\n        services: () => ({\n          list: () => this._get(`/apps/${appID}/services`),\n          create: (data) => this._post(`/apps/${appID}/services`, data),\n          service: (svc) => ({\n            get: () => this._get(`/apps/${appID}/services/${svc}`),\n            update: (data) => this._post(`/apps/${appID}/services/${svc}`, data),\n            remove: () => this._delete(`/apps/${appID}/services/${svc}`),\n            setConfig: (data) => this._post(`/apps/${appID}/services/${svc}/config`, data),\n\n            rules: () => ({\n              list: () => this._get(`/apps/${appID}/services/${svc}/rules`),\n              create: (data) => this._post(`/apps/${appID}/services/${svc}/rules`),\n              rule: (ruleId) => ({\n                get: () => this._get(`/apps/${appID}/services/${svc}/rules/${ruleId}`),\n                update: (data) => this._post(`/apps/${appID}/services/${svc}/rules/${ruleId}`, data),\n                remove: () => this._delete(`/apps/${appID}/services/${svc}/rules/${ruleId}`)\n              })\n            }),\n\n            incomingWebhooks: () => ({\n              list: () => this._get(`/apps/${appID}/services/${svc}/incomingWebhooks`),\n              create: (data) => this._post(`/apps/${appID}/services/${svc}/incomingWebhooks`),\n              incomingWebhook: (incomingWebhookId) => ({\n                get: () => this._get(`/apps/${appID}/services/${svc}/incomingWebhooks/${incomingWebhookId}`),\n                update: (data) => this._post(`/apps/${appID}/services/${svc}/incomingWebhooks/${incomingWebhookId}`, data),\n                remove: () => this._delete(`/apps/${appID}/services/${svc}/incomingWebhooks/${incomingWebhookId}`)\n              })\n            })\n          })\n        })\n      })\n    };\n  }\n\n  _admin() {\n    return {\n      logs: () => ({\n        get: (filter) => this._do('/admin/logs', 'GET', {useRefreshToken: true, queryParams: filter})\n      }),\n      users: () => ({\n        list: (filter) => this._do('/admin/users', 'GET', {useRefreshToken: true, queryParams: filter}),\n        user: (uid) => ({\n          logout: () => this._do(`/admin/users/${uid}/logout`, 'PUT', {useRefreshToken: true})\n        })\n      })\n    };\n  }\n\n  _isImpersonatingUser() {\n    return this.client.authManager.isImpersonatingUser();\n  }\n\n  _startImpersonation(userId) {\n    return this.client.authManager.startImpersonation(this.client, userId);\n  }\n\n  _stopImpersonation() {\n    return this.client.authManager.stopImpersonation();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client.js",";(function () {\n\n  var object =\n    typeof exports != 'undefined' ? exports :\n    typeof self != 'undefined' ? self : // #8: web workers\n    $.global; // #31: ExtendScript\n\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    var str = String(input);\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next str index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      str.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = str.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    var str = String(input).replace(/[=]+$/, ''); // #31: ExtendScript bad parse of /=\n    if (str.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = str.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/Base64/base64.js\n// module id = 9\n// module chunks = 0","/* global window, fetch */\n\nimport { createStorage } from './storage';\nimport { BaasError } from './errors';\nimport * as common from './common';\nimport {\n  btoa as b64Encode,\n  atob as b64Decode\n} from 'Base64';\n\nexport default class Auth {\n  constructor(rootUrl) {\n    this.rootUrl = rootUrl;\n    this.authDataStorage = createStorage('localStorage');\n  }\n\n  pageRootUrl() {\n    return [window.location.protocol, '//', window.location.host, window.location.pathname].join('');\n  }\n\n  // The state we generate is to be used for any kind of request where we will\n  // complete an authentication flow via a redirect. We store the generate in\n  // a local storage bound to the app's origin. This ensures that any time we\n  // receive a redirect, there must be a state parameter and it must match\n  // what we ourselves have generated. This state MUST only be sent to\n  // a trusted BaaS endpoint in order to preserve its integrity. BaaS will\n  // store it in some way on its origin (currently a cookie stored on this client)\n  // and use that state at the end of an auth flow as a parameter in the redirect URI.\n  static generateState() {\n    let alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let state = '';\n    const stateLength = 64;\n    for (let i = 0; i < stateLength; i++) {\n      let pos = Math.floor(Math.random() * alpha.length);\n      state += alpha.substring(pos, pos + 1);\n    }\n\n    return state;\n  }\n\n  setAccessToken(token) {\n    let currAuth = this.get();\n    currAuth.accessToken = token;\n    currAuth.refreshToken = this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n    this.set(currAuth);\n  }\n\n  error() {\n    return this._error;\n  }\n\n  handleRedirect() {\n    if (typeof (window) === 'undefined') {\n      // This means we're running in some environment other\n      // than a browser - so handling a redirect makes no sense here.\n      return;\n    }\n\n    let ourState = this.authDataStorage.get(common.STATE_KEY);\n    let redirectFragment = window.location.hash.substring(1);\n    const redirectState = common.parseRedirectFragment(redirectFragment, ourState);\n    if (redirectState.lastError) {\n      console.error(`BaasClient: error from redirect: ${redirectState.lastError}`);\n      this._error = redirectState.lastError;\n      window.history.replaceState(null, '', this.pageRootUrl());\n      return;\n    }\n\n    if (!redirectState.found) {\n      return;\n    }\n\n    this.authDataStorage.remove(common.STATE_KEY);\n    if (!redirectState.stateValid) {\n      console.error('BaasClient: state values did not match!');\n      window.history.replaceState(null, '', this.pageRootUrl());\n      return;\n    }\n\n    if (!redirectState.ua) {\n      console.error('BaasClient: no UA value was returned from redirect!');\n      return;\n    }\n\n    // If we get here, the state is valid - set auth appropriately.\n    this.set(redirectState.ua);\n    window.history.replaceState(null, '', this.pageRootUrl());\n  }\n\n  getOAuthLoginURL(providerName, redirectUrl) {\n    if (redirectUrl === undefined) {\n      redirectUrl = this.pageRootUrl();\n    }\n\n    let state = Auth.generateState();\n    this.authDataStorage.set(common.STATE_KEY, state);\n    let result = `${this.rootUrl}/oauth2/${providerName}?redirect=${encodeURI(redirectUrl)}&state=${state}`;\n    return result;\n  }\n\n  anonymousAuth() {\n    let fetchArgs = common.makeFetchArgs('GET');\n    fetchArgs.cors = true;\n\n    return fetch(`${this.rootUrl}/anon/user`, fetchArgs)\n      .then(common.checkStatus)\n      .then(response => response.json())\n      .then(json => {\n        this.set(json);\n      });\n  }\n\n  apiKeyAuth(key) {\n    const fetchArgs = common.makeFetchArgs('POST', JSON.stringify({'key': key}));\n    fetchArgs.cors = true;\n\n    return fetch(`${this.rootUrl}/api/key`, fetchArgs)\n      .then(common.checkStatus)\n      .then(response => response.json())\n      .then(json => {\n        this.set(json);\n      });\n  }\n\n  localAuth(username, password, options = {cors: true}) {\n    const fetchArgs = common.makeFetchArgs('POST', JSON.stringify({username, password}));\n    fetchArgs.cors = true;\n\n    return fetch(`${this.rootUrl}/local/userpass`, fetchArgs)\n      .then(common.checkStatus)\n      .then((response) => {\n        return response.json().then((json) => {\n          this.set(json);\n          return Promise.resolve(json);\n        });\n      });\n  }\n\n  clear() {\n    this.authDataStorage.remove(common.USER_AUTH_KEY);\n    this.authDataStorage.remove(common.REFRESH_TOKEN_KEY);\n    this.clearImpersonation();\n  }\n\n  getRefreshToken() {\n    return this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n  }\n\n  set(json) {\n    let rt = json.refreshToken;\n    delete json.refreshToken;\n\n    this.authDataStorage.set(common.USER_AUTH_KEY, b64Encode(JSON.stringify(json)));\n    this.authDataStorage.set(common.REFRESH_TOKEN_KEY, rt);\n  }\n\n  get() {\n    if (!this.authDataStorage.get(common.USER_AUTH_KEY)) {\n      return null;\n    }\n\n    const item = this.authDataStorage.get(common.USER_AUTH_KEY);\n    return JSON.parse(b64Decode(item));\n  }\n\n  authedId() {\n    let id = ((this.get() || {}).user || {})._id;\n    if (id) {\n      return {'$oid': id};\n    }\n  }\n\n  isImpersonatingUser() {\n    return this.authDataStorage.get(common.IMPERSONATION_ACTIVE_KEY) === 'true';\n  }\n\n  refreshImpersonation(client) {\n    let userId = this.authDataStorage.get(common.IMPERSONATION_USER_KEY);\n    return client._do(`/admin/users/${userId}/impersonate`, 'POST', {refreshOnFailure: false, useRefreshToken: true}).then((response) => {\n      return response.json().then((json) => {\n        json.refreshToken = this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n        this.set(json);\n        return Promise.resolve();\n      });\n    }).catch((e) => {\n      this.stopImpersonation();\n      return Promise.reject(e);\n    });\n  }\n\n  startImpersonation(client, userId) {\n    if (this.get() === null) {\n      return Promise.reject(new BaasError('Must auth first'));\n    }\n\n    if (this.isImpersonatingUser()) {\n      return Promise.reject(new BaasError('Already impersonating a user'));\n    }\n\n    this.authDataStorage.set(common.IMPERSONATION_ACTIVE_KEY, 'true');\n    this.authDataStorage.set(common.IMPERSONATION_USER_KEY, userId);\n\n    let realUserAuth = JSON.parse(b64Decode(this.authDataStorage.get(common.USER_AUTH_KEY)));\n    realUserAuth.refreshToken = this.authDataStorage.get(common.REFRESH_TOKEN_KEY);\n    this.authDataStorage.set(common.IMPERSONATION_REAL_USER_AUTH_KEY, b64Encode(JSON.stringify(realUserAuth)));\n    return this.refreshImpersonation(client);\n  }\n\n  stopImpersonation() {\n    if (!this.isImpersonatingUser()) {\n      throw new BaasError('Not impersonating a user');\n    }\n\n    return new Promise((resolve, reject) => {\n      let realUserAuth = JSON.parse(b64Decode(this.authDataStorage.get(common.IMPERSONATION_REAL_USER_AUTH_KEY)));\n      this.set(realUserAuth);\n      this.clearImpersonation();\n      resolve();\n    });\n  }\n\n  clearImpersonation() {\n    this.authDataStorage.remove(common.IMPERSONATION_ACTIVE_KEY);\n    this.authDataStorage.remove(common.IMPERSONATION_USER_KEY);\n    this.authDataStorage.remove(common.IMPERSONATION_REAL_USER_AUTH_KEY);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/auth.js","import { BaasClient, Admin } from './client';\n\nexport {\n  BaasClient,\n  Admin\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { deprecate } from '../../util';\nimport { BSON } from 'mongodb-extjson';\nconst { ObjectID } = BSON;\n\n/**\n * Create a new Collection instance (not meant to be instantiated directly).\n *\n * @class\n * @return {Collection} a Collection instance.\n */\nexport default class Collection {\n  constructor(db, name) {\n    this.db = db;\n    this.name = name;\n  }\n\n  /**\n   * Insert a single document\n   *\n   * @method\n   * @param {Object} doc The document to insert.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} a Promise for the operation.\n   */\n  insertOne(doc, options = {}) {\n    return insertOp(this, doc, options);\n  }\n\n  /**\n   * Insert multiple documents\n   *\n   * @method\n   * @param {Array} docs The documents to insert.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} Returns a Promise for the operation.\n   */\n  insertMany(docs, options = {}) {\n    return insertOp(this, docs, options);\n  }\n\n  /**\n   * Delete a single document\n   *\n   * @method\n   * @param {Object} query The query used to match a single document.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} Returns a Promise for the operation.\n   */\n  deleteOne(query, options = {}) {\n    return deleteOp(this, query, Object.assign({}, options, { singleDoc: true }));\n  }\n\n  /**\n   * Delete all documents matching query\n   *\n   * @method\n   * @param {Object} query The query used to match the documents to delete.\n   * @param {Object} [options] Additional options object.\n   * @return {Promise<Object, Error>} Returns a Promise for the operation.\n   */\n  deleteMany(query, options = {}) {\n    return deleteOp(this, query, Object.assign({}, options, { singleDoc: false }));\n  }\n\n  /**\n   * Update a single document\n   *\n   * @method\n   * @param {Object} query The query used to match a single document.\n   * @param {Object} update The update operations to perform on the matching document.\n   * @param {Object} [options] Additional options object.\n   * @param {Boolean} [options.upsert=false] Perform an upsert operation.\n   * @return {Promise<Object, Error>} A Promise for the operation.\n   */\n  updateOne(query, update, options = {}) {\n    return updateOp(this, query, update, Object.assign({}, options, { multi: false }));\n  }\n\n  /**\n   * Update multiple documents\n   *\n   * @method\n   * @param {Object} query The query used to match the documents.\n   * @param {Object} update The update operations to perform on the matching documents.\n   * @param {Object} [options] Additional options object.\n   * @param {Boolean} [options.upsert=false] Perform an upsert operation.\n   * @return {Promise<Object, Error>} Returns a Promise for the operation.\n   */\n  updateMany(query, update, options = {}) {\n    return updateOp(this, query, update, Object.assign({}, options, { multi: true }));\n  }\n\n  /**\n   * Find documents\n   *\n   * @method\n   * @param {Object} query The query used to match documents.\n   * @param {Object} [options] Additional options object.\n   * @param {Object} [options.projection=null] The query document projection.\n   * @param {Number} [options.limit=null] The maximum number of documents to return.\n   * @return {Array} An array of documents.\n   */\n  find(query, options = {}) {\n    return findOp(this, query, options);\n  }\n\n  /**\n   * Count number of matching documents for a given query\n   *\n   * @param {Object} query The query used to match documents.\n   * @param {Object} options Additional find options.\n   * @param {Number} [options.limit=null] The maximum number of documents to return.\n   * @return {Array} An array of documents.\n   */\n  count(query, options = {}) {\n    return findOp(this, query, Object.assign({}, options, { count: true }));\n  }\n\n  // deprecated\n  insert(docs, options = {}) {\n    return insertOp(this, docs, options);\n  }\n\n  upsert(query, update, options = {}) {\n    return updateOp(this, query, update, Object.assign({}, options, { upsert: true }));\n  }\n}\n\n// deprecated methods\nCollection.prototype.upsert =\n  deprecate(Collection.prototype.upsert, 'use `updateOne`/`updateMany` instead of `upsert`');\n\n// private\nfunction insertOp(self, docs, options) {\n  docs = Array.isArray(docs) ? docs : [ docs ];\n\n  // add ObjectIds to docs that have none\n  docs = docs.map(doc => {\n    if (!doc._id) doc._id = new ObjectID();\n    return doc;\n  });\n\n  return self.db.client.executePipeline([\n    {\n      action: 'literal',\n      args: {\n        items: docs\n      }\n    },\n    {\n      service: self.db.service,\n      action: 'insert',\n      args: {\n        database: self.db.name,\n        collection: self.name\n      }\n    }\n  ])\n  .then(response => {\n    return {\n      insertedIds: response.result.map(doc => doc._id)\n    };\n  });\n}\n\nfunction deleteOp(self, query, options) {\n  const args = Object.assign({\n    database: self.db.name,\n    collection: self.name,\n    query: query\n  }, options);\n\n  return self.db.client.executePipeline([\n    {\n      service: self.db.service,\n      action: 'delete',\n      args: args\n    }\n  ])\n  .then(response => {\n    return {\n      deletedCount: response.result[0].removed\n    };\n  });\n}\n\nfunction updateOp(self, query, update, options) {\n  const args = Object.assign({\n    database: self.db.name,\n    collection: self.name,\n    query: query,\n    update: update\n  }, options);\n\n  return self.db.client.executePipeline([\n    {\n      service: self.db.service,\n      action: 'update',\n      args: args\n    }\n  ]);\n}\n\nfunction findOp(self, query, options) {\n  const args = Object.assign({\n    database: self.db.name,\n    collection: self.name\n  }, options);\n\n  // legacy argument naming\n  if (args.projection) {\n    args.project = args.projection;\n    delete args.projection;\n  }\n\n  return self.db.client.executePipeline([\n    {\n      service: self.db.service,\n      action: 'find',\n      args: args\n    }\n  ]);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/mongodb/collection.js","import Collection from './collection';\nimport { deprecate } from '../../util';\n\n/**\n * Create a new DB instance (not meant to be instantiated directly).\n * @class\n * @return {DB} a DB instance.\n */\nexport default class DB {\n  constructor(client, service, name) {\n    this.client = client;\n    this.service = service;\n    this.name = name;\n  }\n\n  /**\n   * Returns a Collection instance representing a MongoDB Collection object.\n   *\n   * @method\n   * @param {String} name The collection name.\n   * @param {Object} [options] Additional options.\n   * @return {Collection} returns a Collection instance representing a MongoDb collection.\n   */\n  collection(name, options = {}) {\n    return new Collection(this, name, options);\n  }\n}\n\n// deprecated\nDB.prototype.getCollection =\n  deprecate(DB.prototype.collection, 'use `collection` instead of `getCollection`');\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/mongodb/db.js","import DB from './db';\nimport { deprecate } from '../../util';\n\n/**\n * Create a new MongoClient instance (not meant to be instantiated directly).\n *\n * @class\n * @return {MongoClient} a MongoClient instance.\n */\nexport default class MongoDBService {\n  constructor(baasClient, serviceName) {\n    this.baasClient = baasClient;\n    this.serviceName = serviceName;\n  }\n\n  /**\n   * Get a Db instance\n   *\n   * @method\n   * @param {String} databaseName The MongoDB database name\n   * @param {Object} [options] Additional options.\n   * @return {Db} returns a Db instance representing a MongoDB database.\n   */\n  db(databaseName, options = {}) {\n    return new DB(this.baasClient, this.serviceName, databaseName);\n  }\n}\n\n// deprecated\nMongoDBService.prototype.getDB =\nMongoDBService.prototype.getDb =\n  deprecate(MongoDBService.prototype.db, 'use `db` instead of `getDB`');\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/mongodb/mongodb_service.js","class MemoryStorage {\n  constructor() {\n    this._data = {};\n  }\n\n  getItem(key) {\n    return (key in this._data) ? this._data[key] : undefined;\n  }\n\n  setItem(key, value) {\n    this._data[key] = value;\n    return this._data[key];\n  }\n\n  removeItem(key) {\n    delete this._data[key];\n    return undefined;\n  }\n\n  clear() {\n    this._data = {};\n    return this._data;\n  }\n}\n\nclass Storage {\n  constructor(store) {\n    this.store = store;\n  }\n\n  get(key) { return this.store.getItem(key); }\n  set(key, value) { return this.store.setItem(key, value); }\n  remove(key) { return this.store.removeItem(key); }\n  clear() { return this.store.clear(); }\n}\n\nexport function createStorage(type) {\n  if (type === 'localStorage') {\n    if (window && 'localStorage' in window && window.localStorage !== null) {\n      return new Storage(window.localStorage);\n    }\n\n    // output warning?\n  } else if (type === 'sessionStorage') {\n    if (window && 'sessionStorage' in window && window.sessionStorage !== null) {\n      return new Storage(window.sessionStorage);\n    }\n\n    // output warning?\n  }\n\n  // default to memory storage\n  return new Storage(new MemoryStorage());\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage.js","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 16\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 17\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 18\n// module chunks = 0","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isomorphic-fetch/fetch-npm-browserify.js\n// module id = 19\n// module chunks = 0","\"use strict\";\n\nvar btoa = require('./shared').btoa;\n\n/**\n * Module dependencies.\n * @ignore\n */\nfunction convert(integer) {\n  var str = Number(integer).toString(16);\n  return str.length == 1 ? \"0\" + str : str;\n};\n\n/**\n * A class representation of the BSON Binary type.\n *\n * Sub types\n *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.\n *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.\n *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.\n *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.\n *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.\n *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.\n *\n * @class\n * @param {Buffer} buffer a buffer object containing the binary data.\n * @param {Number} [subType] the option binary type.\n * @return {Binary}\n */\nvar Binary = function(buffer, subType) {\n  this._bsontype = 'Binary';\n\n  if(buffer instanceof Number) {\n    this.sub_type = buffer;\n    this.position = 0;\n  } else {\n    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;\n    this.position = 0;\n  }\n\n  if(buffer != null && !(buffer instanceof Number)) {\n    // Only accept Buffer or Uint8Array\n    if(typeof buffer == 'string') {\n      this.buffer = writeStringToArray(buffer);\n    } else if(buffer instanceof Uint8Array) {\n      this.buffer = buffer;\n    } else {\n      throw new Error('passed in buffer must be an Uint8Array instance');\n    }\n\n    this.position = buffer.length;\n  } else {\n    this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));\n    // Set position to start of buffer\n    this.position = 0;\n  }\n}\n\n/**\n * Updates this binary with byte_value.\n *\n * @method\n * @param {String} byte_value a single byte we wish to write.\n */\nBinary.prototype.put = function(byte_value) {\n  // If it's a string and a has more than one character throw an error\n  if(byte_value['length'] != null && typeof byte_value != 'number' && byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");\n  if(typeof byte_value != 'number' && byte_value < 0 || byte_value > 255) throw new Error(\"only accepts number in a valid unsigned byte range 0-255\");\n\n  // Decode the byte value once\n  var decoded_byte = null;\n  if(typeof byte_value == 'string') {\n    decoded_byte = byte_value.charCodeAt(0);\n  } else if(byte_value['length'] != null) {\n    decoded_byte = byte_value[0];\n  } else {\n    decoded_byte = byte_value;\n  }\n\n  if(this.buffer.length > this.position) {\n    this.buffer[this.position++] = decoded_byte;\n  } else {\n    var buffer = null;\n    // Create a new buffer (typed or normal array)\n    buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));\n\n    // We need to copy all the content to the new array\n    for(var i = 0; i < this.buffer.length; i++) {\n      buffer[i] = this.buffer[i];\n    }\n\n    // Reassign the buffer\n    this.buffer = buffer;\n    // Write the byte\n    this.buffer[this.position++] = decoded_byte;\n  }\n}\n\n/**\n * Writes a buffer or string to the binary.\n *\n * @method\n * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object.\n * @param {number} offset specify the binary of where to write the content.\n * @return {null}\n */\nBinary.prototype.write = function(string, offset) {\n  offset = typeof offset == 'number' ? offset : this.position;\n\n  // If the buffer is to small let's extend the buffer\n  if(this.buffer.length < offset + string.length) {\n    var buffer = null;\n    // Create a new buffer\n    buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))\n    // Copy the content\n    for(var i = 0; i < this.position; i++) {\n      buffer[i] = this.buffer[i];\n    }\n\n    // Assign the new buffer\n    this.buffer = buffer;\n  }\n\n  for(var i = 0; i < string.length; i++) {\n    this.buffer[offset++] = string[i];\n  }\n\n  this.position = offset > this.position ? offset : this.position;\n}\n\n/**\n * Reads **length** bytes starting at **position**.\n *\n * @method\n * @param {number} position read from the given position in the Binary.\n * @param {number} length the number of bytes to read.\n * @return {Buffer}\n */\nBinary.prototype.read = function(position, length) {\n  length = length && length > 0\n    ? length\n    : this.position;\n\n  // Let's return the data based on the type we have\n  return this.buffer.slice(position, position + length);\n}\n\n/**\n * Returns the value of this binary as a string.\n *\n * @method\n * @return {String}\n */\nBinary.prototype.value = function(asRaw) {\n  asRaw = asRaw == null ? false : asRaw;\n  if(asRaw) return this.buffer.slice(0, this.position);\n  return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);\n}\n\n/**\n * Length.\n *\n * @method\n * @return {number} the length of the binary.\n */\nBinary.prototype.length = function() {\n  return this.position;\n}\n\nBinary.prototype.equals = function(value) {\n  if(!value) return false;\n  if(value._bsontype != 'Binary') return false;\n  if(!value.buffer) return false;\n  if(value.buffer.length != this.buffer.length) return false;\n  for(var i = 0; i < this.buffer.length; i++) {\n    if(this.buffer[i] != value.buffer[i]) return false;\n  }\n\n  return true;\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toJSON = function() {\n  // If we are in the node.js context use Buffer.toString, otherwise the btoa\n  var binary = typeof Buffer !== 'undefined'\n    ? this.buffer.toString('base64')\n    : btoa(String.fromCharCode.apply(null, this.buffer));\n\n  return {\n    $binary: binary,\n    $type: convert(this.sub_type)\n  }\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toString = function(format) {\n  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';\n}\n\n/**\n * Binary default subtype\n * @ignore\n */\nvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/**\n * @ignore\n */\nvar writeStringToArray = function(data) {\n  // Create a buffer\n  var buffer = new Uint8Array(new ArrayBuffer(data.length));\n  // Write the content to the buffer\n  for(var i = 0; i < data.length; i++) {\n    buffer[i] = data.charCodeAt(i);\n  }\n  // Write the string to the buffer\n  return buffer;\n}\n\n/**\n * Convert Array ot Uint8Array to Binary String\n *\n * @ignore\n */\nvar convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {\n  var result = \"\";\n  for(var i = startIndex; i < endIndex; i++) {\n   result = result + String.fromCharCode(byteArray[i]);\n  }\n  return result;\n};\n\nBinary.BUFFER_SIZE = 256;\n\n/**\n * Default BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_DEFAULT = 0;\n/**\n * Function BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_FUNCTION = 1;\n/**\n * Byte Array BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/**\n * OLD UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID_OLD = 3;\n/**\n * UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID = 4;\n/**\n * MD5 BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_MD5 = 5;\n/**\n * User BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_USER_DEFINED = 128;\n\nmodule.exports = Binary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/binary.js\n// module id = 20\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function(code, scope) {\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope;\n}\n\nCode.prototype.equals = function(value) {\n  if(!value || !value.code) return false;\n  if(value._bsontype != 'Code') return false;\n  if(this.code == value.code) return true;\n  return false;\n}\n\nCode.prototype.toJSON = function() {\n  return { $code: this.code, $scope: this.scope };\n}\n\nmodule.exports = Code;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/code.js\n// module id = 21\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON DBRef type.\n *\n * @class\n * @param {String} namespace the collection name.\n * @param {ObjectID} oid the reference ObjectID.\n * @param {String} [db] optional db name, if omitted the reference is local to the current db.\n * @return {DBRef}\n */\nvar DBRef = function(namespace, oid, db) {\n  this._bsontype = 'DBRef';\n  this.namespace = namespace;\n  this.oid = oid;\n  this.db = db;\n}\n\nDBRef.prototype.equals = function(value) {\n  if(value == null || value.namespace == null  || value.db == null || value.oid == null) return false;\n  if(value._bsontype != 'DBRef') return false;\n\n  if(this.oid && this.oid.equals) {\n    return this.oid.equals(value.oid) && this.namespace == value.namespace && this.db == value.db;\n  } else {\n    return this.oid == value.oid && this.namespace == value.namespace && this.db == value.db;\n  }\n}\n\nDBRef.prototype.toJSON = function() {\n  return {\n    '$ref':this.namespace,\n    '$id':this.oid,\n    '$db':this.db == null ? '' : this.db\n  };\n}\n\nmodule.exports = DBRef;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/db_ref.js\n// module id = 22\n// module chunks = 0","\"use strict\"\n\nvar Long = require('./long');\n\nvar PARSE_STRING_REGEXP = /^(\\+|\\-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([\\-\\+])?(\\d+)?$/;\nvar PARSE_INF_REGEXP = /^(\\+|\\-)?(Infinity|inf)$/i;\nvar PARSE_NAN_REGEXP = /^(\\+|\\-)?NaN$/i;\n\nvar EXPONENT_MAX = 6111;\nvar EXPONENT_MIN = -6176;\nvar EXPONENT_BIAS = 6176;\nvar MAX_DIGITS = 34;\n\n// Nan value bits as 32 bit values (due to lack of longs)\nvar NAN_BUFFER = [0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n// Infinity value bits 32 bit values (due to lack of longs)\nvar INF_NEGATIVE_BUFFER = [0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\nvar INF_POSITIVE_BUFFER = [0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n\nvar EXPONENT_REGEX = /^([\\-\\+])?(\\d+)?$/;\n\n// Extract least significant 5 bits\nvar COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nvar EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nvar COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nvar COMBINATION_NAN = 31;\n// Value of combination field for NaN\nvar COMBINATION_SNAN = 32;\n// decimal128 exponent bias\nvar EXPONENT_BIAS = 6176;\n\n// Detect if the value is a digit\nvar isDigit = function(value) {\n  return !isNaN(parseInt(value, 10));\n}\n\n// Divide two uint128 values\nvar divideu128 = function(value) {\n  var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n  var _rem = Long.fromNumber(0);\n  var i = 0;\n\n  if(!value.parts[0] && !value.parts[1] &&\n     !value.parts[2] && !value.parts[3]) {\n    return { quotient: value, rem: _rem };\n  }\n\n  for(var i = 0; i <= 3; i++) {\n    // Adjust remainder to match value of next dividend\n    _rem = _rem.shiftLeft(32);\n    // Add the divided to _rem\n    _rem = _rem.add(new Long(value.parts[i], 0));\n    value.parts[i] = _rem.div(DIVISOR).low_;\n    _rem = _rem.modulo(DIVISOR);\n  }\n\n  return { quotient: value, rem: _rem };\n}\n\n// Multiply two Long values and return the 128 bit value\nvar multiply64x2 = function(left, right) {\n  if(!left && !right) {\n    return {high: Long.fromNumber(0), low: Long.fromNumber(0)};\n  }\n\n  var leftHigh = left.shiftRightUnsigned(32);\n  var leftLow = new Long(left.getLowBits(), 0);\n  var rightHigh = right.shiftRightUnsigned(32);\n  var rightLow = new Long(right.getLowBits(), 0);\n\n  var productHigh = leftHigh.multiply(rightHigh);\n  var productMid = leftHigh.multiply(rightLow);\n  var productMid2 = leftLow.multiply(rightHigh);\n  var productLow = leftLow.multiply(rightLow);\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productMid = new Long(productMid.getLowBits(), 0)\n                .add(productMid2)\n                .add(productLow.shiftRightUnsigned(32));\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n\n  // Return the 128 bit result\n  return {high: productHigh, low: productLow};\n}\n\nvar lessThan = function(left, right) {\n  // Make values unsigned\n  var uhleft = left.high_ >>> 0;\n  var uhright = right.high_ >>> 0;\n\n  // Compare high bits first\n  if(uhleft < uhright) {\n    return true\n  } else if(uhleft == uhright) {\n    var ulleft = left.low_ >>> 0;\n    var ulright = right.low_ >>> 0;\n    if(ulleft < ulright) return true;\n  }\n\n  return false;\n}\n\nvar longtoHex = function(value) {\n  var buffer = new Buffer(8);\n  var index = 0;\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = value.low_ & 0xff;\n  buffer[index++] = (value.low_ >> 8) & 0xff;\n  buffer[index++] = (value.low_ >> 16) & 0xff;\n  buffer[index++] = (value.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = value.high_ & 0xff;\n  buffer[index++] = (value.high_ >> 8) & 0xff;\n  buffer[index++] = (value.high_ >> 16) & 0xff;\n  buffer[index++] = (value.high_ >> 24) & 0xff;\n  return buffer.reverse().toString('hex');\n}\n\nvar int32toHex = function(value) {\n  var buffer = new Buffer(4);\n  var index = 0;\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = value & 0xff;\n  buffer[index++] = (value >> 8) & 0xff;\n  buffer[index++] = (value >> 16) & 0xff;\n  buffer[index++] = (value >> 24) & 0xff;\n  return buffer.reverse().toString('hex');\n}\n\n/**\n * A class representation of the BSON Decimal128 type.\n *\n * @class\n * @param {Buffer} bytes A buffer representing the Decimal128 bytes.\n * @return {Decimal128}\n */\nvar Decimal128 = function(bytes) {\n  this._bsontype = 'Decimal128';\n  this.bytes = bytes;\n}\n\n/**\n * Creates a Decimal128 instance from a string representation.\n *\n * @method\n * @param {String} string A string representing a Decimal128 value.\n */\nDecimal128.fromString = function(string) {\n  // Parse state tracking\n  var isNegative = false;\n  var sawRadix = false;\n  var foundNonZero = false;\n\n  // Total number of significant digits (no leading or trailing zero)\n  var significantDigits = 0;\n  // Total number of significand digits read\n  var nDigitsRead = 0;\n  // Total number of digits (no leading zeros)\n  var nDigits = 0;\n  // The number of the digits after radix\n  var radixPosition = 0;\n  // The index of the first non-zero in *str*\n  var firstNonZero = 0;\n\n  // Digits Array\n  var digits = [0];\n  // The number of digits in digits\n  var nDigitsStored = 0;\n  // Insertion pointer for digits\n  var digitsInsert = 0;\n  // The index of the first non-zero digit\n  var firstDigit = 0;\n  // The index of the last digit\n  var lastDigit = 0;\n\n  // Exponent\n  var exponent = 0;\n  // loop index over array\n  var i = 0;\n  // The high 17 digits of the significand\n  var significandHigh = [0, 0];\n  // The low 17 digits of the significand\n  var significandLow = [0, 0];\n  // The biased exponent\n  var biasedExponent = 0;\n\n  // Read index\n  var index = 0;\n\n  // Trim the string\n  string = string.trim();\n\n  // Results\n  var stringMatch = string.match(PARSE_STRING_REGEXP);\n  var infMatch = string.match(PARSE_INF_REGEXP);\n  var nanMatch = string.match(PARSE_NAN_REGEXP);\n\n  // Validate the string\n  if(!stringMatch\n    && ! infMatch\n    && ! nanMatch || string.length == 0) {\n      throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Check if we have an illegal exponent format\n  if(stringMatch && stringMatch[4] && stringMatch[2] === undefined) {\n    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Get the negative or positive sign\n  if(string[index] == '+' || string[index] == '-') {\n    isNegative = string[index++] == '-';\n  }\n\n  // Check if user passed Infinity or NaN\n  if(!isDigit(string[index]) && string[index] != '.') {\n    if(string[index] == 'i' || string[index] == 'I') {\n      return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n    } else if(string[index] == 'N') {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n  }\n\n  // Read all the digits\n  while(isDigit(string[index]) || string[index] == '.') {\n    if(string[index] == '.') {\n      if(sawRadix) {\n        return new Decimal128(new Buffer(NAN_BUFFER));\n      }\n\n      sawRadix = true;\n      index = index + 1;\n      continue;\n    }\n\n    if(nDigitsStored < 34) {\n      if(string[index] != '0' || foundNonZero) {\n        if(!foundNonZero) {\n          firstNonZero = nDigitsRead;\n        }\n\n        foundNonZero = true;\n\n        // Only store 34 digits\n        digits[digitsInsert++] = parseInt(string[index], 10);\n        nDigitsStored = nDigitsStored + 1;\n      }\n    }\n\n    if(foundNonZero) {\n      nDigits = nDigits + 1;\n    }\n\n    if(sawRadix) {\n      radixPosition = radixPosition + 1;\n    }\n\n    nDigitsRead = nDigitsRead + 1;\n    index = index + 1;\n  }\n\n  if(sawRadix && !nDigitsRead) {\n    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Read exponent if exists\n  if(string[index] == 'e' || string[index] == 'E') {\n    // Read exponent digits\n    var match = string.substr(++index).match(EXPONENT_REGEX);\n\n    // No digits read\n    if(!match || !match[2]) {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n\n    // Get exponent\n    exponent = parseInt(match[0], 10);\n\n    // Adjust the index\n    index = index + match[0].length;\n  }\n\n  // Return not a number\n  if(string[index]) {\n    return new Decimal128(new Buffer(NAN_BUFFER));\n  }\n\n  // Done reading input\n  // Find first non-zero digit in digits\n  firstDigit = 0;\n\n  if(!nDigitsStored) {\n    firstDigit = 0;\n    lastDigit = 0;\n    digits[0] = 0;\n    nDigits = 1;\n    nDigitsStored = 1;\n    significantDigits = 0;\n  } else {\n    lastDigit = nDigitsStored - 1;\n    significantDigits = nDigits;\n\n    if(exponent != 0 && significantDigits != 1) {\n      while(string[firstNonZero + significantDigits - 1] == '0') {\n        significantDigits = significantDigits - 1;\n      }\n    }\n  }\n\n  // Normalization of exponent\n  // Correct exponent based on radix position, and shift significand as needed\n  // to represent user input\n\n  // Overflow prevention\n  if(exponent <= radixPosition && radixPosition - exponent > (1 << 14)) {\n    exponent = EXPONENT_MIN;\n  } else {\n    exponent = exponent - radixPosition;\n  }\n\n  // Attempt to normalize the exponent\n  while(exponent > EXPONENT_MAX) {\n    // Shift exponent to significand and decrease\n    lastDigit = lastDigit + 1;\n\n    if(lastDigit - firstDigit > MAX_DIGITS) {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if(digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n      }\n    }\n\n    exponent = exponent - 1;\n  }\n\n  while(exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n    // Shift last digit\n    if(lastDigit == 0) {\n      exponent = EXPONENT_MIN;\n      significantDigits = 0;\n      break;\n    }\n\n    if(nDigitsStored < nDigits) {\n      // adjust to match digits not stored\n      nDigits = nDigits - 1;\n    } else {\n      // adjust to round\n      lastDigit = lastDigit - 1;\n    }\n\n    if(exponent < EXPONENT_MAX) {\n      exponent = exponent + 1;\n    } else {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if(digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))\n      }\n    }\n  }\n\n  // Round\n  // We've normalized the exponent, but might still need to round.\n  if((lastDigit - firstDigit + 1 < significantDigits) && string[significantDigits] != '0') {\n    var endOfString = nDigitsRead;\n\n    // If we have seen a radix point, 'string' is 1 longer than we have\n    // documented with ndigits_read, so inc the position of the first nonzero\n    // digit and the position that digits are read to.\n    if(sawRadix && exponent == EXPONENT_MIN) {\n      firstNonZero = firstNonZero + 1;\n      endOfString = endOfString + 1;\n    }\n\n    var roundDigit = parseInt(string[firstNonZero + lastDigit + 1], 10);\n    var roundBit = 0;\n\n    if(roundDigit >= 5) {\n      roundBit = 1;\n\n      if(roundDigit == 5) {\n        roundBit = digits[lastDigit] % 2 == 1;\n\n        for(var i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n          if(parseInt(string[i], 10)) {\n            roundBit = 1;\n            break;\n          }\n        }\n      }\n    }\n\n    if(roundBit) {\n      var dIdx = lastDigit;\n\n      for(; dIdx >= 0; dIdx--) {\n        if(++digits[dIdx] > 9) {\n          digits[dIdx] = 0;\n\n          // overflowed most significant digit\n          if(dIdx == 0) {\n            if(exponent < EXPONENT_MAX) {\n              exponent = exponent + 1;\n              digits[dIdx] = 1;\n            } else {\n              return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))\n            }\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n  // Encode significand\n  // The high 17 digits of the significand\n  significandHigh = Long.fromNumber(0);\n  // The low 17 digits of the significand\n  significandLow = Long.fromNumber(0);\n\n  // read a zero\n  if(significantDigits == 0) {\n    significandHigh = Long.fromNumber(0);\n    significandLow = Long.fromNumber(0);\n  } else if(lastDigit - firstDigit < 17) {\n    var dIdx = firstDigit;\n    significandLow = Long.fromNumber(digits[dIdx++]);\n    significandHigh = new Long(0, 0);\n\n    for(; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  } else {\n    var dIdx = firstDigit;\n    significandHigh = Long.fromNumber(digits[dIdx++]);\n\n    for(; dIdx <= lastDigit - 17; dIdx++) {\n      significandHigh = significandHigh.multiply(Long.fromNumber(10));\n      significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n    }\n\n    significandLow = Long.fromNumber(digits[dIdx++]);\n\n    for(; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  }\n\n  var significand = multiply64x2(significandHigh, Long.fromString(\"100000000000000000\"));\n\n  significand.low = significand.low.add(significandLow);\n\n  if(lessThan(significand.low, significandLow)) {\n    significand.high = significand.high.add(Long.fromNumber(1));\n  }\n\n  // Biased exponent\n  var biasedExponent = (exponent + EXPONENT_BIAS);\n  var dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n\n  // Encode combination, exponent, and significand.\n  if(significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber)) {\n    // Encode '11' into bits 1 to 3\n    dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47)));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n  } else {\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n  }\n\n  dec.low = significand.low;\n\n  // Encode sign\n  if(isNegative) {\n    dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n  }\n\n  // Encode into a buffer\n  var buffer = new Buffer(16);\n  var index = 0;\n\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.low.low_ & 0xff;\n  buffer[index++] = (dec.low.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.low.high_ & 0xff;\n  buffer[index++] = (dec.low.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 24) & 0xff;\n\n  // Encode the high 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.high.low_ & 0xff;\n  buffer[index++] = (dec.high.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.high.high_ & 0xff;\n  buffer[index++] = (dec.high.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 24) & 0xff;\n\n  // Return the new Decimal128\n  return new Decimal128(buffer);\n}\n\nDecimal128.prototype.toString = function() {\n  // Note: bits in this routine are referred to starting at 0,\n  // from the sign bit, towards the coefficient.\n\n  // bits 0 - 31\n  var high;\n  // bits 32 - 63\n  var midh;\n  // bits 64 - 95\n  var midl;\n  // bits 96 - 127\n  var low;\n  // bits 1 - 5\n  var combination;\n  // decoded biased exponent (14 bits)\n  var biased_exponent;\n  // the number of significand digits\n  var significand_digits = 0;\n  // the base-10 digits in the significand\n  var significand = new Array(36);\n  for(var i = 0; i < significand.length; i++) significand[i] = 0;\n  // read pointer into significand\n  var index = 0;\n\n  // unbiased exponent\n  var exponent;\n  // the exponent if scientific notation is used\n  var scientific_exponent;\n\n  // true if the number is zero\n  var is_zero = false;\n\n  // the most signifcant significand bits (50-46)\n  var significand_msb;\n  // temporary storage for significand decoding\n  var significand128 = {parts: new Array(4)};\n  // indexing variables\n  var i;\n  var j, k;\n\n  // Output string\n  var string = [];\n\n  // Unpack index\n  var index = 0;\n\n  // Buffer reference\n  var buffer = this.bytes;\n\n  // Unpack the low 64bits into a long\n  low = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n  midl = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Unpack the high 64bits into a long\n  midh = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n  high = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Unpack index\n  var index = 0;\n\n  // Create the state of the decimal\n  var dec = {\n    low: new Long(low, midl),\n    high: new Long(midh, high) };\n\n  if(dec.high.lessThan(Long.ZERO)) {\n    string.push('-');\n  }\n\n  // Decode combination field and exponent\n  combination = (high >> 26) & COMBINATION_MASK;\n\n  if((combination >> 3) == 3) {\n    // Check for 'special' values\n    if(combination == COMBINATION_INFINITY) {\n      return string.join('') + \"Infinity\";\n    } else if(combination == COMBINATION_NAN) {\n      return \"NaN\";\n    } else {\n      biased_exponent = (high >> 15) & EXPONENT_MASK;\n      significand_msb = 0x08 + ((high >> 14) & 0x01);\n    }\n  } else {\n    significand_msb = (high >> 14) & 0x07;\n    biased_exponent = (high >> 17) & EXPONENT_MASK;\n  }\n\n  exponent = biased_exponent - EXPONENT_BIAS;\n\n  // Create string of significand digits\n\n  // Convert the 114-bit binary number represented by\n  // (significand_high, significand_low) to at most 34 decimal\n  // digits through modulo and division.\n  significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n  significand128.parts[1] = midh;\n  significand128.parts[2] = midl;\n  significand128.parts[3] = low;\n\n  if(significand128.parts[0] == 0 && significand128.parts[1] == 0\n    && significand128.parts[2] == 0 && significand128.parts[3] == 0) {\n      is_zero = true;\n  } else {\n    for(var k = 3; k >= 0; k--) {\n      var least_digits = 0;\n      // Peform the divide\n      var result = divideu128(significand128);\n      significand128 = result.quotient;\n      least_digits = result.rem.low_;\n\n      // We now have the 9 least significant digits (in base 2).\n      // Convert and output to string.\n      if(!least_digits) continue;\n\n      for(var j = 8; j >= 0; j--) {\n        // significand[k * 9 + j] = Math.round(least_digits % 10);\n        significand[k * 9 + j] = least_digits % 10;\n        // least_digits = Math.round(least_digits / 10);\n        least_digits = Math.floor(least_digits / 10);\n      }\n    }\n  }\n\n  // Output format options:\n  // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n  // Regular    - ddd.ddd\n\n  if(is_zero) {\n    significand_digits = 1;\n    significand[index] = 0;\n  } else {\n    significand_digits = 36;\n    var i = 0;\n\n    while(!significand[index]) {\n      i++;\n      significand_digits = significand_digits - 1;\n      index = index + 1;\n    }\n  }\n\n  scientific_exponent = significand_digits - 1 + exponent;\n\n  // The scientific exponent checks are dictated by the string conversion\n  // specification and are somewhat arbitrary cutoffs.\n  //\n  // We must check exponent > 0, because if this is the case, the number\n  // has trailing zeros.  However, we *cannot* output these trailing zeros,\n  // because doing so would change the precision of the value, and would\n  // change stored data if the string converted number is round tripped.\n\n  if(scientific_exponent >= 34 || scientific_exponent <= -7 ||\n    exponent > 0) {\n    // Scientific format\n    string.push(significand[index++]);\n    significand_digits = significand_digits - 1;\n\n    if(significand_digits) {\n      string.push('.');\n    }\n\n    for(var i = 0; i < significand_digits; i++) {\n      string.push(significand[index++]);\n    }\n\n    // Exponent\n    string.push('E');\n    if(scientific_exponent > 0) {\n      string.push('+' + scientific_exponent);\n    } else {\n      string.push(scientific_exponent);\n    }\n  } else {\n    // Regular format with no decimal place\n    if(exponent >= 0) {\n      for(var i = 0; i < significand_digits; i++) {\n        string.push(significand[index++]);\n      }\n    } else {\n      var radix_position = significand_digits + exponent;\n\n      // non-zero digits before radix\n      if(radix_position > 0) {\n        for(var i = 0; i < radix_position; i++) {\n          string.push(significand[index++]);\n        }\n      } else {\n        string.push('0');\n      }\n\n      string.push('.');\n      // add leading zeros after radix\n      while(radix_position++ < 0) {\n        string.push('0');\n      }\n\n      for(var i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n        string.push(significand[index++]);\n      }\n    }\n  }\n\n  return string.join('');\n}\n\nDecimal128.prototype.equals = function(value) {\n  if(!value.bytes) return false;\n  return this.bytes.toString('hex') == value.bytes.toString('hex');\n}\n\nDecimal128.prototype.toJSON = function() {\n  return { \"$numberDecimal\": this.toString() };\n}\n\nmodule.exports = Decimal128;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/decimal128.js\n// module id = 23\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nvar Double = function(value) {\n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function() {\n  return this.value;\n}\n\nDouble.prototype.equals = function(value) {\n  if(!value) return false;\n  if(typeof value !== 'number' && value._bsontype != 'Double') return false;\n  if(typeof value === 'number') return this.value === value;\n  return this.value === value.value;\n}\n\nDouble.prototype.toJSON = function() {\n  return { $numberDouble: this.value.toString() };\n}\n\nmodule.exports = Double;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/double.js\n// module id = 24\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function(value) {\n  this._bsontype = 'Int32';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\nInt32.prototype.valueOf = function() {\n  return this.value;\n}\n\nInt32.prototype.equals = function(value) {\n  if(!value) return false;\n  if(typeof value !== 'number' && value._bsontype != 'Int32') return false;\n  if(typeof value === 'number') return this.value === value;\n  return this.value === value.value;\n}\n\nInt32.prototype.toJSON = function() {\n  return { $numberInt: this.value.toString() };\n}\n\nmodule.exports = Int32;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/int_32.js\n// module id = 25\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON MaxKey type.\n *\n * @class\n * @return {MaxKey} A MaxKey instance\n */\nvar MaxKey = function() {\n  this._bsontype = 'MaxKey';\n}\n\nMaxKey.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'MaxKey') return false;\n  return true;\n}\n\nMaxKey.prototype.toJSON = function() {\n  return { $maxKey: 1 };\n}\n\nmodule.exports = MaxKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/max_key.js\n// module id = 26\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON MinKey type.\n *\n * @class\n * @return {MinKey} A MinKey instance\n */\nvar MinKey = function() {\n  this._bsontype = 'MinKey';\n}\n\nMinKey.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'MinKey') return false;\n  return true;\n}\n\nMinKey.prototype.toJSON = function() {\n  return { $minKey: 1 };\n}\n\nmodule.exports = MinKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/min_key.js\n// module id = 27\n// module chunks = 0","\"use strict\";\n\n/**\n * Machine id.\n *\n * Create a random 3-byte value (i.e. unique for this\n * process). Other drivers use a md5 of the machine id here, but\n * that would mean an asyc call to gethostname, so we don't bother.\n * @ignore\n */\nvar MACHINE_ID = parseInt(Math.random() * 0xFFFFFF, 10);\n\n// Regular expression that checks for hex value\nvar checkForHexRegExp = new RegExp(\"^[0-9a-fA-F]{24}$\");\n\n// Precomputed hex table enables speedy hex string conversion\nvar hexTable = [];\nfor (var i = 0; i < 256; i++) {\n  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n\n// Lookup tables\nvar encodeLookup = '0123456789abcdef'.split('')\nvar decodeLookup = []\nvar i = 0\nwhile (i < 10) decodeLookup[0x30 + i] = i++\nwhile (i < 16) decodeLookup[0x61 - 10 + i] = i++\n\nvar convertToHex = function(bytes) {\n  var hexString = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    hexString += hexTable[bytes[i]];\n  }\n\n  return hexString;\n}\n\n/**\n* Create a new ObjectID instance\n*\n* @class\n* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.\n* @property {number} generationTime The generation time of this ObjectId instance\n* @return {ObjectID} instance of ObjectID.\n*/\nvar ObjectID = function(id) {\n  // Duck-typing to support ObjectId from different npm packages\n  if(id instanceof ObjectID) return id;\n  if(!(this instanceof ObjectID)) return new ObjectID(id);\n\n  this._bsontype = 'ObjectID';\n\n  var __id = null;\n  var valid = ObjectID.isValid(id);\n\n  // Throw an error if it's not a valid setup\n  if(!valid && id != null){\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n  } else if(valid && typeof id == 'string' && id.length == 24) {\n    return ObjectID.createFromHexString(id);\n  } else if(id == null || typeof id == 'number') {\n    // convert to 12 byte binary string\n    this.id = this.generate(id);\n  } else if(id != null && id.length === 12) {\n    // assume 12 byte string\n    this.id = id;\n  } else if(id != null && id.toHexString) {\n    // Duck-typing to support ObjectId from different npm packages\n    return id;\n  } else {\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n  }\n\n  if(ObjectID.cacheHexString) this.__id = this.toHexString();\n}\n\n/**\n* Return the ObjectID id as a 24 byte hex string representation\n*\n* @method\n* @return {String} return the 24 byte hex string representation.\n*/\nObjectID.prototype.toHexString = function() {\n  if(ObjectID.cacheHexString && this.__id) return this.__id;\n\n  var hexString = '';\n  if(!this.id || !this.id.length) {\n    throw new Error('invalid ObjectId, ObjectId.id must be either a string or a Uint8Array, but is [' + JSON.stringify(this.id) + ']');\n  }\n\n  if(this.id instanceof Uint8Array) {\n    hexString = convertToHex(this.id);\n    if(ObjectID.cacheHexString) this.__id = hexString;\n    return hexString;\n  }\n\n  for (var i = 0; i < this.id.length; i++) {\n    hexString += hexTable[this.id.charCodeAt(i)];\n  }\n\n  if(ObjectID.cacheHexString) this.__id = hexString;\n  return hexString;\n}\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.getInc = function() {\n  return ObjectID.index = (ObjectID.index + 1) % 0xFFFFFF;\n}\n\n/**\n* Generate a 12 byte id buffer used in ObjectID's\n*\n* @method\n* @param {number} [time] optional parameter allowing to pass in a second based timestamp.\n* @return {Buffer} return the 12 byte id buffer string.\n*/\nObjectID.prototype.generate = function(time) {\n  if ('number' != typeof time) {\n    time = ~~(Date.now()/1000);\n  }\n\n  // Use pid\n  var pid = (typeof process === 'undefined' ? Math.floor(Math.random() * 100000) : process.pid) % 0xFFFF;\n  var inc = this.getInc();\n  // Buffer used\n  var buffer = new Uint8Array(12);\n  // Encode time\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Encode machine\n  buffer[6] = MACHINE_ID & 0xff;\n  buffer[5] = (MACHINE_ID >> 8) & 0xff;\n  buffer[4] = (MACHINE_ID >> 16) & 0xff;\n  // Encode pid\n  buffer[8] = pid & 0xff;\n  buffer[7] = (pid >> 8) & 0xff;\n  // Encode index\n  buffer[11] = inc & 0xff;\n  buffer[10] = (inc >> 8) & 0xff;\n  buffer[9] = (inc >> 16) & 0xff;\n  // Return the buffer\n  return buffer;\n}\n\n/**\n* Converts the id into a 24 byte hex string for printing\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toString = function() {\n  return this.toHexString();\n}\n\n/**\n* Converts to its JSON representation.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toJSON = function() {\n  return { $oid: this.toHexString() };\n}\n\n/**\n* Compares the equality of this ObjectID with `otherID`.\n*\n* @method\n* @param {Object} otherID ObjectID instance to compare against.\n* @return {Boolean} the result of comparing two ObjectID's\n*/\nObjectID.prototype.equals = function(otherId) {\n  var id;\n\n  if(otherId instanceof ObjectID) {\n    return this.toString() == otherId.toString();\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12 && this.id instanceof Uint8Array) {\n    return otherId === this.id.toString('binary');\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 24) {\n    return otherId === this.toHexString();\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12) {\n    return otherId === this.id;\n  } else if(otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {\n    return otherId.toHexString() === this.toHexString();\n  } else {\n    return false;\n  }\n}\n\n/**\n* Returns the generation date (accurate up to the second) that this ID was generated.\n*\n* @method\n* @return {date} the generation date\n*/\nObjectID.prototype.getTimestamp = function() {\n  var timestamp = new Date();\n  var time = this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n  timestamp.setTime(Math.floor(time) * 1000);\n  return timestamp;\n}\n\n/**\n* Creates an ObjectID from a hex string representation of an ObjectID.\n*\n* @method\n* @param {String} hexString create a ObjectID from a passed in 24 byte hexstring.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromHexString = function(string) {\n  // Throw an error if it's not a valid setup\n  if(typeof string === 'undefined' || string != null && string.length != 24)\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n\n  var length = string.length;\n\n  if(length > 12*2) {\n    throw new Error('Id cannot be longer than 12 bytes');\n  }\n\n  // Calculate lengths\n  var sizeof = length >> 1;\n  var array = new Uint8Array(sizeof);\n  var n = 0;\n  var i = 0;\n\n  while (i < length) {\n    array[n++] = decodeLookup[string.charCodeAt(i++)] << 4 | decodeLookup[string.charCodeAt(i++)]\n  }\n\n  return new ObjectID(array);\n}\n\n/**\n* Checks if a value is a valid bson ObjectId\n*\n* @method\n* @return {Boolean} return true if the value is a valid bson ObjectId, return false otherwise.\n*/\nObjectID.isValid = function(id) {\n  if(id == null) return false;\n\n  if(typeof id == 'number') {\n    return true;\n  }\n\n  if(typeof id == 'string') {\n    return id.length == 12 || (id.length == 24 && checkForHexRegExp.test(id));\n  }\n\n  if(id instanceof ObjectID) {\n    return true;\n  }\n\n  if(id instanceof Uint8Array) {\n    return true;\n  }\n\n  // Duck-Typing detection of ObjectId like objects\n  if(id.toHexString) {\n    return id.id.length == 12 || (id.id.length == 24 && checkForHexRegExp.test(id.id));\n  }\n\n  return false;\n}\n\n/**\n* @ignore\n*/\nObjectID.createPk = function() {\n  return new ObjectID();\n}\n\n/**\n* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\n*\n* @method\n* @param {number} time an integer number representing a number of seconds.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromTime = function(time) {\n  var buffer = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  // Encode time into first 4 bytes\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Return the new objectId\n  return new ObjectID(buffer);\n}\n\n/**\n* @ignore\n*/\nObject.defineProperty(ObjectID.prototype, \"generationTime\", {\n   enumerable: true\n , get: function () {\n     return this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n   }\n , set: function (value) {\n     // Encode time into first 4 bytes\n     this.id[3] = value & 0xff;\n     this.id[2] = (value >> 8) & 0xff;\n     this.id[1] = (value >> 16) & 0xff;\n     this.id[0] = (value >> 24) & 0xff;\n   }\n});\n\n/**\n* @ignore\n*/\nObjectID.index = ~~(Math.random() * 0xFFFFFF);\n\nmodule.exports = ObjectID;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/objectid.js\n// module id = 28\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON RegExp type.\n *\n * @class\n * @return {BSONRegExp} A MinKey instance\n */\nvar BSONRegExp = function(pattern, options) {\n  // Execute\n  this._bsontype = 'BSONRegExp';\n  this.pattern = pattern;\n  this.options = options || '';\n  // Perform validation of parameters\n  if(typeof this.pattern != 'string') throw Error('pattern must be a string');\n  if(typeof this.options != 'string') throw Error('options must be a string');\n\n  // Validate options\n  for(var i = 0; i < options.length; i++) {\n    if(!(this.options[i] == 'i'\n      || this.options[i] == 'm'\n      || this.options[i] == 'x'\n      || this.options[i] == 'l'\n      || this.options[i] == 's'\n      || this.options[i] == 'u'\n    )) {\n      throw new Error('the regular expression options [' + this.options[i] + \"] is not supported\");\n    }\n  }\n}\n\nBSONRegExp.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'BSONRegExp') return false;\n  return this.pattern == value.pattern && this.options == value.options;\n}\n\nBSONRegExp.prototype.toJSON = function() {\n  return { $regex: this.pattern, $options: this.options };\n}\n\nmodule.exports = BSONRegExp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/regexp.js\n// module id = 29\n// module chunks = 0","\"use strict\";\n\n/**\n * A class representation of the BSON Symbol type.\n *\n * @class\n * @deprecated\n * @param {String} value the string representing the symbol.\n * @return {Symbol}\n */\nvar Symbol = function(value) {\n  this._bsontype = 'Symbol';\n  this.value = value;\n}\n\n/**\n * Access the wrapped string value.\n *\n * @method\n * @return {String} returns the wrapped string.\n */\nSymbol.prototype.valueOf = function() {\n  return this.value;\n};\n\nSymbol.prototype.equals = function(value) {\n  if(!value || !value.value) return false;\n  if(value._bsontype != 'Symbol') return false;\n  return this.value === value.value;\n}\n\n/**\n * @ignore\n */\nSymbol.prototype.toJSON = function() {\n  return { $symbol: this.value };\n}\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/symbol.js\n// module id = 30\n// module chunks = 0","\"use strict\";\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Timestamp.\n * @param {number} high the high (signed) 32 bits of the Timestamp.\n * @return {Timestamp}\n */\nvar Timestamp = function(low, high) {\n  this._bsontype = 'Timestamp';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0;  // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0;  // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nTimestamp.prototype.toInt = function() {\n  return this.low_;\n}\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nTimestamp.prototype.toNumber = function() {\n  return this.high_ * Timestamp.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n}\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {String} the JSON representation.\n */\nTimestamp.prototype.toJSON = function() {\n  return {\n    $timestamp: this.toString(),\n  };\n}\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {String} the textual representation of this value.\n */\nTimestamp.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Timestamp.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nTimestamp.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nTimestamp.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nTimestamp.prototype.getLowBitsUnsigned = function() {\n  return (this.low_ >= 0) ?\n      this.low_ : Timestamp.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Timestamp.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Timestamp.\n */\nTimestamp.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ != 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) != 0) {\n        break;\n      }\n    }\n    return this.high_ != 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {Boolean} whether this value is zero.\n */\nTimestamp.prototype.isZero = function() {\n  return this.high_ == 0 && this.low_ == 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {Boolean} whether this value is negative.\n */\nTimestamp.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {Boolean} whether this value is odd.\n */\nTimestamp.prototype.isOdd = function() {\n  return (this.low_ & 1) == 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long equals the other\n */\nTimestamp.prototype.equals = function(other) {\n  return (this.high_ == other.high_) && (this.low_ == other.low_);\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long does not equal the other.\n */\nTimestamp.prototype.notEquals = function(other) {\n  return (this.high_ != other.high_) || (this.low_ != other.low_);\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is less than the other.\n */\nTimestamp.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is less than or equal to the other.\n */\nTimestamp.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is greater than the other.\n */\nTimestamp.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is greater than or equal to the other.\n */\nTimestamp.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nTimestamp.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Timestamp} the negation of this value.\n */\nTimestamp.prototype.negate = function() {\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.MIN_VALUE;\n  } else {\n    return this.not().add(Timestamp.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to add to this one.\n * @return {Timestamp} the sum of this and the given Timestamp.\n */\nTimestamp.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to subtract from this.\n * @return {Timestamp} the difference of this and the given Timestamp.\n */\nTimestamp.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to multiply with this.\n * @return {Timestamp} the product of this and the other.\n */\nTimestamp.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Timestamp.ZERO;\n  } else if (other.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return other.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return this.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Timestamp.TWO_PWR_24_) &&\n      other.lessThan(Timestamp.TWO_PWR_24_)) {\n    return Timestamp.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Timestamp} other Long by which to divide.\n * @return {Timestamp} this Long divided by the given one.\n */\nTimestamp.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    if (other.equals(Timestamp.ONE) ||\n        other.equals(Timestamp.NEG_ONE)) {\n      return Timestamp.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Timestamp.MIN_VALUE)) {\n      return Timestamp.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Timestamp.ZERO)) {\n        return other.isNegative() ? Timestamp.ONE : Timestamp.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate().div(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Timestamp.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Timestamp.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Timestamp.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Timestamp.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Timestamp} other Long by which to mod.\n * @return {Timestamp} this Long modulo the given one.\n */\nTimestamp.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Timestamp} the bitwise-NOT of this value.\n */\nTimestamp.prototype.not = function() {\n  return Timestamp.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to AND.\n * @return {Timestamp} the bitwise-AND of this and the other.\n */\nTimestamp.prototype.and = function(other) {\n  return Timestamp.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to OR.\n * @return {Timestamp} the bitwise-OR of this and the other.\n */\nTimestamp.prototype.or = function(other) {\n  return Timestamp.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to XOR.\n * @return {Timestamp} the bitwise-XOR of this and the other.\n */\nTimestamp.prototype.xor = function(other) {\n  return Timestamp.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the left by the given amount.\n */\nTimestamp.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Timestamp.fromBits(\n                 low << numBits,\n                 (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Timestamp.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount.\n */\nTimestamp.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >> numBits);\n    } else {\n      return Timestamp.fromBits(\n                 high >> (numBits - 32),\n                 high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nTimestamp.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >>> numBits);\n    } else if (numBits == 32) {\n      return Timestamp.fromBits(high, 0);\n    } else {\n      return Timestamp.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Timestamp.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Timestamp(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Timestamp.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Timestamp.ZERO;\n  } else if (value <= -Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MIN_VALUE;\n  } else if (value + 1 >= Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MAX_VALUE;\n  } else if (value < 0) {\n    return Timestamp.fromNumber(-value).negate();\n  } else {\n    return new Timestamp(\n               (value % Timestamp.TWO_PWR_32_DBL_) | 0,\n               (value / Timestamp.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromBits = function(lowBits, highBits) {\n  return new Timestamp(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {String} str the textual representation of the Timestamp.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Timestamp.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));\n\n  var result = Timestamp.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Timestamp.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Timestamp.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Timestamp.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nTimestamp.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Timestamp} */\nTimestamp.ZERO = Timestamp.fromInt(0);\n\n/** @type {Timestamp} */\nTimestamp.ONE = Timestamp.fromInt(1);\n\n/** @type {Timestamp} */\nTimestamp.NEG_ONE = Timestamp.fromInt(-1);\n\n/** @type {Timestamp} */\nTimestamp.MAX_VALUE =\n    Timestamp.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\n/** @type {Timestamp} */\nTimestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Timestamp}\n * @ignore\n */\nTimestamp.TWO_PWR_24_ = Timestamp.fromInt(1 << 24);\n\nmodule.exports = Timestamp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/bson/timestamp.js\n// module id = 31\n// module chunks = 0","\"use strict\";\n\nvar bsonModule = require('./bson')\nvar atob = require('./bson/shared').atob;\nvar bufferConstructor = null;\n\nif (typeof Buffer !== 'undefined') {\n  bufferConstructor = new Buffer(1) instanceof Uint8Array\n    ? Buffer\n    : Uint8Array;\n} else {\n  bufferConstructor = Uint8Array;\n}\n\nvar ExtJSON = function(module) {\n  if (module) {\n    for (var i = 0; i < BSONTypes.length; i++) {\n      if (!module[BSONTypes[i]]) throw new Error('passed in module does not contain all BSON types required');\n    }\n\n    this.bson = module;\n  } else {\n    this.bson = bsonModule;\n  }\n}\n\nExtJSON.extend = function(module) {\n  if (!module) throw new Error(\"expecting mongodb module, invoke by calling ExtJSON.extend(require('mongodb'))\")\n  // Rewrite passed in types\n  for (var i = 0; i < BSONTypes.length; i++) {\n    if (module[BSONTypes[i]]) {\n      // Add the toJSON to the passed in types\n      // This lets us modify the toJSON method withou breaking\n      // backward compatibility\n      module[BSONTypes[i]].prototype.toJSON = bsonModule[BSONTypes[i]].prototype.toJSON;\n    }\n  }\n\n  return module;\n}\n\nfunction deseralizeValue(self, value, options) {\n  if(value['$oid'] != null) {\n    return new self.bson.ObjectID(value['$oid']);\n  } else if(value['$date'] && typeof value['$date'] == 'string') {\n    return Date.parse(value['$date']);\n  } else if(value['$date'] && value['$date'] instanceof self.bson.Long) {\n    var date = new Date();\n    date.setTime(value['$date'].toNumber());\n    return date;\n  } else if(value['$binary'] != null) {\n    if (typeof Buffer !== 'undefined') {\n      if (bufferConstructor === Buffer) {\n        var data = new Buffer(value['$binary'], 'base64');\n        var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n        return new self.bson.Binary(data, type);\n      }\n    }\n\n    var data = new Uint8Array(atob(value['$binary'])\n      .split(\"\")\n      .map(function(c) {\n        return c.charCodeAt(0);\n      }));\n\n    var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n    return new self.bson.Binary(data, type);\n  } else if(value['$maxKey'] != null) {\n    return new self.bson.MaxKey();\n  } else if(value['$minKey'] != null) {\n    return new self.bson.MinKey();\n  } else if(value['$code'] != null) {\n    return new self.bson.Code(value['$code'], deseralizeValue(self, value['$scope'] || {}, options))\n  } else if(value['$numberLong'] != null) {\n    return self.bson.Long.fromString(value['$numberLong']);\n  } else if(value['$numberDouble'] != null && options.strict) {\n    return new self.bson.Double(parseFloat(value['$numberDouble']));\n  } else if(value['$numberDouble'] != null && !options.strict) {\n    return parseFloat(value['$numberDouble']);\n  } else if(value['$numberInt'] != null && options.strict) {\n    return new self.bson.Int32(parseInt(value['$numberInt'], 10));\n  } else if(value['$numberInt'] != null && !options.strict) {\n    return parseInt(value['$numberInt'], 10);\n  } else if(value['$numberDecimal'] != null) {\n    return self.bson.Decimal128.fromString(value['$numberDecimal']);\n  } else if(value['$regex'] != null) {\n    return new self.bson.BSONRegExp(value['$regex'], value['$options'] || '');\n  } else if(value['$symbol'] != null) {\n    return new self.bson.Symbol(value['$symbol']);\n  } else if(value['$ref'] != null) {\n    return new self.bson.DBRef(value['$ref'], deseralizeValue(self, value['$id'], options), value['$db']);\n  } else if(value['$timestamp'] != null) {\n    return self.bson.Timestamp.fromString(value['$timestamp']);\n  } else if(typeof value == 'number' && options.strict) {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return new self.bson.Int32(value);\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return new self.bson.Double(value);\n      } else {\n        return new self.bson.Long.fromNumber(value);\n      }\n    } else {\n      return new self.bson.Double(value);\n    }\n  } else if(typeof value == 'number' && !options.strict) {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return value;\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return value;\n      } else {\n        return new self.bson.Long.fromNumber(value);\n      }\n    } else {\n      return value;\n    }\n  } else {\n    return value;\n  }\n}\n\nExtJSON.prototype.parse = function(text, options) {\n  var self = this;\n  options = options || { strict: true };\n\n  try {\n    return JSON.parse(text, function(key, value) {\n      return deseralizeValue(self, value, options);\n    });\n  } catch(err) {\n    if (err.name === 'SyntaxError') {\n      var error = new Error(err.message);\n      error.stack = err.stack\n      throw error;\n    }\n  }\n}\n\n//\n// Serializer\n//\n\n// MAX INT32 boundaries\nvar BSON_INT32_MAX = 0x7FFFFFFF;\nvar BSON_INT32_MIN = -0x80000000;\n\n// JS MAX PRECISE VALUES\nvar JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.\n\nExtJSON.prototype.stringify = function(value, reducer, indents) {\n  var doc = null;\n\n  if(Array.isArray(value)) {\n    doc = serializeArray(value);\n  } else {\n    doc = serializeDocument(value);\n  }\n\n  return JSON.stringify(doc, reducer, indents);\n}\n\nfunction serializeArray(array) {\n  var _array = new Array(array.length);\n\n  for(var i = 0; i < array.length; i++) {\n    _array[i] = serializeValue(array[i]);\n  }\n\n  return _array;\n}\n\nfunction serializeValue(value) {\n  if(value instanceof Date) {\n    return { $date: { $numberLong: value.getTime().toString() } };\n  } else if(typeof value == 'number') {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return { $numberInt: value.toString() };\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return { $numberDouble: value.toString() };\n      } else {\n        return { $numberLong: value.toString() };\n      }\n    } else {\n      return { $numberDouble: value.toString() };\n    }\n  } else if(Array.isArray(value)) {\n    return serializeArray(value);\n  } else if(value != null && typeof value == 'object') {\n    return serializeDocument(value);\n  }\n\n  return value;\n}\n\nvar BSONTypes = ['Binary', 'Code', 'DBRef', 'Decimal128', 'Double',\n  'Int32', 'Long', 'MaxKey', 'MinKey', 'ObjectID', 'BSONRegExp', 'Symbol', 'Timestamp'];\n\nfunction serializeDocument(doc) {\n  if(doc == null || typeof doc !== 'object') throw new Error('not an object instance');\n  var _doc = {};\n\n  for(var name in doc) {\n    if(Array.isArray(doc[name])) {\n      _doc[name] = serializeArray(doc[name]);\n    } else if(doc[name] != null && doc[name]._bsontype && BSONTypes.indexOf(doc[name]._bsontype) != -1) {\n      _doc[name] = doc[name];\n    } else if(doc[name] instanceof Date) {\n      _doc[name] = serializeValue(doc[name]);\n    } else if(doc[name] != null && typeof doc[name] === 'object') {\n      _doc[name] = serializeDocument(doc[name]);\n    } else {\n      _doc[name] = serializeValue(doc[name]);\n    }\n  }\n\n  return _doc;\n}\n\n// Export the Extended BSON\nmodule.exports = ExtJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mongodb-extjson/lib/ext_json.js\n// module id = 32\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 33\n// module chunks = 0","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/text-encoding-utf-8/lib/encoding.cjs.js\n// module id = 34\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 35\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 36\n// module chunks = 0"],"sourceRoot":""}