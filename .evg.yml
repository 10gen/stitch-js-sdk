functions:
  "fetch_go111":
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          wget --quiet ${go_url}
          tar xvf ./go1.11*gz
  "fetch_source":
    - command: git.get_project
      params:
        directory: "stitch-js-sdk"

  "setup_mongod":
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -v
          curl --silent ${mongodb_url} | tar xvz
    - command: shell.exec
      params:
        shell: "bash"
        background: true
        script: |
          set -v
          cd mongodb-*
          echo "starting mongod..."
          mkdir db_files
          ./bin/mongod --dbpath ./db_files --port 26000 --replSet "test" &
          echo "waiting for mongod to start up"
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          cd mongodb-*
          ./bin/mongo --nodb --eval 'assert.soon(function(x){try{var d = new Mongo("localhost:26000"); return true}catch(e){return false}}, "timed out connecting")'
          ./bin/mongo --port 26000 --eval 'rs.initiate()'
          echo "mongod is up."

  "setup_stitch":
    - command: shell.exec
      params:
        shell: "bash"
        silent: true
        script: |
          set -e
          echo export TEST_STITCH_AWS_ACCESS_KEY_ID=${test_aws_key} >> creds
          echo export TEST_STITCH_AWS_SECRET_ACCESS_KEY=${test_aws_secret} >> creds
          echo export TEST_STITCH_TWILIO_SID=${test_twilio_sid} >> creds
          echo export TEST_STITCH_TWILIO_AUTH_TOKEN=${test_twilio_authtoken} >> creds
          echo export FB_APP_ID=${test_facebook_app_id} >> creds
          echo export FB_APP_SECRET=${test_facebook_app_secret} >> creds
          echo export COVERALLS_REPO_TOKEN=${coveralls_repo_token} >> creds

    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          echo "cloning stitch"
          mkdir -p src/github.com/10gen
          git clone git@github.com:10gen/stitch src/github.com/10gen/stitch

          echo "downloading libmongo"
          wget --quiet "https://s3.amazonaws.com/stitch-artifacts/stitch-mongo-libs/stitch_mongo_libs_linux_64_patch_a4c34cbf6cdd2036fef442f966e404c8be506e62_5bb3da540305b91647c0dfd9_18_10_02_20_51_32/libmongo.so"
          chmod +x libmongo.so

          echo "downloading stitch dylib"
          mkdir -p src/github.com/10gen/stitch/etc/dylib
          cd src/github.com/10gen/stitch/etc/dylib
          curl -s "${server_stitch_lib_url}" | tar xvfz - --strip-components=1
          cd -


          echo "building transpiler"
          cd src/github.com/10gen/stitch/etc/transpiler
          curl -OL https://yarnpkg.com/latest.tar.gz
          tar zvxf latest.tar.gz
          mv yarn-* yarn
          export PATH="`pwd`/yarn/bin:$PATH"
          yarn install && yarn run build -t ${transpiler_target}
    - command: shell.exec
      params:
        shell: "bash"
        background: true
        script: |
          export GOPATH=`pwd`
          export PATH=`pwd`:$PATH
          export STITCH_PATH=$GOPATH/src/github.com/10gen/stitch
          export PATH="$PATH:$STITCH_PATH/etc/transpiler/bin"
          export LD_LIBRARY_PATH="$STITCH_PATH/etc/dylib/lib"
          which transpiler
          echo "running stitch"
          export GOROOT=`pwd`/go
          export PATH=`pwd`/go/bin:$PATH
          go run $STITCH_PATH/cmd/auth/user.go addUser -domainID 000000000000000000000000 -mongoURI mongodb://localhost:26000 -salt 'DQOWene1723baqD!_@#' -id "unique_user@domain.com" -password "password"
          go run $STITCH_PATH/cmd/server/main.go --configFile $STITCH_PATH/etc/configs/test_config.json
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          counter=0
          until $(curl --output /dev/null --silent --head --fail http://localhost:9090); do
            echo "checking for API server to be up..."
            sleep 1
            let counter++
            if [ $counter -gt 100 ]; then
              exit 1
            fi
          done

post:
  - command: attach.xunit_results
    params:
      files:
        - "./stitch-js-sdk/core/sdk/build/test-results/*.xml"
        - "./stitch-js-sdk/core/services/mongodb-remote/build/test-results/*.xml"
        - "./stitch-js-sdk/core/services/aws-s3/build/test-results/*.xml"
        - "./stitch-js-sdk/core/services/aws-ses/build/test-results/*.xml"
        - "./stitch-js-sdk/core/services/http/build/test-results/*.xml"
        - "./stitch-js-sdk/core/services/twilio/build/test-results/*.xml"
        - "./stitch-js-sdk/packages/browser/coretest/build/test-results/*.xml"
        - "./stitch-js-sdk/packages/browser/services/mongodb-remote/build/test-results/*.xml"
        - "./stitch-js-sdk/packages/browser/services/aws-s3/build/test-results/*.xml"
        - "./stitch-js-sdk/packages/browser/services/aws-ses/build/test-results/*.xml"
        - "./stitch-js-sdk/packages/browser/services/http/build/test-results/*.xml"
        - "./stitch-js-sdk/packages/browser/services/twilio/build/test-results/*.xml"
        - "./stitch-js-sdk/packages/server/coretest/build/test-results/*.xml"
        - "./stitch-js-sdk/packages/server/services/mongodb-remote/build/test-results/*.xml"
        - "./stitch-js-sdk/packages/server/services/aws-s3/build/test-results/*.xml"
        - "./stitch-js-sdk/packages/server/services/aws-ses/build/test-results/*.xml"
        - "./stitch-js-sdk/packages/server/services/http/build/test-results/*.xml"
        - "./stitch-js-sdk/packages/server/services/twilio/build/test-results/*.xml"

tasks:
  - name: run_tests
    commands:
      - func: "fetch_go111"
      - func: "fetch_source"
      - func: "setup_mongod"
      - func: "setup_stitch"
      - command: shell.exec
        params: 
          shell: "bash"
          script: |
            set -e
            echo "running client tests"
            source ./creds
            cd stitch-js-sdk
            npm install lerna
            npm install
            ./node_modules/.bin/lerna bootstrap --hoist
            ./node_modules/.bin/lerna run test
      - command: shell.exec
        params:
          shell: "bash"
          script: |
            set -e
            source ./creds
            cd stitch-js-sdk
            npm install coveralls
            export COVERALLS_GIT_COMMIT=${revision}
            if [ -z "${github_pr_number}" ]
            then
              if [ "${is_patch}" = "true" ]; then
                exit 0
              fi
            else
              PR_INFO=`curl https://api.github.com/repos/${github_org}/${github_repo}/pulls/${github_pr_number}`
              BRANCH=`echo $PR_INFO | python -c "import sys, json; print json.load(sys.stdin)['head']['ref']"`
              export COVERALLS_GIT_BRANCH=$BRANCH
              export CI_PULL_REQUEST=${github_pr_number}
            fi
            npm run test:coverage

  - name: lint
    commands:
      - func: "fetch_source"
      - command: shell.exec
        params:
          shell: "bash"
          script: |
            set -e
            cd stitch-js-sdk
            echo "linting"
            npm install lerna
            npm install
            ./node_modules/.bin/lerna bootstrap --hoist
            ./node_modules/.bin/lerna run lint
            ./node_modules/.bin/lerna run tslint-check

buildvariants:
- name: rhel70
  display_name: rhel70
  run_on:
    - rhel70
  expansions:
    go_url: "https://dl.google.com/go/go1.11.1.linux-amd64.tar.gz"
    mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.2.tgz
    server_stitch_lib_url: 'https://s3.amazonaws.com/mciuploads/mongodb-mongo-master/stitch-support/rhel70/5ee0b3805e9116bf0f4655d5ee5cd5b108e7a7e4/stitch-support-4.1.7-200-g5ee0b38.tgz'
    transpiler_target: node8-linux
  tasks:
    - name: run_tests
    - name: lint
