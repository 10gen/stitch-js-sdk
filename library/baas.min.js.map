{"version":3,"sources":["webpack:///baas.min.js","webpack:///webpack/bootstrap 649ad8c4df57cef65959?30f6","webpack:///./distribution/client.js?77eb","webpack:///./distribution/auth.js?82ee","webpack:///./distribution/common.js?89c4","webpack:///./~/Base64/base64.js?48d7","webpack:///./~/text-encoding-utf-8/lib/encoding.cjs.js?b925","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js?7723","webpack:///./~/whatwg-fetch/fetch.js?1c20","webpack:///./~/mongodb-extjson/index.js?4a04","webpack:///./~/mongodb-extjson/lib/ext_json.js?6687","webpack:///./~/buffer/index.js?1a55","webpack:///./~/base64-js/index.js?2add","webpack:///./~/ieee754/index.js?70fe","webpack:///./~/isarray/index.js?eabc","webpack:///./~/mongodb-extjson/lib/bson/index.js?0784","webpack:///./~/mongodb-extjson/lib/bson/binary.js?89ff","webpack:///./~/mongodb-extjson/lib/bson/shared.js?f4ee","webpack:///./~/mongodb-extjson/lib/bson/code.js?bdec","webpack:///./~/mongodb-extjson/lib/bson/db_ref.js?1698","webpack:///./~/mongodb-extjson/lib/bson/decimal128.js?af49","webpack:///./~/mongodb-extjson/lib/bson/long.js?36b6","webpack:///./~/mongodb-extjson/lib/bson/double.js?2b2a","webpack:///./~/mongodb-extjson/lib/bson/int_32.js?bfa8","webpack:///./~/mongodb-extjson/lib/bson/max_key.js?a767","webpack:///./~/mongodb-extjson/lib/bson/min_key.js?728c","webpack:///./~/mongodb-extjson/lib/bson/objectid.js?caf1","webpack:///./~/process/browser.js?82e4","webpack:///./~/mongodb-extjson/lib/bson/regexp.js?1470","webpack:///./~/mongodb-extjson/lib/bson/symbol.js?f1b6","webpack:///./~/mongodb-extjson/lib/bson/timestamp.js?23cf"],"names":["Baas","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","default","_interopRequireDefault","_classCallCheck","instance","Constructor","TypeError","_typeof2","Symbol","iterator","constructor","defineProperty","value","Admin","MongoClient","BaasClient","toQueryString","ErrUnauthorized","ErrInvalidSession","ErrAuthProviderNotFound","undefined","_typeof","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","protoProps","staticProps","_auth","_auth2","_common","common","_textEncodingUtf","EJSON","parts","push","encodeURIComponent","join","clientAppID","options","this","baseUrl","DEFAULT_BAAS_SERVER_URL","appUrl","authUrl","authManager","handleRedirect","providerName","redirectUrl","window","location","replace","getOAuthLoginURL","authedId","get","error","_this","_do","refreshOnFailure","useRefreshToken","then","clear","resource","method","_this2","noAuth","auth","Promise","reject","BaasError","url","fetchArgs","makeFetchArgs","body","token","getRefreshToken","headers","queryParams","fetch","response","status","resolve","JSONTYPE","json","_error","_refreshToken","Error","statusText","_this3","isImpersonatingUser","refreshImpersonation","setAccessToken","stages","responseDecoder","d","parse","strict","responseEncoder","stringify","decoder","encoder","arrayBuffer","buffer","buf","TextDecoder","decode","Uint8Array","DB","client","service","name","Collection","db","database","collection","query","args","getBaseArgs","singleDoc","executePipeline","action","project","docs","toInsert","Array","from","arguments","items","update","upsert","multi","makeUpdateStage","baasClient","serviceName","JSON","_this4","root","keys","list","_get","create","_post","apiKey","keyId","remove","_delete","enable","_put","disable","_this5","data","app","appID","users","filter","user","uid","logout","sandbox","userId","user_id","authProviders","provider","authType","authName","values","varName","pipelines","pipeline","logs","apiKeys","services","svc","setConfig","rules","rule","ruleId","incomingWebhooks","incomingWebhook","incomingWebhookId","_this6","startImpersonation","stopImpersonation","Base64","b64Encode","btoa","b64Decode","atob","AuthDataStorage","_data","val","String","Auth","rootUrl","localStorage","authDataStorage","protocol","host","pathname","currAuth","getItem","REFRESH_TOKEN_KEY","set","ourState","STATE_KEY","redirectFragment","hash","substring","redirectState","parseRedirectFragment","lastError","console","history","replaceState","pageRootUrl","found","removeItem","stateValid","ua","state","generateState","setItem","result","encodeURI","checkStatus","username","password","cors","USER_AUTH_KEY","clearImpersonation","rt","item","_id","$oid","IMPERSONATION_ACTIVE_KEY","IMPERSONATION_USER_KEY","catch","e","realUserAuth","IMPERSONATION_REAL_USER_AUTH_KEY","alpha","stateLength","pos","Math","floor","random","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","BAAS_ERROR_KEY","BAAS_LINK_KEY","init","Accept","Content-Type","fragment","vars","split","shouldBreak","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","pair","pairParts","pairKey","decodeURIComponent","theirState","err","return","_Error","message","code","getPrototypeOf","captureStackTrace","stack","InvalidCharacterError","object","chars","input","block","charCode","str","idx","map","output","charAt","charCodeAt","bs","bc","fromCharCode","indexOf","inRange","a","min","max","ToDictionary","o","stringToCodePoints","string","s","n","u","b","codePointsToString","code_points","cp","Stream","tokens","slice","decoderError","fatal","opt_code_point","encoding","toLowerCase","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","end_of_stream","finished","prepend","code_point","UTF8Encoder","count","offset","bytes","temp","endOfStream","read","shift","isArray","unshift","pop","ArrayBuffer","byteOffset","byteLength","input_stream","apply","encode","opt_string","bind","normalizeName","test","normalizeValue","iteratorFor","support","iterable","Headers","forEach","append","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","view","bufferClone","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","isDataView","_bodyArrayBuffer","isArrayBufferView","type","rejected","text","normalizeMethod","upcased","toUpperCase","methods","Request","credentials","mode","referrer","form","trim","parseHeaders","rawHeaders","line","Response","bodyInit","ok","viewClasses","DataView","isView","oldValue","has","callback","thisArg","entries","clone","redirectStatuses","redirect","RangeError","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","ExtJSON","BSON","Buffer","deseralizeValue","bson","ObjectID","Date","Long","date","setTime","toNumber","bufferConstructor","parseInt","Binary","MaxKey","MinKey","Code","fromString","Double","parseFloat","Int32","Decimal128","BSONRegExp","DBRef","Timestamp","JS_INT_MIN","JS_INT_MAX","BSON_INT32_MIN","BSON_INT32_MAX","fromNumber","serializeArray","array","_array","serializeValue","$date","$numberLong","getTime","$numberInt","$numberDouble","serializeDocument","doc","_doc","_bsontype","BSONTypes","bsonModule","extend","toJSON","reducer","indents","global","typedArraySupport","arr","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","arg","encodingOrOffset","allocUnsafe","fromArrayBuffer","fromObject","assertSize","size","alloc","fill","checked","isEncoding","actual","write","fromArrayLike","isBuffer","len","copy","isnan","SlowBuffer","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","j","hexWrite","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","ret","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","byteArray","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","x","y","concat","swap16","swap32","swap64","equals","inspect","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","placeHoldersCount","b64","l","tmp","placeHolders","Arr","L","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","extraBytes","maxChunkLength","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","abs","log","LN2","convert","integer","subType","sub_type","position","BSON_BINARY_SUBTYPE_DEFAULT","BUFFER_SIZE","writeStringToArray","put","byte_value","decoded_byte","asRaw","convertArraytoUtf8BinaryString","binary","$binary","$type","format","startIndex","endIndex","SUBTYPE_DEFAULT","SUBTYPE_FUNCTION","SUBTYPE_BYTE_ARRAY","SUBTYPE_UUID_OLD","SUBTYPE_UUID","SUBTYPE_MD5","SUBTYPE_USER_DEFINED","scope","$code","$scope","namespace","oid","$ref","$id","$db","PARSE_STRING_REGEXP","PARSE_INF_REGEXP","PARSE_NAN_REGEXP","EXPONENT_MAX","EXPONENT_MIN","EXPONENT_BIAS","MAX_DIGITS","NAN_BUFFER","reverse","INF_NEGATIVE_BUFFER","INF_POSITIVE_BUFFER","EXPONENT_REGEX","COMBINATION_MASK","EXPONENT_MASK","COMBINATION_INFINITY","COMBINATION_NAN","isDigit","divideu128","DIVISOR","_rem","quotient","rem","shiftLeft","add","div","low_","modulo","multiply64x2","left","right","high","low","leftHigh","shiftRightUnsigned","leftLow","getLowBits","rightHigh","rightLow","productHigh","multiply","productMid","productMid2","productLow","lessThan","uhleft","high_","uhright","ulleft","ulright","isNegative","sawRadix","foundNonZero","significantDigits","nDigitsRead","nDigits","radixPosition","firstNonZero","digits","nDigitsStored","digitsInsert","firstDigit","lastDigit","exponent","significandHigh","significandLow","biasedExponent","index","stringMatch","infMatch","nanMatch","digitsString","endOfString","roundDigit","roundBit","dIdx","significand","dec","and","or","midh","midl","combination","biased_exponent","significand_digits","scientific_exponent","significand_msb","k","is_zero","significand128","ZERO","least_digits","radix_position","$numberDecimal","toInt","TWO_PWR_32_DBL_","getLowBitsUnsigned","opt_radix","radix","isZero","MIN_VALUE","radixLong","subtract","negate","radixToPower","remDiv","intval","getHighBits","getNumBitsAbs","bit","isOdd","other","notEquals","lessThanOrEqual","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","ONE","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","fromBits","TWO_PWR_24_","NEG_ONE","halfThis","shiftRight","approx","log2","ceil","delta","approxRes","approxRem","xor","numBits","fromInt","cachedObj","INT_CACHE_","TWO_PWR_63_DBL_","MAX_VALUE","lowBits","highBits","power","TWO_PWR_16_DBL_","TWO_PWR_24_DBL_","TWO_PWR_31_DBL_","TWO_PWR_48_DBL_","TWO_PWR_64_DBL_","valueOf","$maxKey","$minKey","process","MACHINE_ID","checkForHexRegExp","RegExp","hexTable","decodeLookup","convertToHex","hexString","valid","isValid","createFromHexString","generate","toHexString","cacheHexString","__id","getInc","time","now","pid","inc","otherId","getTimestamp","timestamp","sizeof","createPk","createFromTime","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask","pattern","$regex","$options","$symbol","$timestamp"],"mappings":"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","file":"baas.min.js","sourcesContent":["var Baas =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Admin = exports.MongoClient = exports.BaasClient = exports.toQueryString = exports.ErrUnauthorized = exports.ErrInvalidSession = exports.ErrAuthProviderNotFound = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\t  return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n\t} : function (obj) {\n\t  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n\t};\n\t\n\tvar _createClass = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n\t    }\n\t  }return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n\t  };\n\t}();\n\t\n\tvar _auth = __webpack_require__(1);\n\t\n\tvar _auth2 = _interopRequireDefault(_auth);\n\t\n\tvar _common = __webpack_require__(2);\n\t\n\tvar common = _interopRequireWildcard(_common);\n\t\n\tvar _textEncodingUtf = __webpack_require__(4);\n\t\n\tfunction _interopRequireWildcard(obj) {\n\t  if (obj && obj.__esModule) {\n\t    return obj;\n\t  } else {\n\t    var newObj = {};if (obj != null) {\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n\t      }\n\t    }newObj.default = obj;return newObj;\n\t  }\n\t}\n\t\n\tfunction _interopRequireDefault(obj) {\n\t  return obj && obj.__esModule ? obj : { default: obj };\n\t}\n\t\n\tfunction _classCallCheck(instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t}\n\t\n\t/* global window, fetch */\n\t/* eslint no-labels: ['error', { 'allowLoop': true }] */\n\t__webpack_require__(5);\n\t\n\tvar ErrAuthProviderNotFound = exports.ErrAuthProviderNotFound = 'AuthProviderNotFound';\n\tvar ErrInvalidSession = exports.ErrInvalidSession = 'InvalidSession';\n\tvar ErrUnauthorized = exports.ErrUnauthorized = 'Unauthorized';\n\t\n\tvar EJSON = __webpack_require__(7);\n\t\n\tvar toQueryString = exports.toQueryString = function toQueryString(obj) {\n\t  var parts = [];\n\t  for (var i in obj) {\n\t    if (obj.hasOwnProperty(i)) {\n\t      parts.push(encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]));\n\t    }\n\t  }\n\t  return parts.join('&');\n\t};\n\t\n\tvar BaasClient = exports.BaasClient = function () {\n\t  function BaasClient(clientAppID, options) {\n\t    _classCallCheck(this, BaasClient);\n\t\n\t    var baseUrl = common.DEFAULT_BAAS_SERVER_URL;\n\t    if (options && options.baseUrl) {\n\t      baseUrl = options.baseUrl;\n\t    }\n\t    this.appUrl = baseUrl + '/admin/v1';\n\t    this.authUrl = baseUrl + '/admin/v1/auth';\n\t    if (clientAppID) {\n\t      this.appUrl = baseUrl + '/v1/app/' + clientAppID;\n\t      this.authUrl = this.appUrl + '/auth';\n\t    }\n\t    this.authManager = new _auth2.default(this.authUrl);\n\t    this.authManager.handleRedirect();\n\t  }\n\t\n\t  _createClass(BaasClient, [{\n\t    key: 'authWithOAuth',\n\t    value: function authWithOAuth(providerName, redirectUrl) {\n\t      window.location.replace(this.authManager.getOAuthLoginURL(providerName, redirectUrl));\n\t    }\n\t  }, {\n\t    key: 'authedId',\n\t    value: function authedId() {\n\t      return this.authManager.authedId();\n\t    }\n\t  }, {\n\t    key: 'auth',\n\t    value: function auth() {\n\t      return this.authManager.get();\n\t    }\n\t  }, {\n\t    key: 'authError',\n\t    value: function authError() {\n\t      return this.authManager.error();\n\t    }\n\t  }, {\n\t    key: 'logout',\n\t    value: function logout() {\n\t      var _this = this;\n\t\n\t      return this._do('/auth', 'DELETE', { refreshOnFailure: false, useRefreshToken: true }).then(function () {\n\t        return _this.authManager.clear();\n\t      });\n\t    }\n\t  }, {\n\t    key: '_do',\n\t    value: function _do(resource, method, options) {\n\t      var _this2 = this;\n\t\n\t      if (!options) {\n\t        options = {};\n\t      }\n\t      if (options.refreshOnFailure === undefined) {\n\t        options.refreshOnFailure = true;\n\t      }\n\t      if (options.useRefreshToken === undefined) {\n\t        options.useRefreshToken = false;\n\t      }\n\t      if (!options.noAuth) {\n\t        if (this.auth() === null) {\n\t          return Promise.reject(new common.BaasError('Must auth first', ErrUnauthorized));\n\t        }\n\t      }\n\t\n\t      var url = '' + this.appUrl + resource;\n\t      var fetchArgs = common.makeFetchArgs(method, options.body);\n\t      if (!options.noAuth) {\n\t        var token = options.useRefreshToken ? this.authManager.getRefreshToken() : this.auth()['accessToken'];\n\t        fetchArgs.headers['Authorization'] = 'Bearer ' + token;\n\t      }\n\t      if (options.queryParams) {\n\t        url = url + '?' + toQueryString(options.queryParams);\n\t      }\n\t\n\t      return fetch(url, fetchArgs).then(function (response) {\n\t        // Okay: passthrough\n\t        if (response.status >= 200 && response.status < 300) {\n\t          return Promise.resolve(response);\n\t        } else if (response.headers.get('Content-Type') === common.JSONTYPE) {\n\t          return response.json().then(function (json) {\n\t            // Only want to try refreshing token when there's an invalid session\n\t            if ('errorCode' in json && json['errorCode'] === ErrInvalidSession) {\n\t              if (!options.refreshOnFailure) {\n\t                _this2.authManager.clear();\n\t                var _error = new common.BaasError(json['error'], json['errorCode']);\n\t                _error.response = response;\n\t                throw _error;\n\t              }\n\t\n\t              return _this2._refreshToken().then(function () {\n\t                options.refreshOnFailure = false;\n\t                return _this2._do(resource, method, options);\n\t              });\n\t            }\n\t\n\t            var error = new common.BaasError(json['error'], json['errorCode']);\n\t            error.response = response;\n\t            return Promise.reject(error);\n\t          });\n\t        }\n\t\n\t        var error = new Error(response.statusText);\n\t        error.response = response;\n\t\n\t        return Promise.reject(error);\n\t      });\n\t    }\n\t  }, {\n\t    key: '_refreshToken',\n\t    value: function _refreshToken() {\n\t      var _this3 = this;\n\t\n\t      if (this.authManager.isImpersonatingUser()) {\n\t        return this.authManager.refreshImpersonation(this);\n\t      }\n\t      return this._do('/auth/newAccessToken', 'POST', { refreshOnFailure: false, useRefreshToken: true }).then(function (response) {\n\t        return response.json().then(function (json) {\n\t          _this3.authManager.setAccessToken(json['accessToken']);\n\t          return Promise.resolve();\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'executePipeline',\n\t    value: function executePipeline(stages, options) {\n\t      var responseDecoder = function responseDecoder(d) {\n\t        return new EJSON().parse(d, { strict: false });\n\t      };\n\t      var responseEncoder = function responseEncoder(d) {\n\t        return new EJSON().stringify(d);\n\t      };\n\t      if (options) {\n\t        if (options.decoder) {\n\t          if (typeof options.decoder !== 'function') {\n\t            throw new Error('decoder option must be a function, but \"' + _typeof(options.decoder) + '\" was provided');\n\t          }\n\t          responseDecoder = options.decoder;\n\t        }\n\t        if (options.encoder) {\n\t          if (typeof options.encoder !== 'function') {\n\t            throw new Error('encoder option must be a function, but \"' + _typeof(options.encoder) + '\" was provided');\n\t          }\n\t          responseEncoder = options.encoder;\n\t        }\n\t      }\n\t      return this._do('/pipeline', 'POST', { body: responseEncoder(stages) }).then(function (response) {\n\t        if (response.arrayBuffer) {\n\t          return response.arrayBuffer();\n\t        }\n\t        return response.buffer();\n\t      }).then(function (buf) {\n\t        return new _textEncodingUtf.TextDecoder('utf-8').decode(new Uint8Array(buf));\n\t      }).then(function (body) {\n\t        return responseDecoder(body);\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return BaasClient;\n\t}();\n\t\n\tvar DB = function () {\n\t  function DB(client, service, name) {\n\t    _classCallCheck(this, DB);\n\t\n\t    this.client = client;\n\t    this.service = service;\n\t    this.name = name;\n\t  }\n\t\n\t  _createClass(DB, [{\n\t    key: 'getCollection',\n\t    value: function getCollection(name) {\n\t      return new Collection(this, name);\n\t    }\n\t  }]);\n\t\n\t  return DB;\n\t}();\n\t\n\tvar Collection = function () {\n\t  function Collection(db, name) {\n\t    _classCallCheck(this, Collection);\n\t\n\t    this.db = db;\n\t    this.name = name;\n\t  }\n\t\n\t  _createClass(Collection, [{\n\t    key: 'getBaseArgs',\n\t    value: function getBaseArgs() {\n\t      return {\n\t        'database': this.db.name,\n\t        'collection': this.name\n\t      };\n\t    }\n\t  }, {\n\t    key: 'deleteOne',\n\t    value: function deleteOne(query) {\n\t      var args = this.getBaseArgs();\n\t      args.query = query;\n\t      args.singleDoc = true;\n\t      return this.db.client.executePipeline([{\n\t        'service': this.db.service,\n\t        'action': 'delete',\n\t        'args': args\n\t      }]);\n\t    }\n\t  }, {\n\t    key: 'deleteMany',\n\t    value: function deleteMany(query) {\n\t      var args = this.getBaseArgs();\n\t      args.query = query;\n\t      args.singleDoc = false;\n\t      return this.db.client.executePipeline([{\n\t        'service': this.db.service,\n\t        'action': 'delete',\n\t        'args': args\n\t      }]);\n\t    }\n\t  }, {\n\t    key: 'find',\n\t    value: function find(query, project) {\n\t      var args = this.getBaseArgs();\n\t      args.query = query;\n\t      args.project = project;\n\t      return this.db.client.executePipeline([{\n\t        'service': this.db.service,\n\t        'action': 'find',\n\t        'args': args\n\t      }]);\n\t    }\n\t  }, {\n\t    key: 'insert',\n\t    value: function insert(docs) {\n\t      var toInsert = void 0;\n\t      if (docs instanceof Array) {\n\t        toInsert = docs;\n\t      } else {\n\t        toInsert = Array.from(arguments);\n\t      }\n\t\n\t      return this.db.client.executePipeline([{ 'action': 'literal',\n\t        'args': {\n\t          'items': toInsert\n\t        }\n\t      }, {\n\t        'service': this.db.service,\n\t        'action': 'insert',\n\t        'args': this.getBaseArgs()\n\t      }]);\n\t    }\n\t  }, {\n\t    key: 'makeUpdateStage',\n\t    value: function makeUpdateStage(query, update, upsert, multi) {\n\t      var args = this.getBaseArgs();\n\t      args.query = query;\n\t      args.update = update;\n\t      if (upsert) {\n\t        args.upsert = true;\n\t      }\n\t      if (multi) {\n\t        args.multi = true;\n\t      }\n\t\n\t      return {\n\t        'service': this.db.service,\n\t        'action': 'update',\n\t        'args': args\n\t      };\n\t    }\n\t  }, {\n\t    key: 'updateOne',\n\t    value: function updateOne(query, update) {\n\t      return this.db.client.executePipeline([this.makeUpdateStage(query, update, false, false)]);\n\t    }\n\t  }, {\n\t    key: 'updateMany',\n\t    value: function updateMany(query, update, upsert, multi) {\n\t      return this.db.client.executePipeline([this.makeUpdateStage(query, update, false, true)]);\n\t    }\n\t  }, {\n\t    key: 'upsert',\n\t    value: function upsert(query, update) {\n\t      return this.db.client.executePipeline([this.makeUpdateStage(query, update, true, false)]);\n\t    }\n\t  }]);\n\t\n\t  return Collection;\n\t}();\n\t\n\tvar MongoClient = exports.MongoClient = function () {\n\t  function MongoClient(baasClient, serviceName) {\n\t    _classCallCheck(this, MongoClient);\n\t\n\t    this.baasClient = baasClient;\n\t    this.service = serviceName;\n\t  }\n\t\n\t  _createClass(MongoClient, [{\n\t    key: 'getDb',\n\t    value: function getDb(name) {\n\t      return new DB(this.baasClient, this.service, name);\n\t    }\n\t  }]);\n\t\n\t  return MongoClient;\n\t}();\n\t\n\tvar Admin = exports.Admin = function () {\n\t  function Admin(baseUrl) {\n\t    _classCallCheck(this, Admin);\n\t\n\t    this.client = new BaasClient('', { baseUrl: baseUrl });\n\t  }\n\t\n\t  _createClass(Admin, [{\n\t    key: '_do',\n\t    value: function _do(url, method, options) {\n\t      return this.client._do(url, method, options).then(function (response) {\n\t        return response.json();\n\t      });\n\t    }\n\t  }, {\n\t    key: '_get',\n\t    value: function _get(url, queryParams) {\n\t      return this._do(url, 'GET', { queryParams: queryParams });\n\t    }\n\t  }, {\n\t    key: '_put',\n\t    value: function _put(url, queryParams) {\n\t      return this._do(url, 'PUT', { queryParams: queryParams });\n\t    }\n\t  }, {\n\t    key: '_delete',\n\t    value: function _delete(url) {\n\t      return this._do(url, 'DELETE');\n\t    }\n\t  }, {\n\t    key: '_post',\n\t    value: function _post(url, body) {\n\t      return this._do(url, 'POST', { body: JSON.stringify(body) });\n\t    }\n\t  }, {\n\t    key: 'profile',\n\t    value: function profile() {\n\t      var _this4 = this;\n\t\n\t      var root = this;\n\t      return {\n\t        keys: function keys() {\n\t          return {\n\t            list: function list() {\n\t              return root._get('/profile/keys');\n\t            },\n\t            create: function create(key) {\n\t              return root._post('/profile/keys');\n\t            },\n\t            apiKey: function apiKey(keyId) {\n\t              return {\n\t                get: function get() {\n\t                  return root._get('/profile/keys/' + keyId);\n\t                },\n\t                remove: function remove() {\n\t                  return _this4._delete('/profile/keys/' + keyId);\n\t                },\n\t                enable: function enable() {\n\t                  return root._put('/profile/keys/' + keyId + '/enable');\n\t                },\n\t                disable: function disable() {\n\t                  return root._put('/profile/keys/' + keyId + '/disable');\n\t                }\n\t              };\n\t            }\n\t          };\n\t        }\n\t      };\n\t    }\n\t\n\t    /* Examples of how to access admin API with this client:\n\t     *\n\t     * List all apps\n\t     *    a.apps().list()\n\t     *\n\t     * Fetch app under name 'planner'\n\t     *    a.apps().app('planner').get()\n\t     *\n\t     * List services under the app 'planner'\n\t     *    a.apps().app('planner').services().list()\n\t     *\n\t     * Delete a rule by ID\n\t     *    a.apps().app('planner').services().service('mdb1').rules().rule('580e6d055b199c221fcb821d').remove()\n\t     *\n\t     */\n\t\n\t  }, {\n\t    key: 'apps',\n\t    value: function apps() {\n\t      var _this5 = this;\n\t\n\t      var root = this;\n\t      return {\n\t        list: function list() {\n\t          return root._get('/apps');\n\t        },\n\t        create: function create(data) {\n\t          return root._post('/apps', data);\n\t        },\n\t        app: function app(appID) {\n\t          return {\n\t            get: function get() {\n\t              return root._get('/apps/' + appID);\n\t            },\n\t            remove: function remove() {\n\t              return root._delete('/apps/' + appID);\n\t            },\n\t\n\t            users: function users() {\n\t              return {\n\t                list: function list(filter) {\n\t                  return _this5._get('/apps/' + appID + '/users', filter);\n\t                },\n\t                user: function user(uid) {\n\t                  return {\n\t                    get: function get() {\n\t                      return _this5._get('/apps/' + appID + '/users/' + uid);\n\t                    },\n\t                    logout: function logout() {\n\t                      return _this5._put('/apps/' + appID + '/users/' + uid + '/logout');\n\t                    }\n\t                  };\n\t                }\n\t              };\n\t            },\n\t\n\t            sandbox: function sandbox() {\n\t              return {\n\t                executePipeline: function executePipeline(data, userId) {\n\t                  return _this5._do('/apps/' + appID + '/sandbox/pipeline', 'POST', { body: JSON.stringify(data), queryParams: { user_id: userId } });\n\t                }\n\t              };\n\t            },\n\t\n\t            authProviders: function authProviders() {\n\t              return {\n\t                create: function create(data) {\n\t                  return _this5._post('/apps/' + appID + '/authProviders', data);\n\t                },\n\t                list: function list() {\n\t                  return _this5._get('/apps/' + appID + '/authProviders');\n\t                },\n\t                provider: function provider(authType, authName) {\n\t                  return {\n\t                    get: function get() {\n\t                      return _this5._get('/apps/' + appID + '/authProviders/' + authType + '/' + authName);\n\t                    },\n\t                    remove: function remove() {\n\t                      return _this5._delete('/apps/' + appID + '/authProviders/' + authType + '/' + authName);\n\t                    },\n\t                    update: function update(data) {\n\t                      return _this5._post('/apps/' + appID + '/authProviders/' + authType + '/' + authName, data);\n\t                    }\n\t                  };\n\t                }\n\t              };\n\t            },\n\t            values: function values() {\n\t              return {\n\t                list: function list() {\n\t                  return _this5._get('/apps/' + appID + '/values');\n\t                },\n\t                value: function value(varName) {\n\t                  return {\n\t                    get: function get() {\n\t                      return _this5._get('/apps/' + appID + '/values/' + varName);\n\t                    },\n\t                    remove: function remove() {\n\t                      return _this5._delete('/apps/' + appID + '/values/' + varName);\n\t                    },\n\t                    create: function create(data) {\n\t                      return _this5._post('/apps/' + appID + '/values/' + varName, data);\n\t                    },\n\t                    update: function update(data) {\n\t                      return _this5._post('/apps/' + appID + '/values/' + varName, data);\n\t                    }\n\t                  };\n\t                }\n\t              };\n\t            },\n\t            pipelines: function pipelines() {\n\t              return {\n\t                list: function list() {\n\t                  return _this5._get('/apps/' + appID + '/pipelines');\n\t                },\n\t                pipeline: function pipeline(varName) {\n\t                  return {\n\t                    get: function get() {\n\t                      return _this5._get('/apps/' + appID + '/pipelines/' + varName);\n\t                    },\n\t                    remove: function remove() {\n\t                      return _this5._delete('/apps/' + appID + '/pipelines/' + varName);\n\t                    },\n\t                    create: function create(data) {\n\t                      return _this5._post('/apps/' + appID + '/pipelines/' + varName, data);\n\t                    },\n\t                    update: function update(data) {\n\t                      return _this5._post('/apps/' + appID + '/pipelines/' + varName, data);\n\t                    }\n\t                  };\n\t                }\n\t              };\n\t            },\n\t            logs: function logs() {\n\t              return {\n\t                get: function get(filter) {\n\t                  return _this5._get('/apps/' + appID + '/logs', filter);\n\t                }\n\t              };\n\t            },\n\t            apiKeys: function apiKeys() {\n\t              return {\n\t                list: function list() {\n\t                  return _this5._get('/apps/' + appID + '/keys');\n\t                },\n\t                create: function create(data) {\n\t                  return _this5._post('/apps/' + appID + '/keys', data);\n\t                },\n\t                apiKey: function apiKey(key) {\n\t                  return {\n\t                    get: function get() {\n\t                      return _this5._get('/apps/' + appID + '/keys/' + key);\n\t                    },\n\t                    remove: function remove() {\n\t                      return _this5._delete('/apps/' + appID + '/keys/' + key);\n\t                    },\n\t                    enable: function enable() {\n\t                      return _this5._put('/apps/' + appID + '/keys/' + key + '/enable');\n\t                    },\n\t                    disable: function disable() {\n\t                      return _this5._put('/apps/' + appID + '/keys/' + key + '/disable');\n\t                    }\n\t                  };\n\t                }\n\t              };\n\t            },\n\t            services: function services() {\n\t              return {\n\t                list: function list() {\n\t                  return _this5._get('/apps/' + appID + '/services');\n\t                },\n\t                create: function create(data) {\n\t                  return _this5._post('/apps/' + appID + '/services', data);\n\t                },\n\t                service: function service(svc) {\n\t                  return {\n\t                    get: function get() {\n\t                      return _this5._get('/apps/' + appID + '/services/' + svc);\n\t                    },\n\t                    update: function update(data) {\n\t                      return _this5._post('/apps/' + appID + '/services/' + svc, data);\n\t                    },\n\t                    remove: function remove() {\n\t                      return _this5._delete('/apps/' + appID + '/services/' + svc);\n\t                    },\n\t                    setConfig: function setConfig(data) {\n\t                      return _this5._post('/apps/' + appID + '/services/' + svc + '/config', data);\n\t                    },\n\t\n\t                    rules: function rules() {\n\t                      return {\n\t                        list: function list() {\n\t                          return _this5._get('/apps/' + appID + '/services/' + svc + '/rules');\n\t                        },\n\t                        create: function create(data) {\n\t                          return _this5._post('/apps/' + appID + '/services/' + svc + '/rules');\n\t                        },\n\t                        rule: function rule(ruleId) {\n\t                          return {\n\t                            get: function get() {\n\t                              return _this5._get('/apps/' + appID + '/services/' + svc + '/rules/' + ruleId);\n\t                            },\n\t                            update: function update(data) {\n\t                              return _this5._post('/apps/' + appID + '/services/' + svc + '/rules/' + ruleId, data);\n\t                            },\n\t                            remove: function remove() {\n\t                              return _this5._delete('/apps/' + appID + '/services/' + svc + '/rules/' + ruleId);\n\t                            }\n\t                          };\n\t                        }\n\t                      };\n\t                    },\n\t\n\t                    incomingWebhooks: function incomingWebhooks() {\n\t                      return {\n\t                        list: function list() {\n\t                          return _this5._get('/apps/' + appID + '/services/' + svc + '/incomingWebhooks');\n\t                        },\n\t                        create: function create(data) {\n\t                          return _this5._post('/apps/' + appID + '/services/' + svc + '/incomingWebhooks');\n\t                        },\n\t                        incomingWebhook: function incomingWebhook(incomingWebhookId) {\n\t                          return {\n\t                            get: function get() {\n\t                              return _this5._get('/apps/' + appID + '/services/' + svc + '/incomingWebhooks/' + incomingWebhookId);\n\t                            },\n\t                            update: function update(data) {\n\t                              return _this5._post('/apps/' + appID + '/services/' + svc + '/incomingWebhooks/' + incomingWebhookId, data);\n\t                            },\n\t                            remove: function remove() {\n\t                              return _this5._delete('/apps/' + appID + '/services/' + svc + '/incomingWebhooks/' + incomingWebhookId);\n\t                            }\n\t                          };\n\t                        }\n\t                      };\n\t                    }\n\t                  };\n\t                }\n\t              };\n\t            }\n\t          };\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: '_admin',\n\t    value: function _admin() {\n\t      var _this6 = this;\n\t\n\t      return {\n\t        logs: function logs() {\n\t          return {\n\t            get: function get(filter) {\n\t              return _this6._do('/admin/logs', 'GET', { useRefreshToken: true, queryParams: filter });\n\t            }\n\t          };\n\t        },\n\t        users: function users() {\n\t          return {\n\t            list: function list(filter) {\n\t              return _this6._do('/admin/users', 'GET', { useRefreshToken: true, queryParams: filter });\n\t            },\n\t            user: function user(uid) {\n\t              return {\n\t                logout: function logout() {\n\t                  return _this6._do('/admin/users/' + uid + '/logout', 'PUT', { useRefreshToken: true });\n\t                }\n\t              };\n\t            }\n\t          };\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: '_isImpersonatingUser',\n\t    value: function _isImpersonatingUser() {\n\t      return this.client.authManager.isImpersonatingUser();\n\t    }\n\t  }, {\n\t    key: '_startImpersonation',\n\t    value: function _startImpersonation(userId) {\n\t      return this.client.authManager.startImpersonation(this.client, userId);\n\t    }\n\t  }, {\n\t    key: '_stopImpersonation',\n\t    value: function _stopImpersonation() {\n\t      return this.client.authManager.stopImpersonation();\n\t    }\n\t  }]);\n\t\n\t  return Admin;\n\t}();\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n\t    }\n\t  }return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n\t  };\n\t}(); /* global window, fetch */\n\t\n\tvar _common = __webpack_require__(2);\n\t\n\tvar common = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) {\n\t  if (obj && obj.__esModule) {\n\t    return obj;\n\t  } else {\n\t    var newObj = {};if (obj != null) {\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n\t      }\n\t    }newObj.default = obj;return newObj;\n\t  }\n\t}\n\t\n\tfunction _classCallCheck(instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t}\n\t\n\tvar Base64 = __webpack_require__(3);\n\t\n\tvar b64Encode = Base64.btoa;\n\tvar b64Decode = Base64.atob;\n\t\n\tvar AuthDataStorage = function () {\n\t  function AuthDataStorage() {\n\t    _classCallCheck(this, AuthDataStorage);\n\t\n\t    this._data = {};\n\t  }\n\t\n\t  _createClass(AuthDataStorage, [{\n\t    key: 'setItem',\n\t    value: function setItem(id, val) {\n\t      this._data[id] = String(val);\n\t    }\n\t  }, {\n\t    key: 'getItem',\n\t    value: function getItem(id) {\n\t      return this._data.hasOwnProperty(id) ? this._data[id] : undefined;\n\t    }\n\t  }, {\n\t    key: 'removeItem',\n\t    value: function removeItem(id) {\n\t      return delete this._data[id];\n\t    }\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      this._data = {};\n\t    }\n\t  }]);\n\t\n\t  return AuthDataStorage;\n\t}();\n\t\n\tvar Auth = function () {\n\t  function Auth(rootUrl) {\n\t    _classCallCheck(this, Auth);\n\t\n\t    this.rootUrl = rootUrl;\n\t    if (typeof window !== 'undefined' && window.localStorage !== undefined) {\n\t      this.authDataStorage = window.localStorage;\n\t    } else {\n\t      this.authDataStorage = new AuthDataStorage();\n\t    }\n\t  }\n\t\n\t  _createClass(Auth, [{\n\t    key: 'pageRootUrl',\n\t    value: function pageRootUrl() {\n\t      return [window.location.protocol, '//', window.location.host, window.location.pathname].join('');\n\t    }\n\t\n\t    // The state we generate is to be used for any kind of request where we will\n\t    // complete an authentication flow via a redirect. We store the generate in\n\t    // a local storage bound to the app's origin. This ensures that any time we\n\t    // receive a redirect, there must be a state parameter and it must match\n\t    // what we ourselves have generated. This state MUST only be sent to\n\t    // a trusted BaaS endpoint in order to preserve its integrity. BaaS will\n\t    // store it in some way on its origin (currently a cookie stored on this client)\n\t    // and use that state at the end of an auth flow as a parameter in the redirect URI.\n\t\n\t  }, {\n\t    key: 'setAccessToken',\n\t    value: function setAccessToken(token) {\n\t      var currAuth = this.get();\n\t      currAuth['accessToken'] = token;\n\t      currAuth['refreshToken'] = this.authDataStorage.getItem(common.REFRESH_TOKEN_KEY);\n\t      this.set(currAuth);\n\t    }\n\t  }, {\n\t    key: 'error',\n\t    value: function error() {\n\t      return this._error;\n\t    }\n\t  }, {\n\t    key: 'handleRedirect',\n\t    value: function handleRedirect() {\n\t      if (typeof window === 'undefined') {\n\t        // This means we're running in some environment other\n\t        // than a browser - so handling a redirect makes no sense here.\n\t        return;\n\t      }\n\t      var ourState = this.authDataStorage.getItem(common.STATE_KEY);\n\t      var redirectFragment = window.location.hash.substring(1);\n\t      var redirectState = common.parseRedirectFragment(redirectFragment, ourState);\n\t      if (redirectState.lastError) {\n\t        console.error('BaasClient: error from redirect: ' + redirectState.lastError);\n\t        this._error = redirectState.lastError;\n\t        window.history.replaceState(null, '', this.pageRootUrl());\n\t        return;\n\t      }\n\t      if (!redirectState.found) {\n\t        return;\n\t      }\n\t      this.authDataStorage.removeItem(common.STATE_KEY);\n\t      if (!redirectState.stateValid) {\n\t        console.error('BaasClient: state values did not match!');\n\t        window.history.replaceState(null, '', this.pageRootUrl());\n\t        return;\n\t      }\n\t      if (!redirectState.ua) {\n\t        console.error('BaasClient: no UA value was returned from redirect!');\n\t        return;\n\t      }\n\t      // If we get here, the state is valid - set auth appropriately.\n\t      this.set(redirectState.ua);\n\t      window.history.replaceState(null, '', this.pageRootUrl());\n\t    }\n\t  }, {\n\t    key: 'getOAuthLoginURL',\n\t    value: function getOAuthLoginURL(providerName, redirectUrl) {\n\t      if (redirectUrl === undefined) {\n\t        redirectUrl = this.pageRootUrl();\n\t      }\n\t      var state = Auth.generateState();\n\t      this.authDataStorage.setItem(common.STATE_KEY, state);\n\t      var result = this.rootUrl + '/oauth2/' + providerName + '?redirect=' + encodeURI(redirectUrl) + '&state=' + state;\n\t      return result;\n\t    }\n\t  }, {\n\t    key: 'anonymousAuth',\n\t    value: function anonymousAuth() {\n\t      var _this = this;\n\t\n\t      var fetchArgs = common.makeFetchArgs('GET');\n\t      fetchArgs['cors'] = true;\n\t\n\t      return fetch(this.rootUrl + '/anon/user', fetchArgs).then(common.checkStatus).then(function (response) {\n\t        return response.json();\n\t      }).then(function (json) {\n\t        _this.set(json);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'apiKeyAuth',\n\t    value: function apiKeyAuth(key) {\n\t      var _this2 = this;\n\t\n\t      var fetchArgs = common.makeFetchArgs('POST', JSON.stringify({ 'key': key }));\n\t      fetchArgs['cors'] = true;\n\t\n\t      return fetch(this.rootUrl + '/api/key', fetchArgs).then(common.checkStatus).then(function (response) {\n\t        return response.json();\n\t      }).then(function (json) {\n\t        _this2.set(json);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'localAuth',\n\t    value: function localAuth(username, password) {\n\t      var _this3 = this;\n\t\n\t      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { cors: true };\n\t\n\t      var fetchArgs = common.makeFetchArgs('POST', JSON.stringify({ username: username, password: password }));\n\t      fetchArgs['cors'] = true;\n\t\n\t      return fetch(this.rootUrl + '/local/userpass', fetchArgs).then(common.checkStatus).then(function (response) {\n\t        return response.json().then(function (json) {\n\t          _this3.set(json);\n\t          return Promise.resolve(json);\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      this.authDataStorage.removeItem(common.USER_AUTH_KEY);\n\t      this.authDataStorage.removeItem(common.REFRESH_TOKEN_KEY);\n\t      this.clearImpersonation();\n\t    }\n\t  }, {\n\t    key: 'getRefreshToken',\n\t    value: function getRefreshToken() {\n\t      return this.authDataStorage.getItem(common.REFRESH_TOKEN_KEY);\n\t    }\n\t  }, {\n\t    key: 'set',\n\t    value: function set(json) {\n\t      var rt = json['refreshToken'];\n\t      delete json['refreshToken'];\n\t\n\t      this.authDataStorage.setItem(common.USER_AUTH_KEY, b64Encode(JSON.stringify(json)));\n\t      this.authDataStorage.setItem(common.REFRESH_TOKEN_KEY, rt);\n\t    }\n\t  }, {\n\t    key: 'get',\n\t    value: function get() {\n\t      if (!this.authDataStorage.getItem(common.USER_AUTH_KEY)) {\n\t        return null;\n\t      }\n\t      var item = this.authDataStorage.getItem(common.USER_AUTH_KEY);\n\t      return JSON.parse(b64Decode(item));\n\t    }\n\t  }, {\n\t    key: 'authedId',\n\t    value: function authedId() {\n\t      var id = ((this.get() || {}).user || {})._id;\n\t      if (id) {\n\t        return { '$oid': id };\n\t      }\n\t    }\n\t  }, {\n\t    key: 'isImpersonatingUser',\n\t    value: function isImpersonatingUser() {\n\t      return this.authDataStorage.getItem(common.IMPERSONATION_ACTIVE_KEY) === 'true';\n\t    }\n\t  }, {\n\t    key: 'refreshImpersonation',\n\t    value: function refreshImpersonation(client) {\n\t      var _this4 = this;\n\t\n\t      var userId = this.authDataStorage.getItem(common.IMPERSONATION_USER_KEY);\n\t      return client._do('/admin/users/' + userId + '/impersonate', 'POST', { refreshOnFailure: false, useRefreshToken: true }).then(function (response) {\n\t        return response.json().then(function (json) {\n\t          json['refreshToken'] = _this4.authDataStorage.getItem(common.REFRESH_TOKEN_KEY);\n\t          _this4.set(json);\n\t          return Promise.resolve();\n\t        });\n\t      }).catch(function (e) {\n\t        _this4.stopImpersonation();\n\t        return Promise.reject(e);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'startImpersonation',\n\t    value: function startImpersonation(client, userId) {\n\t      if (this.get() === null) {\n\t        return Promise.reject(new common.BaasError('Must auth first'));\n\t      }\n\t      if (this.isImpersonatingUser()) {\n\t        return Promise.reject(new common.BaasError('Already impersonating a user'));\n\t      }\n\t      this.authDataStorage.setItem(common.IMPERSONATION_ACTIVE_KEY, 'true');\n\t      this.authDataStorage.setItem(common.IMPERSONATION_USER_KEY, userId);\n\t\n\t      var realUserAuth = JSON.parse(b64Decode(this.authDataStorage.getItem(common.USER_AUTH_KEY)));\n\t      realUserAuth['refreshToken'] = this.authDataStorage.getItem(common.REFRESH_TOKEN_KEY);\n\t      this.authDataStorage.setItem(common.IMPERSONATION_REAL_USER_AUTH_KEY, b64Encode(JSON.stringify(realUserAuth)));\n\t      return this.refreshImpersonation(client);\n\t    }\n\t  }, {\n\t    key: 'stopImpersonation',\n\t    value: function stopImpersonation() {\n\t      var _this5 = this;\n\t\n\t      if (!this.isImpersonatingUser()) {\n\t        throw new common.BaasError('Not impersonating a user');\n\t      }\n\t      return new Promise(function (resolve, reject) {\n\t        var realUserAuth = JSON.parse(b64Decode(_this5.authDataStorage.getItem(common.IMPERSONATION_REAL_USER_AUTH_KEY)));\n\t        _this5.set(realUserAuth);\n\t        _this5.clearImpersonation();\n\t        resolve();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'clearImpersonation',\n\t    value: function clearImpersonation() {\n\t      this.authDataStorage.removeItem(common.IMPERSONATION_ACTIVE_KEY);\n\t      this.authDataStorage.removeItem(common.IMPERSONATION_USER_KEY);\n\t      this.authDataStorage.removeItem(common.IMPERSONATION_REAL_USER_AUTH_KEY);\n\t    }\n\t  }], [{\n\t    key: 'generateState',\n\t    value: function generateState() {\n\t      var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\t      var state = '';\n\t      var stateLength = 64;\n\t      for (var i = 0; i < stateLength; i++) {\n\t        var pos = Math.floor(Math.random() * alpha.length);\n\t        state += alpha.substring(pos, pos + 1);\n\t      }\n\t      return state;\n\t    }\n\t  }]);\n\t\n\t  return Auth;\n\t}();\n\t\n\texports.default = Auth;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t}\n\t\n\tfunction _possibleConstructorReturn(self, call) {\n\t  if (!self) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n\t}\n\t\n\tfunction _inherits(subClass, superClass) {\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n\t  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t}\n\t\n\tvar JSONTYPE = exports.JSONTYPE = 'application/json';\n\tvar USER_AUTH_KEY = exports.USER_AUTH_KEY = '_baas_ua';\n\tvar REFRESH_TOKEN_KEY = exports.REFRESH_TOKEN_KEY = '_baas_rt';\n\tvar STATE_KEY = exports.STATE_KEY = '_baas_state';\n\tvar BAAS_ERROR_KEY = exports.BAAS_ERROR_KEY = '_baas_error';\n\tvar BAAS_LINK_KEY = exports.BAAS_LINK_KEY = '_baas_link';\n\tvar IMPERSONATION_ACTIVE_KEY = exports.IMPERSONATION_ACTIVE_KEY = '_baas_impers_active';\n\tvar IMPERSONATION_USER_KEY = exports.IMPERSONATION_USER_KEY = '_baas_impers_user';\n\tvar IMPERSONATION_REAL_USER_AUTH_KEY = exports.IMPERSONATION_REAL_USER_AUTH_KEY = '_baas_impers_real_ua';\n\t\n\tvar DEFAULT_BAAS_SERVER_URL = exports.DEFAULT_BAAS_SERVER_URL = 'https://baas-dev.10gen.cc';\n\t\n\tvar checkStatus = exports.checkStatus = function checkStatus(response) {\n\t  if (response.status >= 200 && response.status < 300) {\n\t    return response;\n\t  } else {\n\t    var error = new Error(response.statusText);\n\t    error.response = response;\n\t    throw error;\n\t  }\n\t};\n\t\n\tvar makeFetchArgs = exports.makeFetchArgs = function makeFetchArgs(method, body) {\n\t  var init = {\n\t    method: method,\n\t    headers: { 'Accept': JSONTYPE, 'Content-Type': JSONTYPE }\n\t  };\n\t  if (body) {\n\t    init['body'] = body;\n\t  }\n\t  return init;\n\t};\n\t\n\tvar parseRedirectFragment = exports.parseRedirectFragment = function parseRedirectFragment(fragment, ourState) {\n\t  // After being redirected from oauth, the URL will look like:\n\t  // https://todo.examples.baas-dev.10gen.cc/#_baas_state=...&_baas_ua=...\n\t  // This function parses out baas-specific tokens from the fragment and\n\t  // builds an object describing the result.\n\t  var vars = fragment.split('&');\n\t  var result = { ua: null, found: false, stateValid: false, lastError: null };\n\t  var shouldBreak = false;\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\t\n\t  try {\n\t    for (var _iterator = vars[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var pair = _step.value;\n\t\n\t      var pairParts = pair.split('=');\n\t      var pairKey = decodeURIComponent(pairParts[0]);\n\t      switch (pairKey) {\n\t        case BAAS_ERROR_KEY:\n\t          result.lastError = decodeURIComponent(pairParts[1]);\n\t          result.found = true;\n\t          shouldBreak = true;\n\t          break;\n\t        case USER_AUTH_KEY:\n\t          result.ua = JSON.parse(window.atob(decodeURIComponent(pairParts[1])));\n\t          result.found = true;\n\t          continue;\n\t        case BAAS_LINK_KEY:\n\t          result.found = true;\n\t          continue;\n\t        case STATE_KEY:\n\t          result.found = true;\n\t          var theirState = decodeURIComponent(pairParts[1]);\n\t          if (ourState && ourState === theirState) {\n\t            result.stateValid = true;\n\t          }\n\t      }\n\t      if (shouldBreak) {\n\t        break;\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\t\n\t  return result;\n\t};\n\t\n\tvar BaasError = exports.BaasError = function (_Error) {\n\t  _inherits(BaasError, _Error);\n\t\n\t  function BaasError(message, code) {\n\t    _classCallCheck(this, BaasError);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BaasError.__proto__ || Object.getPrototypeOf(BaasError)).call(this, message));\n\t\n\t    _this.name = 'BaasError';\n\t    _this.message = message;\n\t    if (code !== undefined) {\n\t      _this.code = code;\n\t    }\n\t    if (typeof Error.captureStackTrace === 'function') {\n\t      Error.captureStackTrace(_this, _this.constructor);\n\t    } else {\n\t      _this.stack = new Error(message).stack;\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  return BaasError;\n\t}(Error);\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t;(function () {\n\t\n\t  var object =  true ? exports : self; // #8: web workers\n\t  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t\n\t  function InvalidCharacterError(message) {\n\t    this.message = message;\n\t  }\n\t  InvalidCharacterError.prototype = new Error();\n\t  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t  // encoder\n\t  // [https://gist.github.com/999166] by [https://github.com/nignag]\n\t  object.btoa || (object.btoa = function (input) {\n\t    var str = String(input);\n\t    for (\n\t    // initialize result and counter\n\t    var block, charCode, idx = 0, map = chars, output = '';\n\t    // if the next str index does not exist:\n\t    //   change the mapping table to \"=\"\n\t    //   check if d has no fractional digits\n\t    str.charAt(idx | 0) || (map = '=', idx % 1);\n\t    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n\t    output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {\n\t      charCode = str.charCodeAt(idx += 3 / 4);\n\t      if (charCode > 0xFF) {\n\t        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n\t      }\n\t      block = block << 8 | charCode;\n\t    }\n\t    return output;\n\t  });\n\t\n\t  // decoder\n\t  // [https://gist.github.com/1020396] by [https://github.com/atk]\n\t  object.atob || (object.atob = function (input) {\n\t    var str = String(input).replace(/=+$/, '');\n\t    if (str.length % 4 == 1) {\n\t      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n\t    }\n\t    for (\n\t    // initialize result and counters\n\t    var bc = 0, bs, buffer, idx = 0, output = '';\n\t    // get next character\n\t    buffer = str.charAt(idx++);\n\t    // character found in table? initialize bit storage and add its ascii value;\n\t    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n\t    // and if not first of each 4 characters,\n\t    // convert the first 8 bits to one ascii character\n\t    bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n\t      // try to find character in table (0-63, not found => -1)\n\t      buffer = chars.indexOf(buffer);\n\t    }\n\t    return output;\n\t  });\n\t})();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// This is free and unencumbered software released into the public domain.\n\t// See LICENSE.md for more information.\n\t\n\t//\n\t// Utilities\n\t//\n\t\n\t/**\n\t * @param {number} a The number to test.\n\t * @param {number} min The minimum value in the range, inclusive.\n\t * @param {number} max The maximum value in the range, inclusive.\n\t * @return {boolean} True if a >= min and a <= max.\n\t */\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tfunction inRange(a, min, max) {\n\t  return min <= a && a <= max;\n\t}\n\t\n\t/**\n\t * @param {*} o\n\t * @return {Object}\n\t */\n\tfunction ToDictionary(o) {\n\t  if (o === undefined) return {};\n\t  if (o === Object(o)) return o;\n\t  throw TypeError('Could not convert argument to dictionary');\n\t}\n\t\n\t/**\n\t * @param {string} string Input string of UTF-16 code units.\n\t * @return {!Array.<number>} Code points.\n\t */\n\tfunction stringToCodePoints(string) {\n\t  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\t\n\t  // 1. Let S be the DOMString value.\n\t  var s = String(string);\n\t\n\t  // 2. Let n be the length of S.\n\t  var n = s.length;\n\t\n\t  // 3. Initialize i to 0.\n\t  var i = 0;\n\t\n\t  // 4. Initialize U to be an empty sequence of Unicode characters.\n\t  var u = [];\n\t\n\t  // 5. While i < n:\n\t  while (i < n) {\n\t\n\t    // 1. Let c be the code unit in S at index i.\n\t    var c = s.charCodeAt(i);\n\t\n\t    // 2. Depending on the value of c:\n\t\n\t    // c < 0xD800 or c > 0xDFFF\n\t    if (c < 0xD800 || c > 0xDFFF) {\n\t      // Append to U the Unicode character with code point c.\n\t      u.push(c);\n\t    }\n\t\n\t    // 0xDC00 ≤ c ≤ 0xDFFF\n\t    else if (0xDC00 <= c && c <= 0xDFFF) {\n\t        // Append to U a U+FFFD REPLACEMENT CHARACTER.\n\t        u.push(0xFFFD);\n\t      }\n\t\n\t      // 0xD800 ≤ c ≤ 0xDBFF\n\t      else if (0xD800 <= c && c <= 0xDBFF) {\n\t          // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n\t          // CHARACTER.\n\t          if (i === n - 1) {\n\t            u.push(0xFFFD);\n\t          }\n\t          // 2. Otherwise, i < n−1:\n\t          else {\n\t              // 1. Let d be the code unit in S at index i+1.\n\t              var d = string.charCodeAt(i + 1);\n\t\n\t              // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n\t              if (0xDC00 <= d && d <= 0xDFFF) {\n\t                // 1. Let a be c & 0x3FF.\n\t                var a = c & 0x3FF;\n\t\n\t                // 2. Let b be d & 0x3FF.\n\t                var b = d & 0x3FF;\n\t\n\t                // 3. Append to U the Unicode character with code point\n\t                // 2^16+2^10*a+b.\n\t                u.push(0x10000 + (a << 10) + b);\n\t\n\t                // 4. Set i to i+1.\n\t                i += 1;\n\t              }\n\t\n\t              // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n\t              // U+FFFD REPLACEMENT CHARACTER.\n\t              else {\n\t                  u.push(0xFFFD);\n\t                }\n\t            }\n\t        }\n\t\n\t    // 3. Set i to i+1.\n\t    i += 1;\n\t  }\n\t\n\t  // 6. Return U.\n\t  return u;\n\t}\n\t\n\t/**\n\t * @param {!Array.<number>} code_points Array of code points.\n\t * @return {string} string String of UTF-16 code units.\n\t */\n\tfunction codePointsToString(code_points) {\n\t  var s = '';\n\t  for (var i = 0; i < code_points.length; ++i) {\n\t    var cp = code_points[i];\n\t    if (cp <= 0xFFFF) {\n\t      s += String.fromCharCode(cp);\n\t    } else {\n\t      cp -= 0x10000;\n\t      s += String.fromCharCode((cp >> 10) + 0xD800, (cp & 0x3FF) + 0xDC00);\n\t    }\n\t  }\n\t  return s;\n\t}\n\t\n\t//\n\t// Implementation of Encoding specification\n\t// https://encoding.spec.whatwg.org/\n\t//\n\t\n\t//\n\t// 3. Terminology\n\t//\n\t\n\t/**\n\t * End-of-stream is a special token that signifies no more tokens\n\t * are in the stream.\n\t * @const\n\t */var end_of_stream = -1;\n\t\n\t/**\n\t * A stream represents an ordered sequence of tokens.\n\t *\n\t * @constructor\n\t * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n\t * stream.\n\t */\n\tfunction Stream(tokens) {\n\t  /** @type {!Array.<number>} */\n\t  this.tokens = [].slice.call(tokens);\n\t}\n\t\n\tStream.prototype = {\n\t  /**\n\t   * @return {boolean} True if end-of-stream has been hit.\n\t   */\n\t  endOfStream: function endOfStream() {\n\t    return !this.tokens.length;\n\t  },\n\t\n\t  /**\n\t   * When a token is read from a stream, the first token in the\n\t   * stream must be returned and subsequently removed, and\n\t   * end-of-stream must be returned otherwise.\n\t   *\n\t   * @return {number} Get the next token from the stream, or\n\t   * end_of_stream.\n\t   */\n\t  read: function read() {\n\t    if (!this.tokens.length) return end_of_stream;\n\t    return this.tokens.shift();\n\t  },\n\t\n\t  /**\n\t   * When one or more tokens are prepended to a stream, those tokens\n\t   * must be inserted, in given order, before the first token in the\n\t   * stream.\n\t   *\n\t   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n\t   */\n\t  prepend: function prepend(token) {\n\t    if (Array.isArray(token)) {\n\t      var tokens = /**@type {!Array.<number>}*/token;\n\t      while (tokens.length) {\n\t        this.tokens.unshift(tokens.pop());\n\t      }\n\t    } else {\n\t      this.tokens.unshift(token);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When one or more tokens are pushed to a stream, those tokens\n\t   * must be inserted, in given order, after the last token in the\n\t   * stream.\n\t   *\n\t   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n\t   */\n\t  push: function push(token) {\n\t    if (Array.isArray(token)) {\n\t      var tokens = /**@type {!Array.<number>}*/token;\n\t      while (tokens.length) {\n\t        this.tokens.push(tokens.shift());\n\t      }\n\t    } else {\n\t      this.tokens.push(token);\n\t    }\n\t  }\n\t};\n\t\n\t//\n\t// 4. Encodings\n\t//\n\t\n\t// 4.1 Encoders and decoders\n\t\n\t/** @const */\n\tvar finished = -1;\n\t\n\t/**\n\t * @param {boolean} fatal If true, decoding errors raise an exception.\n\t * @param {number=} opt_code_point Override the standard fallback code point.\n\t * @return {number} The code point to insert on a decoding error.\n\t */\n\tfunction decoderError(fatal, opt_code_point) {\n\t  if (fatal) throw TypeError('Decoder error');\n\t  return opt_code_point || 0xFFFD;\n\t}\n\t\n\t//\n\t// 7. API\n\t//\n\t\n\t/** @const */var DEFAULT_ENCODING = 'utf-8';\n\t\n\t// 7.1 Interface TextDecoder\n\t\n\t/**\n\t * @constructor\n\t * @param {string=} encoding The label of the encoding;\n\t *     defaults to 'utf-8'.\n\t * @param {Object=} options\n\t */\n\tfunction TextDecoder(encoding, options) {\n\t  if (!(this instanceof TextDecoder)) {\n\t    return new TextDecoder(encoding, options);\n\t  }\n\t  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n\t  if (encoding !== DEFAULT_ENCODING) {\n\t    throw new Error('Encoding not supported. Only utf-8 is supported');\n\t  }\n\t  options = ToDictionary(options);\n\t\n\t  /** @private @type {boolean} */\n\t  this._streaming = false;\n\t  /** @private @type {boolean} */\n\t  this._BOMseen = false;\n\t  /** @private @type {?Decoder} */\n\t  this._decoder = null;\n\t  /** @private @type {boolean} */\n\t  this._fatal = Boolean(options['fatal']);\n\t  /** @private @type {boolean} */\n\t  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\t\n\t  Object.defineProperty(this, 'encoding', { value: 'utf-8' });\n\t  Object.defineProperty(this, 'fatal', { value: this._fatal });\n\t  Object.defineProperty(this, 'ignoreBOM', { value: this._ignoreBOM });\n\t}\n\t\n\tTextDecoder.prototype = {\n\t  /**\n\t   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n\t   * @param {Object=} options\n\t   * @return {string} The decoded string.\n\t   */\n\t  decode: function decode(input, options) {\n\t    var bytes;\n\t    if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input instanceof ArrayBuffer) {\n\t      bytes = new Uint8Array(input);\n\t    } else if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && 'buffer' in input && input.buffer instanceof ArrayBuffer) {\n\t      bytes = new Uint8Array(input.buffer, input.byteOffset, input.byteLength);\n\t    } else {\n\t      bytes = new Uint8Array(0);\n\t    }\n\t\n\t    options = ToDictionary(options);\n\t\n\t    if (!this._streaming) {\n\t      this._decoder = new UTF8Decoder({ fatal: this._fatal });\n\t      this._BOMseen = false;\n\t    }\n\t    this._streaming = Boolean(options['stream']);\n\t\n\t    var input_stream = new Stream(bytes);\n\t\n\t    var code_points = [];\n\t\n\t    /** @type {?(number|!Array.<number>)} */\n\t    var result;\n\t\n\t    while (!input_stream.endOfStream()) {\n\t      result = this._decoder.handler(input_stream, input_stream.read());\n\t      if (result === finished) break;\n\t      if (result === null) continue;\n\t      if (Array.isArray(result)) code_points.push.apply(code_points, /**@type {!Array.<number>}*/result);else code_points.push(result);\n\t    }\n\t    if (!this._streaming) {\n\t      do {\n\t        result = this._decoder.handler(input_stream, input_stream.read());\n\t        if (result === finished) break;\n\t        if (result === null) continue;\n\t        if (Array.isArray(result)) code_points.push.apply(code_points, /**@type {!Array.<number>}*/result);else code_points.push(result);\n\t      } while (!input_stream.endOfStream());\n\t      this._decoder = null;\n\t    }\n\t\n\t    if (code_points.length) {\n\t      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n\t      // ignore BOM flag and BOM seen flag are unset, run these\n\t      // subsubsteps:\n\t      if (['utf-8'].indexOf(this.encoding) !== -1 && !this._ignoreBOM && !this._BOMseen) {\n\t        // If token is U+FEFF, set BOM seen flag.\n\t        if (code_points[0] === 0xFEFF) {\n\t          this._BOMseen = true;\n\t          code_points.shift();\n\t        } else {\n\t          // Otherwise, if token is not end-of-stream, set BOM seen\n\t          // flag and append token to output.\n\t          this._BOMseen = true;\n\t        }\n\t      }\n\t    }\n\t\n\t    return codePointsToString(code_points);\n\t  }\n\t};\n\t\n\t// 7.2 Interface TextEncoder\n\t\n\t/**\n\t * @constructor\n\t * @param {string=} encoding The label of the encoding;\n\t *     defaults to 'utf-8'.\n\t * @param {Object=} options\n\t */\n\tfunction TextEncoder(encoding, options) {\n\t  if (!(this instanceof TextEncoder)) return new TextEncoder(encoding, options);\n\t  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n\t  if (encoding !== DEFAULT_ENCODING) {\n\t    throw new Error('Encoding not supported. Only utf-8 is supported');\n\t  }\n\t  options = ToDictionary(options);\n\t\n\t  /** @private @type {boolean} */\n\t  this._streaming = false;\n\t  /** @private @type {?Encoder} */\n\t  this._encoder = null;\n\t  /** @private @type {{fatal: boolean}} */\n\t  this._options = { fatal: Boolean(options['fatal']) };\n\t\n\t  Object.defineProperty(this, 'encoding', { value: 'utf-8' });\n\t}\n\t\n\tTextEncoder.prototype = {\n\t  /**\n\t   * @param {string=} opt_string The string to encode.\n\t   * @param {Object=} options\n\t   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n\t   */\n\t  encode: function encode(opt_string, options) {\n\t    opt_string = opt_string ? String(opt_string) : '';\n\t    options = ToDictionary(options);\n\t\n\t    // NOTE: This option is nonstandard. None of the encodings\n\t    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n\t    // so streaming is not necessary.\n\t    if (!this._streaming) this._encoder = new UTF8Encoder(this._options);\n\t    this._streaming = Boolean(options['stream']);\n\t\n\t    var bytes = [];\n\t    var input_stream = new Stream(stringToCodePoints(opt_string));\n\t    /** @type {?(number|!Array.<number>)} */\n\t    var result;\n\t    while (!input_stream.endOfStream()) {\n\t      result = this._encoder.handler(input_stream, input_stream.read());\n\t      if (result === finished) break;\n\t      if (Array.isArray(result)) bytes.push.apply(bytes, /**@type {!Array.<number>}*/result);else bytes.push(result);\n\t    }\n\t    if (!this._streaming) {\n\t      while (true) {\n\t        result = this._encoder.handler(input_stream, input_stream.read());\n\t        if (result === finished) break;\n\t        if (Array.isArray(result)) bytes.push.apply(bytes, /**@type {!Array.<number>}*/result);else bytes.push(result);\n\t      }\n\t      this._encoder = null;\n\t    }\n\t    return new Uint8Array(bytes);\n\t  }\n\t};\n\t\n\t//\n\t// 8. The encoding\n\t//\n\t\n\t// 8.1 utf-8\n\t\n\t/**\n\t * @constructor\n\t * @implements {Decoder}\n\t * @param {{fatal: boolean}} options\n\t */\n\tfunction UTF8Decoder(options) {\n\t  var fatal = options.fatal;\n\t\n\t  // utf-8's decoder's has an associated utf-8 code point, utf-8\n\t  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n\t  // lower boundary (initially 0x80), and a utf-8 upper boundary\n\t  // (initially 0xBF).\n\t  var /** @type {number} */utf8_code_point = 0,\n\t\n\t  /** @type {number} */utf8_bytes_seen = 0,\n\t\n\t  /** @type {number} */utf8_bytes_needed = 0,\n\t\n\t  /** @type {number} */utf8_lower_boundary = 0x80,\n\t\n\t  /** @type {number} */utf8_upper_boundary = 0xBF;\n\t\n\t  /**\n\t   * @param {Stream} stream The stream of bytes being decoded.\n\t   * @param {number} bite The next byte read from the stream.\n\t   * @return {?(number|!Array.<number>)} The next code point(s)\n\t   *     decoded, or null if not enough data exists in the input\n\t   *     stream to decode a complete code point.\n\t   */\n\t  this.handler = function (stream, bite) {\n\t    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n\t    // set utf-8 bytes needed to 0 and return error.\n\t    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n\t      utf8_bytes_needed = 0;\n\t      return decoderError(fatal);\n\t    }\n\t\n\t    // 2. If byte is end-of-stream, return finished.\n\t    if (bite === end_of_stream) return finished;\n\t\n\t    // 3. If utf-8 bytes needed is 0, based on byte:\n\t    if (utf8_bytes_needed === 0) {\n\t\n\t      // 0x00 to 0x7F\n\t      if (inRange(bite, 0x00, 0x7F)) {\n\t        // Return a code point whose value is byte.\n\t        return bite;\n\t      }\n\t\n\t      // 0xC2 to 0xDF\n\t      if (inRange(bite, 0xC2, 0xDF)) {\n\t        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n\t        // − 0xC0.\n\t        utf8_bytes_needed = 1;\n\t        utf8_code_point = bite - 0xC0;\n\t      }\n\t\n\t      // 0xE0 to 0xEF\n\t      else if (inRange(bite, 0xE0, 0xEF)) {\n\t          // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n\t          if (bite === 0xE0) utf8_lower_boundary = 0xA0;\n\t          // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n\t          if (bite === 0xED) utf8_upper_boundary = 0x9F;\n\t          // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n\t          // byte − 0xE0.\n\t          utf8_bytes_needed = 2;\n\t          utf8_code_point = bite - 0xE0;\n\t        }\n\t\n\t        // 0xF0 to 0xF4\n\t        else if (inRange(bite, 0xF0, 0xF4)) {\n\t            // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n\t            if (bite === 0xF0) utf8_lower_boundary = 0x90;\n\t            // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n\t            if (bite === 0xF4) utf8_upper_boundary = 0x8F;\n\t            // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n\t            // byte − 0xF0.\n\t            utf8_bytes_needed = 3;\n\t            utf8_code_point = bite - 0xF0;\n\t          }\n\t\n\t          // Otherwise\n\t          else {\n\t              // Return error.\n\t              return decoderError(fatal);\n\t            }\n\t\n\t      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n\t      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n\t      // return continue.\n\t      utf8_code_point = utf8_code_point << 6 * utf8_bytes_needed;\n\t      return null;\n\t    }\n\t\n\t    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n\t    // upper boundary, run these substeps:\n\t    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\t\n\t      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n\t      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n\t      // utf-8 upper boundary to 0xBF.\n\t      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\t      utf8_lower_boundary = 0x80;\n\t      utf8_upper_boundary = 0xBF;\n\t\n\t      // 2. Prepend byte to stream.\n\t      stream.prepend(bite);\n\t\n\t      // 3. Return error.\n\t      return decoderError(fatal);\n\t    }\n\t\n\t    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n\t    // to 0xBF.\n\t    utf8_lower_boundary = 0x80;\n\t    utf8_upper_boundary = 0xBF;\n\t\n\t    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n\t    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n\t    // needed − utf-8 bytes seen)).\n\t    utf8_bytes_seen += 1;\n\t    utf8_code_point += bite - 0x80 << 6 * (utf8_bytes_needed - utf8_bytes_seen);\n\t\n\t    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n\t    // continue.\n\t    if (utf8_bytes_seen !== utf8_bytes_needed) return null;\n\t\n\t    // 8. Let code point be utf-8 code point.\n\t    var code_point = utf8_code_point;\n\t\n\t    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n\t    // seen to 0.\n\t    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\t\n\t    // 10. Return a code point whose value is code point.\n\t    return code_point;\n\t  };\n\t}\n\t\n\t/**\n\t * @constructor\n\t * @implements {Encoder}\n\t * @param {{fatal: boolean}} options\n\t */\n\tfunction UTF8Encoder(options) {\n\t  var fatal = options.fatal;\n\t  /**\n\t   * @param {Stream} stream Input stream.\n\t   * @param {number} code_point Next code point read from the stream.\n\t   * @return {(number|!Array.<number>)} Byte(s) to emit.\n\t   */\n\t  this.handler = function (stream, code_point) {\n\t    // 1. If code point is end-of-stream, return finished.\n\t    if (code_point === end_of_stream) return finished;\n\t\n\t    // 2. If code point is in the range U+0000 to U+007F, return a\n\t    // byte whose value is code point.\n\t    if (inRange(code_point, 0x0000, 0x007f)) return code_point;\n\t\n\t    // 3. Set count and offset based on the range code point is in:\n\t    var count, offset;\n\t    // U+0080 to U+07FF:    1 and 0xC0\n\t    if (inRange(code_point, 0x0080, 0x07FF)) {\n\t      count = 1;\n\t      offset = 0xC0;\n\t    }\n\t    // U+0800 to U+FFFF:    2 and 0xE0\n\t    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n\t        count = 2;\n\t        offset = 0xE0;\n\t      }\n\t      // U+10000 to U+10FFFF: 3 and 0xF0\n\t      else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n\t          count = 3;\n\t          offset = 0xF0;\n\t        }\n\t\n\t    // 4.Let bytes be a byte sequence whose first byte is (code\n\t    // point >> (6 × count)) + offset.\n\t    var bytes = [(code_point >> 6 * count) + offset];\n\t\n\t    // 5. Run these substeps while count is greater than 0:\n\t    while (count > 0) {\n\t\n\t      // 1. Set temp to code point >> (6 × (count − 1)).\n\t      var temp = code_point >> 6 * (count - 1);\n\t\n\t      // 2. Append to bytes 0x80 | (temp & 0x3F).\n\t      bytes.push(0x80 | temp & 0x3F);\n\t\n\t      // 3. Decrease count by one.\n\t      count -= 1;\n\t    }\n\t\n\t    // 6. Return bytes bytes, in order.\n\t    return bytes;\n\t  };\n\t}\n\t\n\texports.TextEncoder = TextEncoder;\n\texports.TextDecoder = TextDecoder;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// the whatwg-fetch polyfill installs the fetch() function\n\t// on the global object (window or self)\n\t//\n\t// Return that as the export for use in Webpack, Browserify etc.\n\t__webpack_require__(6);\n\tmodule.exports = self.fetch.bind(self);\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t(function (self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return;\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && function () {\n\t      try {\n\t        new Blob();\n\t        return true;\n\t      } catch (e) {\n\t        return false;\n\t      }\n\t    }(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  };\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n\t\n\t    var isDataView = function isDataView(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj);\n\t    };\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n\t    };\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name);\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name');\n\t    }\n\t    return name.toLowerCase();\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value);\n\t    }\n\t    return value;\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function next() {\n\t        var value = items.shift();\n\t        return { done: value === undefined, value: value };\n\t      }\n\t    };\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function () {\n\t        return iterator;\n\t      };\n\t    }\n\t\n\t    return iterator;\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {};\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function (value, name) {\n\t        this.append(name, value);\n\t      }, this);\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function (name) {\n\t        this.append(name, headers[name]);\n\t      }, this);\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function (name, value) {\n\t    name = normalizeName(name);\n\t    value = normalizeValue(value);\n\t    var oldValue = this.map[name];\n\t    this.map[name] = oldValue ? oldValue + ',' + value : value;\n\t  };\n\t\n\t  Headers.prototype['delete'] = function (name) {\n\t    delete this.map[normalizeName(name)];\n\t  };\n\t\n\t  Headers.prototype.get = function (name) {\n\t    name = normalizeName(name);\n\t    return this.has(name) ? this.map[name] : null;\n\t  };\n\t\n\t  Headers.prototype.has = function (name) {\n\t    return this.map.hasOwnProperty(normalizeName(name));\n\t  };\n\t\n\t  Headers.prototype.set = function (name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value);\n\t  };\n\t\n\t  Headers.prototype.forEach = function (callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this);\n\t      }\n\t    }\n\t  };\n\t\n\t  Headers.prototype.keys = function () {\n\t    var items = [];\n\t    this.forEach(function (value, name) {\n\t      items.push(name);\n\t    });\n\t    return iteratorFor(items);\n\t  };\n\t\n\t  Headers.prototype.values = function () {\n\t    var items = [];\n\t    this.forEach(function (value) {\n\t      items.push(value);\n\t    });\n\t    return iteratorFor(items);\n\t  };\n\t\n\t  Headers.prototype.entries = function () {\n\t    var items = [];\n\t    this.forEach(function (value, name) {\n\t      items.push([name, value]);\n\t    });\n\t    return iteratorFor(items);\n\t  };\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'));\n\t    }\n\t    body.bodyUsed = true;\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function (resolve, reject) {\n\t      reader.onload = function () {\n\t        resolve(reader.result);\n\t      };\n\t      reader.onerror = function () {\n\t        reject(reader.error);\n\t      };\n\t    });\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader();\n\t    var promise = fileReaderReady(reader);\n\t    reader.readAsArrayBuffer(blob);\n\t    return promise;\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader();\n\t    var promise = fileReaderReady(reader);\n\t    reader.readAsText(blob);\n\t    return promise;\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf);\n\t    var chars = new Array(view.length);\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i]);\n\t    }\n\t    return chars.join('');\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0);\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength);\n\t      view.set(new Uint8Array(buf));\n\t      return view.buffer;\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false;\n\t\n\t    this._initBody = function (body) {\n\t      this._bodyInit = body;\n\t      if (!body) {\n\t        this._bodyText = '';\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body;\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body;\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body;\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString();\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer);\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body);\n\t      } else {\n\t        throw new Error('unsupported BodyInit type');\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type);\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n\t        }\n\t      }\n\t    };\n\t\n\t    if (support.blob) {\n\t      this.blob = function () {\n\t        var rejected = consumed(this);\n\t        if (rejected) {\n\t          return rejected;\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob);\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob');\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]));\n\t        }\n\t      };\n\t\n\t      this.arrayBuffer = function () {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer);\n\t        }\n\t      };\n\t    }\n\t\n\t    this.text = function () {\n\t      var rejected = consumed(this);\n\t      if (rejected) {\n\t        return rejected;\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob);\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text');\n\t      } else {\n\t        return Promise.resolve(this._bodyText);\n\t      }\n\t    };\n\t\n\t    if (support.formData) {\n\t      this.formData = function () {\n\t        return this.text().then(decode);\n\t      };\n\t    }\n\t\n\t    this.json = function () {\n\t      return this.text().then(JSON.parse);\n\t    };\n\t\n\t    return this;\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase();\n\t    return methods.indexOf(upcased) > -1 ? upcased : method;\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {};\n\t    var body = options.body;\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read');\n\t      }\n\t      this.url = input.url;\n\t      this.credentials = input.credentials;\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers);\n\t      }\n\t      this.method = input.method;\n\t      this.mode = input.mode;\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit;\n\t        input.bodyUsed = true;\n\t      }\n\t    } else {\n\t      this.url = String(input);\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit';\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers);\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET');\n\t    this.mode = options.mode || this.mode || null;\n\t    this.referrer = null;\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests');\n\t    }\n\t    this._initBody(body);\n\t  }\n\t\n\t  Request.prototype.clone = function () {\n\t    return new Request(this, { body: this._bodyInit });\n\t  };\n\t\n\t  function decode(body) {\n\t    var form = new FormData();\n\t    body.trim().split('&').forEach(function (bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=');\n\t        var name = split.shift().replace(/\\+/g, ' ');\n\t        var value = split.join('=').replace(/\\+/g, ' ');\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value));\n\t      }\n\t    });\n\t    return form;\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers();\n\t    rawHeaders.split(/\\r?\\n/).forEach(function (line) {\n\t      var parts = line.split(':');\n\t      var key = parts.shift().trim();\n\t      if (key) {\n\t        var value = parts.join(':').trim();\n\t        headers.append(key, value);\n\t      }\n\t    });\n\t    return headers;\n\t  }\n\t\n\t  Body.call(Request.prototype);\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {};\n\t    }\n\t\n\t    this.type = 'default';\n\t    this.status = 'status' in options ? options.status : 200;\n\t    this.ok = this.status >= 200 && this.status < 300;\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n\t    this.headers = new Headers(options.headers);\n\t    this.url = options.url || '';\n\t    this._initBody(bodyInit);\n\t  }\n\t\n\t  Body.call(Response.prototype);\n\t\n\t  Response.prototype.clone = function () {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    });\n\t  };\n\t\n\t  Response.error = function () {\n\t    var response = new Response(null, { status: 0, statusText: '' });\n\t    response.type = 'error';\n\t    return response;\n\t  };\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308];\n\t\n\t  Response.redirect = function (url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code');\n\t    }\n\t\n\t    return new Response(null, { status: status, headers: { location: url } });\n\t  };\n\t\n\t  self.Headers = Headers;\n\t  self.Request = Request;\n\t  self.Response = Response;\n\t\n\t  self.fetch = function (input, init) {\n\t    return new Promise(function (resolve, reject) {\n\t      var request = new Request(input, init);\n\t      var xhr = new XMLHttpRequest();\n\t\n\t      xhr.onload = function () {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        };\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n\t        resolve(new Response(body, options));\n\t      };\n\t\n\t      xhr.onerror = function () {\n\t        reject(new TypeError('Network request failed'));\n\t      };\n\t\n\t      xhr.ontimeout = function () {\n\t        reject(new TypeError('Network request failed'));\n\t      };\n\t\n\t      xhr.open(request.method, request.url, true);\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true;\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob';\n\t      }\n\t\n\t      request.headers.forEach(function (value, name) {\n\t        xhr.setRequestHeader(name, value);\n\t      });\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n\t    });\n\t  };\n\t  self.fetch.polyfill = true;\n\t})(typeof self !== 'undefined' ? self : undefined);\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar ExtJSON = __webpack_require__(8);\n\tExtJSON.BSON = __webpack_require__(13);\n\t\n\tmodule.exports = ExtJSON;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {\"use strict\";\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar bsonModule = __webpack_require__(13);\n\tvar atob = __webpack_require__(15).atob;\n\tvar bufferConstructor = null;\n\t\n\tif (typeof Buffer !== 'undefined') {\n\t  bufferConstructor = new Buffer(1) instanceof Uint8Array ? Buffer : Uint8Array;\n\t} else {\n\t  bufferConstructor = Uint8Array;\n\t}\n\t\n\tvar ExtJSON = function ExtJSON(module) {\n\t  if (module) {\n\t    for (var i = 0; i < BSONTypes.length; i++) {\n\t      if (!module[BSONTypes[i]]) throw new Error('passed in module does not contain all BSON types required');\n\t    }\n\t\n\t    this.bson = module;\n\t  } else {\n\t    this.bson = bsonModule;\n\t  }\n\t};\n\t\n\tExtJSON.extend = function (module) {\n\t  if (!module) throw new Error(\"expecting mongodb module, invoke by calling ExtJSON.extend(require('mongodb'))\");\n\t  // Rewrite passed in types\n\t  for (var i = 0; i < BSONTypes.length; i++) {\n\t    if (module[BSONTypes[i]]) {\n\t      // Add the toJSON to the passed in types\n\t      // This lets us modify the toJSON method withou breaking\n\t      // backward compatibility\n\t      module[BSONTypes[i]].prototype.toJSON = bsonModule[BSONTypes[i]].prototype.toJSON;\n\t    }\n\t  }\n\t\n\t  return module;\n\t};\n\t\n\tfunction deseralizeValue(self, value, options) {\n\t  if (value['$oid'] != null) {\n\t    return new self.bson.ObjectID(value['$oid']);\n\t  } else if (value['$date'] && typeof value['$date'] == 'string') {\n\t    return Date.parse(value['$date']);\n\t  } else if (value['$date'] && value['$date'] instanceof self.bson.Long) {\n\t    var date = new Date();\n\t    date.setTime(value['$date'].toNumber());\n\t    return date;\n\t  } else if (value['$binary'] != null) {\n\t    if (typeof Buffer !== 'undefined') {\n\t      if (bufferConstructor === Buffer) {\n\t        var data = new Buffer(value['$binary'], 'base64');\n\t        var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n\t        return new self.bson.Binary(data, type);\n\t      }\n\t    }\n\t\n\t    var data = new Uint8Array(atob(value['$binary']).split(\"\").map(function (c) {\n\t      return c.charCodeAt(0);\n\t    }));\n\t\n\t    var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n\t    return new self.bson.Binary(data, type);\n\t  } else if (value['$maxKey'] != null) {\n\t    return new self.bson.MaxKey();\n\t  } else if (value['$minKey'] != null) {\n\t    return new self.bson.MinKey();\n\t  } else if (value['$code'] != null) {\n\t    return new self.bson.Code(value['$code'], deseralizeValue(self, value['$scope'] || {}, options));\n\t  } else if (value['$numberLong'] != null) {\n\t    return self.bson.Long.fromString(value['$numberLong']);\n\t  } else if (value['$numberDouble'] != null && options.strict) {\n\t    return new self.bson.Double(parseFloat(value['$numberDouble']));\n\t  } else if (value['$numberDouble'] != null && !options.strict) {\n\t    return parseFloat(value['$numberDouble']);\n\t  } else if (value['$numberInt'] != null && options.strict) {\n\t    return new self.bson.Int32(parseInt(value['$numberInt'], 10));\n\t  } else if (value['$numberInt'] != null && !options.strict) {\n\t    return parseInt(value['$numberInt'], 10);\n\t  } else if (value['$numberDecimal'] != null) {\n\t    return self.bson.Decimal128.fromString(value['$numberDecimal']);\n\t  } else if (value['$regex'] != null) {\n\t    return new self.bson.BSONRegExp(value['$regex'], value['$options'] || '');\n\t  } else if (value['$symbol'] != null) {\n\t    return new self.bson.Symbol(value['$symbol']);\n\t  } else if (value['$ref'] != null) {\n\t    return new self.bson.DBRef(value['$ref'], deseralizeValue(self, value['$id'], options), value['$db']);\n\t  } else if (value['$timestamp'] != null) {\n\t    return self.bson.Timestamp.fromString(value['$timestamp']);\n\t  } else if (typeof value == 'number' && options.strict) {\n\t    if (Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n\t      if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n\t        return new self.bson.Int32(value);\n\t      } else if (value >= JS_INT_MIN && value <= JS_INT_MAX) {\n\t        return new self.bson.Double(value);\n\t      } else {\n\t        return new self.bson.Long.fromNumber(value);\n\t      }\n\t    } else {\n\t      return new self.bson.Double(value);\n\t    }\n\t  } else if (typeof value == 'number' && !options.strict) {\n\t    if (Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n\t      if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n\t        return value;\n\t      } else if (value >= JS_INT_MIN && value <= JS_INT_MAX) {\n\t        return value;\n\t      } else {\n\t        return new self.bson.Long.fromNumber(value);\n\t      }\n\t    } else {\n\t      return value;\n\t    }\n\t  } else {\n\t    return value;\n\t  }\n\t}\n\t\n\tExtJSON.prototype.parse = function (text, options) {\n\t  var self = this;\n\t  options = options || { strict: true };\n\t\n\t  var object = JSON.parse(text, function (key, value) {\n\t    return deseralizeValue(self, value, options);\n\t  });\n\t\n\t  return object;\n\t};\n\t\n\t//\n\t// Serializer\n\t//\n\t\n\t// MAX INT32 boundaries\n\tvar BSON_INT32_MAX = 0x7FFFFFFF;\n\tvar BSON_INT32_MIN = -0x80000000;\n\t\n\t// JS MAX PRECISE VALUES\n\tvar JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\n\tvar JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\t\n\tExtJSON.prototype.stringify = function (value, reducer, indents) {\n\t  var doc = null;\n\t\n\t  if (Array.isArray(value)) {\n\t    doc = serializeArray(value);\n\t  } else {\n\t    doc = serializeDocument(value);\n\t  }\n\t\n\t  return JSON.stringify(doc, reducer, indents);\n\t};\n\t\n\tfunction serializeArray(array) {\n\t  var _array = new Array(array.length);\n\t\n\t  for (var i = 0; i < array.length; i++) {\n\t    _array[i] = serializeValue(array[i]);\n\t  }\n\t\n\t  return _array;\n\t}\n\t\n\tfunction serializeValue(value) {\n\t  if (value instanceof Date) {\n\t    return { $date: { $numberLong: value.getTime().toString() } };\n\t  } else if (typeof value == 'number') {\n\t    if (Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n\t      if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n\t        return { $numberInt: value.toString() };\n\t      } else if (value >= JS_INT_MIN && value <= JS_INT_MAX) {\n\t        return { $numberDouble: value.toString() };\n\t      } else {\n\t        return { $numberLong: value.toString() };\n\t      }\n\t    } else {\n\t      return { $numberDouble: value.toString() };\n\t    }\n\t  } else if (Array.isArray(value)) {\n\t    return serializeArray(value);\n\t  } else if (value != null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object') {\n\t    return serializeDocument(value);\n\t  }\n\t\n\t  return value;\n\t}\n\t\n\tvar BSONTypes = ['Binary', 'Code', 'DBRef', 'Decimal128', 'Double', 'Int32', 'Long', 'MaxKey', 'MinKey', 'ObjectID', 'BSONRegExp', 'Symbol', 'Timestamp'];\n\t\n\tfunction serializeDocument(doc) {\n\t  if (doc == null || (typeof doc === 'undefined' ? 'undefined' : _typeof(doc)) !== 'object') throw new Error('not an object instance');\n\t  var _doc = {};\n\t\n\t  for (var name in doc) {\n\t    if (Array.isArray(doc[name])) {\n\t      _doc[name] = serializeArray(doc[name]);\n\t    } else if (doc[name] != null && doc[name]._bsontype && BSONTypes.indexOf(doc[name]._bsontype) != -1) {\n\t      _doc[name] = doc[name];\n\t    } else if (doc[name] instanceof Date) {\n\t      _doc[name] = serializeValue(doc[name]);\n\t    } else if (doc[name] != null && _typeof(doc[name]) === 'object') {\n\t      _doc[name] = serializeDocument(doc[name]);\n\t    } else {\n\t      _doc[name] = serializeValue(doc[name]);\n\t    }\n\t  }\n\t\n\t  return _doc;\n\t}\n\t\n\t// Export the Extended BSON\n\tmodule.exports = ExtJSON;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9).Buffer))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict';\n\t\n\tvar base64 = __webpack_require__(10);\n\tvar ieee754 = __webpack_require__(11);\n\tvar isArray = __webpack_require__(12);\n\t\n\texports.Buffer = Buffer;\n\texports.SlowBuffer = SlowBuffer;\n\texports.INSPECT_MAX_BYTES = 50;\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength();\n\t\n\tfunction typedArraySupport() {\n\t  try {\n\t    var arr = new Uint8Array(1);\n\t    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function foo() {\n\t        return 42;\n\t      } };\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t}\n\t\n\tfunction kMaxLength() {\n\t  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n\t}\n\t\n\tfunction createBuffer(that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length');\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length);\n\t    that.__proto__ = Buffer.prototype;\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length);\n\t    }\n\t    that.length = length;\n\t  }\n\t\n\t  return that;\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer(arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length);\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error('If encoding is specified then the first argument must be a string');\n\t    }\n\t    return allocUnsafe(this, arg);\n\t  }\n\t  return from(this, arg, encodingOrOffset, length);\n\t}\n\t\n\tBuffer.poolSize = 8192; // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype;\n\t  return arr;\n\t};\n\t\n\tfunction from(that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number');\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length);\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset);\n\t  }\n\t\n\t  return fromObject(that, value);\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length);\n\t};\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype;\n\t  Buffer.__proto__ = Uint8Array;\n\t  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    });\n\t  }\n\t}\n\t\n\tfunction assertSize(size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number');\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative');\n\t  }\n\t}\n\t\n\tfunction alloc(that, size, fill, encoding) {\n\t  assertSize(size);\n\t  if (size <= 0) {\n\t    return createBuffer(that, size);\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n\t  }\n\t  return createBuffer(that, size);\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding);\n\t};\n\t\n\tfunction allocUnsafe(that, size) {\n\t  assertSize(size);\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0;\n\t    }\n\t  }\n\t  return that;\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size);\n\t};\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size);\n\t};\n\t\n\tfunction fromString(that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8';\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding');\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0;\n\t  that = createBuffer(that, length);\n\t\n\t  var actual = that.write(string, encoding);\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual);\n\t  }\n\t\n\t  return that;\n\t}\n\t\n\tfunction fromArrayLike(that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n\t  that = createBuffer(that, length);\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255;\n\t  }\n\t  return that;\n\t}\n\t\n\tfunction fromArrayBuffer(that, array, byteOffset, length) {\n\t  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds');\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds');\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array);\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset);\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length);\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array;\n\t    that.__proto__ = Buffer.prototype;\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array);\n\t  }\n\t  return that;\n\t}\n\t\n\tfunction fromObject(that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0;\n\t    that = createBuffer(that, len);\n\t\n\t    if (that.length === 0) {\n\t      return that;\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len);\n\t    return that;\n\t  }\n\t\n\t  if (obj) {\n\t    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0);\n\t      }\n\t      return fromArrayLike(that, obj);\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data);\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n\t}\n\t\n\tfunction checked(length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n\t  }\n\t  return length | 0;\n\t}\n\t\n\tfunction SlowBuffer(length) {\n\t  if (+length != length) {\n\t    // eslint-disable-line eqeqeq\n\t    length = 0;\n\t  }\n\t  return Buffer.alloc(+length);\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer(b) {\n\t  return !!(b != null && b._isBuffer);\n\t};\n\t\n\tBuffer.compare = function compare(a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers');\n\t  }\n\t\n\t  if (a === b) return 0;\n\t\n\t  var x = a.length;\n\t  var y = b.length;\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i];\n\t      y = b[i];\n\t      break;\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1;\n\t  if (y < x) return 1;\n\t  return 0;\n\t};\n\t\n\tBuffer.isEncoding = function isEncoding(encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t};\n\t\n\tBuffer.concat = function concat(list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers');\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0);\n\t  }\n\t\n\t  var i;\n\t  if (length === undefined) {\n\t    length = 0;\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length;\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length);\n\t  var pos = 0;\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i];\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers');\n\t    }\n\t    buf.copy(buffer, pos);\n\t    pos += buf.length;\n\t  }\n\t  return buffer;\n\t};\n\t\n\tfunction byteLength(string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length;\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength;\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string;\n\t  }\n\t\n\t  var len = string.length;\n\t  if (len === 0) return 0;\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false;\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len;\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length;\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2;\n\t      case 'hex':\n\t        return len >>> 1;\n\t      case 'base64':\n\t        return base64ToBytes(string).length;\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\t        encoding = ('' + encoding).toLowerCase();\n\t        loweredCase = true;\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength;\n\t\n\tfunction slowToString(encoding, start, end) {\n\t  var loweredCase = false;\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0;\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return '';\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length;\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return '';\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0;\n\t  start >>>= 0;\n\t\n\t  if (end <= start) {\n\t    return '';\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8';\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end);\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end);\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end);\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end);\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end);\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end);\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n\t        encoding = (encoding + '').toLowerCase();\n\t        loweredCase = true;\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true;\n\t\n\tfunction swap(b, n, m) {\n\t  var i = b[n];\n\t  b[n] = b[m];\n\t  b[m] = i;\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16() {\n\t  var len = this.length;\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits');\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1);\n\t  }\n\t  return this;\n\t};\n\t\n\tBuffer.prototype.swap32 = function swap32() {\n\t  var len = this.length;\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits');\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3);\n\t    swap(this, i + 1, i + 2);\n\t  }\n\t  return this;\n\t};\n\t\n\tBuffer.prototype.swap64 = function swap64() {\n\t  var len = this.length;\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits');\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7);\n\t    swap(this, i + 1, i + 6);\n\t    swap(this, i + 2, i + 5);\n\t    swap(this, i + 3, i + 4);\n\t  }\n\t  return this;\n\t};\n\t\n\tBuffer.prototype.toString = function toString() {\n\t  var length = this.length | 0;\n\t  if (length === 0) return '';\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length);\n\t  return slowToString.apply(this, arguments);\n\t};\n\t\n\tBuffer.prototype.equals = function equals(b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n\t  if (this === b) return true;\n\t  return Buffer.compare(this, b) === 0;\n\t};\n\t\n\tBuffer.prototype.inspect = function inspect() {\n\t  var str = '';\n\t  var max = exports.INSPECT_MAX_BYTES;\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n\t    if (this.length > max) str += ' ... ';\n\t  }\n\t  return '<Buffer ' + str + '>';\n\t};\n\t\n\tBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer');\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0;\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0;\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0;\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length;\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index');\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0;\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1;\n\t  }\n\t  if (start >= end) {\n\t    return 1;\n\t  }\n\t\n\t  start >>>= 0;\n\t  end >>>= 0;\n\t  thisStart >>>= 0;\n\t  thisEnd >>>= 0;\n\t\n\t  if (this === target) return 0;\n\t\n\t  var x = thisEnd - thisStart;\n\t  var y = end - start;\n\t  var len = Math.min(x, y);\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd);\n\t  var targetCopy = target.slice(start, end);\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i];\n\t      y = targetCopy[i];\n\t      break;\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1;\n\t  if (y < x) return 1;\n\t  return 0;\n\t};\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1;\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset;\n\t    byteOffset = 0;\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff;\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000;\n\t  }\n\t  byteOffset = +byteOffset; // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : buffer.length - 1;\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1;else byteOffset = buffer.length - 1;\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0;else return -1;\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding);\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1;\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF; // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer');\n\t}\n\t\n\tfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1;\n\t  var arrLength = arr.length;\n\t  var valLength = val.length;\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase();\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1;\n\t      }\n\t      indexSize = 2;\n\t      arrLength /= 2;\n\t      valLength /= 2;\n\t      byteOffset /= 2;\n\t    }\n\t  }\n\t\n\t  function read(buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i];\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize);\n\t    }\n\t  }\n\t\n\t  var i;\n\t  if (dir) {\n\t    var foundIndex = -1;\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i;\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex;\n\t        foundIndex = -1;\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true;\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false;\n\t          break;\n\t        }\n\t      }\n\t      if (found) return i;\n\t    }\n\t  }\n\t\n\t  return -1;\n\t}\n\t\n\tBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1;\n\t};\n\t\n\tBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n\t};\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n\t};\n\t\n\tfunction hexWrite(buf, string, offset, length) {\n\t  offset = Number(offset) || 0;\n\t  var remaining = buf.length - offset;\n\t  if (!length) {\n\t    length = remaining;\n\t  } else {\n\t    length = Number(length);\n\t    if (length > remaining) {\n\t      length = remaining;\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length;\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2;\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16);\n\t    if (isNaN(parsed)) return i;\n\t    buf[offset + i] = parsed;\n\t  }\n\t  return i;\n\t}\n\t\n\tfunction utf8Write(buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n\t}\n\t\n\tfunction asciiWrite(buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length);\n\t}\n\t\n\tfunction latin1Write(buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length);\n\t}\n\t\n\tfunction base64Write(buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length);\n\t}\n\t\n\tfunction ucs2Write(buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n\t}\n\t\n\tBuffer.prototype.write = function write(string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8';\n\t    length = this.length;\n\t    offset = 0;\n\t    // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset;\n\t    length = this.length;\n\t    offset = 0;\n\t    // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0;\n\t    if (isFinite(length)) {\n\t      length = length | 0;\n\t      if (encoding === undefined) encoding = 'utf8';\n\t    } else {\n\t      encoding = length;\n\t      length = undefined;\n\t    }\n\t    // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n\t  }\n\t\n\t  var remaining = this.length - offset;\n\t  if (length === undefined || length > remaining) length = remaining;\n\t\n\t  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds');\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8';\n\t\n\t  var loweredCase = false;\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length);\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length);\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length);\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length);\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length);\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length);\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n\t        encoding = ('' + encoding).toLowerCase();\n\t        loweredCase = true;\n\t    }\n\t  }\n\t};\n\t\n\tBuffer.prototype.toJSON = function toJSON() {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  };\n\t};\n\t\n\tfunction base64Slice(buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf);\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end));\n\t  }\n\t}\n\t\n\tfunction utf8Slice(buf, start, end) {\n\t  end = Math.min(buf.length, end);\n\t  var res = [];\n\t\n\t  var i = start;\n\t  while (i < end) {\n\t    var firstByte = buf[i];\n\t    var codePoint = null;\n\t    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte;\n\t          }\n\t          break;\n\t        case 2:\n\t          secondByte = buf[i + 1];\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint;\n\t            }\n\t          }\n\t          break;\n\t        case 3:\n\t          secondByte = buf[i + 1];\n\t          thirdByte = buf[i + 2];\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint;\n\t            }\n\t          }\n\t          break;\n\t        case 4:\n\t          secondByte = buf[i + 1];\n\t          thirdByte = buf[i + 2];\n\t          fourthByte = buf[i + 3];\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint;\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD;\n\t      bytesPerSequence = 1;\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000;\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n\t      codePoint = 0xDC00 | codePoint & 0x3FF;\n\t    }\n\t\n\t    res.push(codePoint);\n\t    i += bytesPerSequence;\n\t  }\n\t\n\t  return decodeCodePointsArray(res);\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\t\n\tfunction decodeCodePointsArray(codePoints) {\n\t  var len = codePoints.length;\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = '';\n\t  var i = 0;\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction asciiSlice(buf, start, end) {\n\t  var ret = '';\n\t  end = Math.min(buf.length, end);\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F);\n\t  }\n\t  return ret;\n\t}\n\t\n\tfunction latin1Slice(buf, start, end) {\n\t  var ret = '';\n\t  end = Math.min(buf.length, end);\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i]);\n\t  }\n\t  return ret;\n\t}\n\t\n\tfunction hexSlice(buf, start, end) {\n\t  var len = buf.length;\n\t\n\t  if (!start || start < 0) start = 0;\n\t  if (!end || end < 0 || end > len) end = len;\n\t\n\t  var out = '';\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i]);\n\t  }\n\t  return out;\n\t}\n\t\n\tfunction utf16leSlice(buf, start, end) {\n\t  var bytes = buf.slice(start, end);\n\t  var res = '';\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n\t  }\n\t  return res;\n\t}\n\t\n\tBuffer.prototype.slice = function slice(start, end) {\n\t  var len = this.length;\n\t  start = ~~start;\n\t  end = end === undefined ? len : ~~end;\n\t\n\t  if (start < 0) {\n\t    start += len;\n\t    if (start < 0) start = 0;\n\t  } else if (start > len) {\n\t    start = len;\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len;\n\t    if (end < 0) end = 0;\n\t  } else if (end > len) {\n\t    end = len;\n\t  }\n\t\n\t  if (end < start) end = start;\n\t\n\t  var newBuf;\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end);\n\t    newBuf.__proto__ = Buffer.prototype;\n\t  } else {\n\t    var sliceLen = end - start;\n\t    newBuf = new Buffer(sliceLen, undefined);\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start];\n\t    }\n\t  }\n\t\n\t  return newBuf;\n\t};\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset(offset, ext, length) {\n\t  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\t\n\t  var val = this[offset];\n\t  var mul = 1;\n\t  var i = 0;\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul;\n\t  }\n\t\n\t  return val;\n\t};\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length);\n\t  }\n\t\n\t  var val = this[offset + --byteLength];\n\t  var mul = 1;\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul;\n\t  }\n\t\n\t  return val;\n\t};\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length);\n\t  return this[offset];\n\t};\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length);\n\t  return this[offset] | this[offset + 1] << 8;\n\t};\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length);\n\t  return this[offset] << 8 | this[offset + 1];\n\t};\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t\n\t  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n\t};\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t\n\t  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n\t};\n\t\n\tBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\t\n\t  var val = this[offset];\n\t  var mul = 1;\n\t  var i = 0;\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul;\n\t  }\n\t  mul *= 0x80;\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\t\n\t  return val;\n\t};\n\t\n\tBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\t\n\t  var i = byteLength;\n\t  var mul = 1;\n\t  var val = this[offset + --i];\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul;\n\t  }\n\t  mul *= 0x80;\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\t\n\t  return val;\n\t};\n\t\n\tBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length);\n\t  if (!(this[offset] & 0x80)) return this[offset];\n\t  return (0xff - this[offset] + 1) * -1;\n\t};\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length);\n\t  var val = this[offset] | this[offset + 1] << 8;\n\t  return val & 0x8000 ? val | 0xFFFF0000 : val;\n\t};\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length);\n\t  var val = this[offset + 1] | this[offset] << 8;\n\t  return val & 0x8000 ? val | 0xFFFF0000 : val;\n\t};\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t\n\t  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n\t};\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t\n\t  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n\t};\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t  return ieee754.read(this, offset, true, 23, 4);\n\t};\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t  return ieee754.read(this, offset, false, 23, 4);\n\t};\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length);\n\t  return ieee754.read(this, offset, true, 52, 8);\n\t};\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length);\n\t  return ieee754.read(this, offset, false, 52, 8);\n\t};\n\t\n\tfunction checkInt(buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0);\n\t  }\n\t\n\t  var mul = 1;\n\t  var i = 0;\n\t  this[offset] = value & 0xFF;\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = value / mul & 0xFF;\n\t  }\n\t\n\t  return offset + byteLength;\n\t};\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0);\n\t  }\n\t\n\t  var i = byteLength - 1;\n\t  var mul = 1;\n\t  this[offset + i] = value & 0xFF;\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = value / mul & 0xFF;\n\t  }\n\t\n\t  return offset + byteLength;\n\t};\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n\t  this[offset] = value & 0xff;\n\t  return offset + 1;\n\t};\n\t\n\tfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1;\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value & 0xff;\n\t    this[offset + 1] = value >>> 8;\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true);\n\t  }\n\t  return offset + 2;\n\t};\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value >>> 8;\n\t    this[offset + 1] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false);\n\t  }\n\t  return offset + 2;\n\t};\n\t\n\tfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1;\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = value >>> 24;\n\t    this[offset + 2] = value >>> 16;\n\t    this[offset + 1] = value >>> 8;\n\t    this[offset] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true);\n\t  }\n\t  return offset + 4;\n\t};\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value >>> 24;\n\t    this[offset + 1] = value >>> 16;\n\t    this[offset + 2] = value >>> 8;\n\t    this[offset + 3] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false);\n\t  }\n\t  return offset + 4;\n\t};\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1);\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n\t  }\n\t\n\t  var i = 0;\n\t  var mul = 1;\n\t  var sub = 0;\n\t  this[offset] = value & 0xFF;\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1;\n\t    }\n\t    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n\t  }\n\t\n\t  return offset + byteLength;\n\t};\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1);\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n\t  }\n\t\n\t  var i = byteLength - 1;\n\t  var mul = 1;\n\t  var sub = 0;\n\t  this[offset + i] = value & 0xFF;\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1;\n\t    }\n\t    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n\t  }\n\t\n\t  return offset + byteLength;\n\t};\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n\t  if (value < 0) value = 0xff + value + 1;\n\t  this[offset] = value & 0xff;\n\t  return offset + 1;\n\t};\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value & 0xff;\n\t    this[offset + 1] = value >>> 8;\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true);\n\t  }\n\t  return offset + 2;\n\t};\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value >>> 8;\n\t    this[offset + 1] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false);\n\t  }\n\t  return offset + 2;\n\t};\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value & 0xff;\n\t    this[offset + 1] = value >>> 8;\n\t    this[offset + 2] = value >>> 16;\n\t    this[offset + 3] = value >>> 24;\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true);\n\t  }\n\t  return offset + 4;\n\t};\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\t  if (value < 0) value = 0xffffffff + value + 1;\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value >>> 24;\n\t    this[offset + 1] = value >>> 16;\n\t    this[offset + 2] = value >>> 8;\n\t    this[offset + 3] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false);\n\t  }\n\t  return offset + 4;\n\t};\n\t\n\tfunction checkIEEE754(buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n\t  if (offset < 0) throw new RangeError('Index out of range');\n\t}\n\t\n\tfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n\t  return offset + 4;\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert);\n\t};\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert);\n\t};\n\t\n\tfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n\t  return offset + 8;\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert);\n\t};\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert);\n\t};\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n\t  if (!start) start = 0;\n\t  if (!end && end !== 0) end = this.length;\n\t  if (targetStart >= target.length) targetStart = target.length;\n\t  if (!targetStart) targetStart = 0;\n\t  if (end > 0 && end < start) end = start;\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0;\n\t  if (target.length === 0 || this.length === 0) return 0;\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds');\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length;\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start;\n\t  }\n\t\n\t  var len = end - start;\n\t  var i;\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start];\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start];\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n\t  }\n\t\n\t  return len;\n\t};\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill(val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start;\n\t      start = 0;\n\t      end = this.length;\n\t    } else if (typeof end === 'string') {\n\t      encoding = end;\n\t      end = this.length;\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0);\n\t      if (code < 256) {\n\t        val = code;\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string');\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding);\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255;\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index');\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this;\n\t  }\n\t\n\t  start = start >>> 0;\n\t  end = end === undefined ? this.length : end >>> 0;\n\t\n\t  if (!val) val = 0;\n\t\n\t  var i;\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val;\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n\t    var len = bytes.length;\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len];\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\t\n\tfunction base64clean(str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return '';\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '=';\n\t  }\n\t  return str;\n\t}\n\t\n\tfunction stringtrim(str) {\n\t  if (str.trim) return str.trim();\n\t  return str.replace(/^\\s+|\\s+$/g, '');\n\t}\n\t\n\tfunction toHex(n) {\n\t  if (n < 16) return '0' + n.toString(16);\n\t  return n.toString(16);\n\t}\n\t\n\tfunction utf8ToBytes(string, units) {\n\t  units = units || Infinity;\n\t  var codePoint;\n\t  var length = string.length;\n\t  var leadSurrogate = null;\n\t  var bytes = [];\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i);\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t          continue;\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t          continue;\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint;\n\t\n\t        continue;\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t        leadSurrogate = codePoint;\n\t        continue;\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t    }\n\t\n\t    leadSurrogate = null;\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break;\n\t      bytes.push(codePoint);\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break;\n\t      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break;\n\t      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break;\n\t      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n\t    } else {\n\t      throw new Error('Invalid code point');\n\t    }\n\t  }\n\t\n\t  return bytes;\n\t}\n\t\n\tfunction asciiToBytes(str) {\n\t  var byteArray = [];\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF);\n\t  }\n\t  return byteArray;\n\t}\n\t\n\tfunction utf16leToBytes(str, units) {\n\t  var c, hi, lo;\n\t  var byteArray = [];\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break;\n\t\n\t    c = str.charCodeAt(i);\n\t    hi = c >> 8;\n\t    lo = c % 256;\n\t    byteArray.push(lo);\n\t    byteArray.push(hi);\n\t  }\n\t\n\t  return byteArray;\n\t}\n\t\n\tfunction base64ToBytes(str) {\n\t  return base64.toByteArray(base64clean(str));\n\t}\n\t\n\tfunction blitBuffer(src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if (i + offset >= dst.length || i >= src.length) break;\n\t    dst[i + offset] = src[i];\n\t  }\n\t  return i;\n\t}\n\t\n\tfunction isnan(val) {\n\t  return val !== val; // eslint-disable-line no-self-compare\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.byteLength = byteLength;\n\texports.toByteArray = toByteArray;\n\texports.fromByteArray = fromByteArray;\n\t\n\tvar lookup = [];\n\tvar revLookup = [];\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i];\n\t  revLookup[code.charCodeAt(i)] = i;\n\t}\n\t\n\trevLookup['-'.charCodeAt(0)] = 62;\n\trevLookup['_'.charCodeAt(0)] = 63;\n\t\n\tfunction placeHoldersCount(b64) {\n\t  var len = b64.length;\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4');\n\t  }\n\t\n\t  // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\t  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\t}\n\t\n\tfunction byteLength(b64) {\n\t  // base64 is 4/3 + up to two characters of the original data\n\t  return b64.length * 3 / 4 - placeHoldersCount(b64);\n\t}\n\t\n\tfunction toByteArray(b64) {\n\t  var i, j, l, tmp, placeHolders, arr;\n\t  var len = b64.length;\n\t  placeHolders = placeHoldersCount(b64);\n\t\n\t  arr = new Arr(len * 3 / 4 - placeHolders);\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  l = placeHolders > 0 ? len - 4 : len;\n\t\n\t  var L = 0;\n\t\n\t  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n\t    arr[L++] = tmp >> 16 & 0xFF;\n\t    arr[L++] = tmp >> 8 & 0xFF;\n\t    arr[L++] = tmp & 0xFF;\n\t  }\n\t\n\t  if (placeHolders === 2) {\n\t    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n\t    arr[L++] = tmp & 0xFF;\n\t  } else if (placeHolders === 1) {\n\t    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n\t    arr[L++] = tmp >> 8 & 0xFF;\n\t    arr[L++] = tmp & 0xFF;\n\t  }\n\t\n\t  return arr;\n\t}\n\t\n\tfunction tripletToBase64(num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n\t}\n\t\n\tfunction encodeChunk(uint8, start, end) {\n\t  var tmp;\n\t  var output = [];\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n\t    output.push(tripletToBase64(tmp));\n\t  }\n\t  return output.join('');\n\t}\n\t\n\tfunction fromByteArray(uint8) {\n\t  var tmp;\n\t  var len = uint8.length;\n\t  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\t  var output = '';\n\t  var parts = [];\n\t  var maxChunkLength = 16383; // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1];\n\t    output += lookup[tmp >> 2];\n\t    output += lookup[tmp << 4 & 0x3F];\n\t    output += '==';\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n\t    output += lookup[tmp >> 10];\n\t    output += lookup[tmp >> 4 & 0x3F];\n\t    output += lookup[tmp << 2 & 0x3F];\n\t    output += '=';\n\t  }\n\t\n\t  parts.push(output);\n\t\n\t  return parts.join('');\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m;\n\t  var eLen = nBytes * 8 - mLen - 1;\n\t  var eMax = (1 << eLen) - 1;\n\t  var eBias = eMax >> 1;\n\t  var nBits = -7;\n\t  var i = isLE ? nBytes - 1 : 0;\n\t  var d = isLE ? -1 : 1;\n\t  var s = buffer[offset + i];\n\t\n\t  i += d;\n\t\n\t  e = s & (1 << -nBits) - 1;\n\t  s >>= -nBits;\n\t  nBits += eLen;\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & (1 << -nBits) - 1;\n\t  e >>= -nBits;\n\t  nBits += mLen;\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias;\n\t  } else if (e === eMax) {\n\t    return m ? NaN : (s ? -1 : 1) * Infinity;\n\t  } else {\n\t    m = m + Math.pow(2, mLen);\n\t    e = e - eBias;\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n\t};\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c;\n\t  var eLen = nBytes * 8 - mLen - 1;\n\t  var eMax = (1 << eLen) - 1;\n\t  var eBias = eMax >> 1;\n\t  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n\t  var i = isLE ? 0 : nBytes - 1;\n\t  var d = isLE ? 1 : -1;\n\t  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\t\n\t  value = Math.abs(value);\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0;\n\t    e = eMax;\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2);\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--;\n\t      c *= 2;\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c;\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias);\n\t    }\n\t    if (value * c >= 2) {\n\t      e++;\n\t      c /= 2;\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0;\n\t      e = eMax;\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen);\n\t      e = e + eBias;\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n\t      e = 0;\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = e << mLen | m;\n\t  eLen += mLen;\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128;\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar Binary = __webpack_require__(14);\n\tvar Code = __webpack_require__(16);\n\tvar DBRef = __webpack_require__(17);\n\tvar Decimal128 = __webpack_require__(18);\n\tvar Double = __webpack_require__(20);\n\tvar Int32 = __webpack_require__(21);\n\tvar Long = __webpack_require__(19);\n\tvar MaxKey = __webpack_require__(22);\n\tvar MinKey = __webpack_require__(23);\n\tvar ObjectID = __webpack_require__(24);\n\tvar BSONRegExp = __webpack_require__(26);\n\tvar _Symbol = __webpack_require__(27);\n\tvar Timestamp = __webpack_require__(28);\n\t\n\tmodule.exports = {\n\t  Binary: Binary, Code: Code, DBRef: DBRef, Decimal128: Decimal128, Double: Double,\n\t  Int32: Int32, Long: Long, MaxKey: MaxKey, MinKey: MinKey, ObjectID: ObjectID,\n\t  BSONRegExp: BSONRegExp, Symbol: _Symbol, Timestamp: Timestamp\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {\"use strict\";\n\t\n\tvar btoa = __webpack_require__(15).btoa;\n\t\n\t/**\n\t * Module dependencies.\n\t * @ignore\n\t */\n\tfunction convert(integer) {\n\t  var str = Number(integer).toString(16);\n\t  return str.length == 1 ? \"0\" + str : str;\n\t};\n\t\n\t/**\n\t * A class representation of the BSON Binary type.\n\t *\n\t * Sub types\n\t *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.\n\t *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.\n\t *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.\n\t *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.\n\t *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.\n\t *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.\n\t *\n\t * @class\n\t * @param {Buffer} buffer a buffer object containing the binary data.\n\t * @param {Number} [subType] the option binary type.\n\t * @return {Binary}\n\t */\n\tvar Binary = function Binary(buffer, subType) {\n\t  this._bsontype = 'Binary';\n\t\n\t  if (buffer instanceof Number) {\n\t    this.sub_type = buffer;\n\t    this.position = 0;\n\t  } else {\n\t    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;\n\t    this.position = 0;\n\t  }\n\t\n\t  if (buffer != null && !(buffer instanceof Number)) {\n\t    // Only accept Buffer or Uint8Array\n\t    if (typeof buffer == 'string') {\n\t      this.buffer = writeStringToArray(buffer);\n\t    } else if (buffer instanceof Uint8Array) {\n\t      this.buffer = buffer;\n\t    } else {\n\t      throw new Error('passed in buffer must be an Uint8Array instance');\n\t    }\n\t\n\t    this.position = buffer.length;\n\t  } else {\n\t    this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));\n\t    // Set position to start of buffer\n\t    this.position = 0;\n\t  }\n\t};\n\t\n\t/**\n\t * Updates this binary with byte_value.\n\t *\n\t * @method\n\t * @param {String} byte_value a single byte we wish to write.\n\t */\n\tBinary.prototype.put = function (byte_value) {\n\t  // If it's a string and a has more than one character throw an error\n\t  if (byte_value['length'] != null && typeof byte_value != 'number' && byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");\n\t  if (typeof byte_value != 'number' && byte_value < 0 || byte_value > 255) throw new Error(\"only accepts number in a valid unsigned byte range 0-255\");\n\t\n\t  // Decode the byte value once\n\t  var decoded_byte = null;\n\t  if (typeof byte_value == 'string') {\n\t    decoded_byte = byte_value.charCodeAt(0);\n\t  } else if (byte_value['length'] != null) {\n\t    decoded_byte = byte_value[0];\n\t  } else {\n\t    decoded_byte = byte_value;\n\t  }\n\t\n\t  if (this.buffer.length > this.position) {\n\t    this.buffer[this.position++] = decoded_byte;\n\t  } else {\n\t    var buffer = null;\n\t    // Create a new buffer (typed or normal array)\n\t    buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));\n\t\n\t    // We need to copy all the content to the new array\n\t    for (var i = 0; i < this.buffer.length; i++) {\n\t      buffer[i] = this.buffer[i];\n\t    }\n\t\n\t    // Reassign the buffer\n\t    this.buffer = buffer;\n\t    // Write the byte\n\t    this.buffer[this.position++] = decoded_byte;\n\t  }\n\t};\n\t\n\t/**\n\t * Writes a buffer or string to the binary.\n\t *\n\t * @method\n\t * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object.\n\t * @param {number} offset specify the binary of where to write the content.\n\t * @return {null}\n\t */\n\tBinary.prototype.write = function (string, offset) {\n\t  offset = typeof offset == 'number' ? offset : this.position;\n\t\n\t  // If the buffer is to small let's extend the buffer\n\t  if (this.buffer.length < offset + string.length) {\n\t    var buffer = null;\n\t    // Create a new buffer\n\t    buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length));\n\t    // Copy the content\n\t    for (var i = 0; i < this.position; i++) {\n\t      buffer[i] = this.buffer[i];\n\t    }\n\t\n\t    // Assign the new buffer\n\t    this.buffer = buffer;\n\t  }\n\t\n\t  for (var i = 0; i < string.length; i++) {\n\t    this.buffer[offset++] = string[i];\n\t  }\n\t\n\t  this.position = offset > this.position ? offset : this.position;\n\t};\n\t\n\t/**\n\t * Reads **length** bytes starting at **position**.\n\t *\n\t * @method\n\t * @param {number} position read from the given position in the Binary.\n\t * @param {number} length the number of bytes to read.\n\t * @return {Buffer}\n\t */\n\tBinary.prototype.read = function (position, length) {\n\t  length = length && length > 0 ? length : this.position;\n\t\n\t  // Let's return the data based on the type we have\n\t  return this.buffer.slice(position, position + length);\n\t};\n\t\n\t/**\n\t * Returns the value of this binary as a string.\n\t *\n\t * @method\n\t * @return {String}\n\t */\n\tBinary.prototype.value = function (asRaw) {\n\t  asRaw = asRaw == null ? false : asRaw;\n\t  if (asRaw) return this.buffer.slice(0, this.position);\n\t  return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);\n\t};\n\t\n\t/**\n\t * Length.\n\t *\n\t * @method\n\t * @return {number} the length of the binary.\n\t */\n\tBinary.prototype.length = function () {\n\t  return this.position;\n\t};\n\t\n\tBinary.prototype.equals = function (value) {\n\t  if (!value) return false;\n\t  if (value._bsontype != 'Binary') return false;\n\t  if (!value.buffer) return false;\n\t  if (value.buffer.length != this.buffer.length) return false;\n\t  for (var i = 0; i < this.buffer.length; i++) {\n\t    if (this.buffer[i] != value.buffer[i]) return false;\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\t/**\n\t * @ignore\n\t */\n\tBinary.prototype.toJSON = function () {\n\t  // If we are in the node.js context use Buffer.toString, otherwise the btoa\n\t  var binary = typeof Buffer !== 'undefined' ? this.buffer.toString('base64') : btoa(String.fromCharCode.apply(null, this.buffer));\n\t\n\t  return {\n\t    $binary: binary,\n\t    $type: convert(this.sub_type)\n\t  };\n\t};\n\t\n\t/**\n\t * @ignore\n\t */\n\tBinary.prototype.toString = function (format) {\n\t  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';\n\t};\n\t\n\t/**\n\t * Binary default subtype\n\t * @ignore\n\t */\n\tvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\t\n\t/**\n\t * @ignore\n\t */\n\tvar writeStringToArray = function writeStringToArray(data) {\n\t  // Create a buffer\n\t  var buffer = new Uint8Array(new ArrayBuffer(data.length));\n\t  // Write the content to the buffer\n\t  for (var i = 0; i < data.length; i++) {\n\t    buffer[i] = data.charCodeAt(i);\n\t  }\n\t  // Write the string to the buffer\n\t  return buffer;\n\t};\n\t\n\t/**\n\t * Convert Array ot Uint8Array to Binary String\n\t *\n\t * @ignore\n\t */\n\tvar convertArraytoUtf8BinaryString = function convertArraytoUtf8BinaryString(byteArray, startIndex, endIndex) {\n\t  var result = \"\";\n\t  for (var i = startIndex; i < endIndex; i++) {\n\t    result = result + String.fromCharCode(byteArray[i]);\n\t  }\n\t  return result;\n\t};\n\t\n\tBinary.BUFFER_SIZE = 256;\n\t\n\t/**\n\t * Default BSON type\n\t *\n\t * @classconstant SUBTYPE_DEFAULT\n\t **/\n\tBinary.SUBTYPE_DEFAULT = 0;\n\t/**\n\t * Function BSON type\n\t *\n\t * @classconstant SUBTYPE_DEFAULT\n\t **/\n\tBinary.SUBTYPE_FUNCTION = 1;\n\t/**\n\t * Byte Array BSON type\n\t *\n\t * @classconstant SUBTYPE_DEFAULT\n\t **/\n\tBinary.SUBTYPE_BYTE_ARRAY = 2;\n\t/**\n\t * OLD UUID BSON type\n\t *\n\t * @classconstant SUBTYPE_DEFAULT\n\t **/\n\tBinary.SUBTYPE_UUID_OLD = 3;\n\t/**\n\t * UUID BSON type\n\t *\n\t * @classconstant SUBTYPE_DEFAULT\n\t **/\n\tBinary.SUBTYPE_UUID = 4;\n\t/**\n\t * MD5 BSON type\n\t *\n\t * @classconstant SUBTYPE_DEFAULT\n\t **/\n\tBinary.SUBTYPE_MD5 = 5;\n\t/**\n\t * User BSON type\n\t *\n\t * @classconstant SUBTYPE_DEFAULT\n\t **/\n\tBinary.SUBTYPE_USER_DEFINED = 128;\n\t\n\tmodule.exports = Binary;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9).Buffer))\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t\n\tfunction btoa(input) {\n\t  var str = String(input);\n\t  for (\n\t  // initialize result and counter\n\t  var block, charCode, idx = 0, map = chars, output = '';\n\t  // if the next str index does not exist:\n\t  //   change the mapping table to \"=\"\n\t  //   check if d has no fractional digits\n\t  str.charAt(idx | 0) || (map = '=', idx % 1);\n\t  // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n\t  output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {\n\t    charCode = str.charCodeAt(idx += 3 / 4);\n\t    if (charCode > 0xFF) {\n\t      throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n\t    }\n\t    block = block << 8 | charCode;\n\t  }\n\t  return output;\n\t};\n\t\n\tfunction atob(input) {\n\t  var str = String(input).replace(/=+$/, '');\n\t  if (str.length % 4 == 1) {\n\t    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n\t  }\n\t  for (\n\t  // initialize result and counters\n\t  var bc = 0, bs, buffer, idx = 0, output = '';\n\t  // get next character\n\t  buffer = str.charAt(idx++);\n\t  // character found in table? initialize bit storage and add its ascii value;\n\t  ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n\t  // and if not first of each 4 characters,\n\t  // convert the first 8 bits to one ascii character\n\t  bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n\t    // try to find character in table (0-63, not found => -1)\n\t    buffer = chars.indexOf(buffer);\n\t  }\n\t  return output;\n\t};\n\t\n\tmodule.exports = {\n\t  btoa: btoa, atob: atob\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * A class representation of the BSON Code type.\n\t *\n\t * @class\n\t * @param {(string|function)} code a string or function.\n\t * @param {Object} [scope] an optional scope for the function.\n\t * @return {Code}\n\t */\n\t\n\tvar Code = function Code(code, scope) {\n\t  this._bsontype = 'Code';\n\t  this.code = code;\n\t  this.scope = scope;\n\t};\n\t\n\tCode.prototype.equals = function (value) {\n\t  if (!value || !value.code) return false;\n\t  if (value._bsontype != 'Code') return false;\n\t  if (this.code == value.code) return true;\n\t  return false;\n\t};\n\t\n\tCode.prototype.toJSON = function () {\n\t  return { $code: this.code, $scope: this.scope };\n\t};\n\t\n\tmodule.exports = Code;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * A class representation of the BSON DBRef type.\n\t *\n\t * @class\n\t * @param {String} namespace the collection name.\n\t * @param {ObjectID} oid the reference ObjectID.\n\t * @param {String} [db] optional db name, if omitted the reference is local to the current db.\n\t * @return {DBRef}\n\t */\n\t\n\tvar DBRef = function DBRef(namespace, oid, db) {\n\t  this._bsontype = 'DBRef';\n\t  this.namespace = namespace;\n\t  this.oid = oid;\n\t  this.db = db;\n\t};\n\t\n\tDBRef.prototype.equals = function (value) {\n\t  if (value == null || value.namespace == null || value.db == null || value.oid == null) return false;\n\t  if (value._bsontype != 'DBRef') return false;\n\t\n\t  if (this.oid && this.oid.equals) {\n\t    return this.oid.equals(value.oid) && this.namespace == value.namespace && this.db == value.db;\n\t  } else {\n\t    return this.oid == value.oid && this.namespace == value.namespace && this.db == value.db;\n\t  }\n\t};\n\t\n\tDBRef.prototype.toJSON = function () {\n\t  return {\n\t    '$ref': this.namespace,\n\t    '$id': this.oid,\n\t    '$db': this.db == null ? '' : this.db\n\t  };\n\t};\n\t\n\tmodule.exports = DBRef;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {\"use strict\";\n\t\n\tvar Long = __webpack_require__(19);\n\t\n\tvar PARSE_STRING_REGEXP = /^(\\+|\\-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([\\-\\+])?(\\d+)?$/;\n\tvar PARSE_INF_REGEXP = /^(\\+|\\-)?(Infinity|inf)$/i;\n\tvar PARSE_NAN_REGEXP = /^(\\+|\\-)?NaN$/i;\n\t\n\tvar EXPONENT_MAX = 6111;\n\tvar EXPONENT_MIN = -6176;\n\tvar EXPONENT_BIAS = 6176;\n\tvar MAX_DIGITS = 34;\n\t\n\t// Nan value bits as 32 bit values (due to lack of longs)\n\tvar NAN_BUFFER = [0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n\t// Infinity value bits 32 bit values (due to lack of longs)\n\tvar INF_NEGATIVE_BUFFER = [0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n\tvar INF_POSITIVE_BUFFER = [0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n\t\n\tvar EXPONENT_REGEX = /^([\\-\\+])?(\\d+)?$/;\n\t\n\t// Extract least significant 5 bits\n\tvar COMBINATION_MASK = 0x1f;\n\t// Extract least significant 14 bits\n\tvar EXPONENT_MASK = 0x3fff;\n\t// Value of combination field for Inf\n\tvar COMBINATION_INFINITY = 30;\n\t// Value of combination field for NaN\n\tvar COMBINATION_NAN = 31;\n\t// Value of combination field for NaN\n\tvar COMBINATION_SNAN = 32;\n\t// decimal128 exponent bias\n\tvar EXPONENT_BIAS = 6176;\n\t\n\t// Detect if the value is a digit\n\tvar isDigit = function isDigit(value) {\n\t  return !isNaN(parseInt(value, 10));\n\t};\n\t\n\t// Divide two uint128 values\n\tvar divideu128 = function divideu128(value) {\n\t  var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n\t  var _rem = Long.fromNumber(0);\n\t  var i = 0;\n\t\n\t  if (!value.parts[0] && !value.parts[1] && !value.parts[2] && !value.parts[3]) {\n\t    return { quotient: value, rem: _rem };\n\t  }\n\t\n\t  for (var i = 0; i <= 3; i++) {\n\t    // Adjust remainder to match value of next dividend\n\t    _rem = _rem.shiftLeft(32);\n\t    // Add the divided to _rem\n\t    _rem = _rem.add(new Long(value.parts[i], 0));\n\t    value.parts[i] = _rem.div(DIVISOR).low_;\n\t    _rem = _rem.modulo(DIVISOR);\n\t  }\n\t\n\t  return { quotient: value, rem: _rem };\n\t};\n\t\n\t// Multiply two Long values and return the 128 bit value\n\tvar multiply64x2 = function multiply64x2(left, right) {\n\t  if (!left && !right) {\n\t    return { high: Long.fromNumber(0), low: Long.fromNumber(0) };\n\t  }\n\t\n\t  var leftHigh = left.shiftRightUnsigned(32);\n\t  var leftLow = new Long(left.getLowBits(), 0);\n\t  var rightHigh = right.shiftRightUnsigned(32);\n\t  var rightLow = new Long(right.getLowBits(), 0);\n\t\n\t  var productHigh = leftHigh.multiply(rightHigh);\n\t  var productMid = leftHigh.multiply(rightLow);\n\t  var productMid2 = leftLow.multiply(rightHigh);\n\t  var productLow = leftLow.multiply(rightLow);\n\t\n\t  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n\t  productMid = new Long(productMid.getLowBits(), 0).add(productMid2).add(productLow.shiftRightUnsigned(32));\n\t\n\t  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n\t  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n\t\n\t  // Return the 128 bit result\n\t  return { high: productHigh, low: productLow };\n\t};\n\t\n\tvar lessThan = function lessThan(left, right) {\n\t  // Make values unsigned\n\t  var uhleft = left.high_ >>> 0;\n\t  var uhright = right.high_ >>> 0;\n\t\n\t  // Compare high bits first\n\t  if (uhleft < uhright) {\n\t    return true;\n\t  } else if (uhleft == uhright) {\n\t    var ulleft = left.low_ >>> 0;\n\t    var ulright = right.low_ >>> 0;\n\t    if (ulleft < ulright) return true;\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\tvar longtoHex = function longtoHex(value) {\n\t  var buffer = new Buffer(8);\n\t  var index = 0;\n\t  // Encode the low 64 bits of the decimal\n\t  // Encode low bits\n\t  buffer[index++] = value.low_ & 0xff;\n\t  buffer[index++] = value.low_ >> 8 & 0xff;\n\t  buffer[index++] = value.low_ >> 16 & 0xff;\n\t  buffer[index++] = value.low_ >> 24 & 0xff;\n\t  // Encode high bits\n\t  buffer[index++] = value.high_ & 0xff;\n\t  buffer[index++] = value.high_ >> 8 & 0xff;\n\t  buffer[index++] = value.high_ >> 16 & 0xff;\n\t  buffer[index++] = value.high_ >> 24 & 0xff;\n\t  return buffer.reverse().toString('hex');\n\t};\n\t\n\tvar int32toHex = function int32toHex(value) {\n\t  var buffer = new Buffer(4);\n\t  var index = 0;\n\t  // Encode the low 64 bits of the decimal\n\t  // Encode low bits\n\t  buffer[index++] = value & 0xff;\n\t  buffer[index++] = value >> 8 & 0xff;\n\t  buffer[index++] = value >> 16 & 0xff;\n\t  buffer[index++] = value >> 24 & 0xff;\n\t  return buffer.reverse().toString('hex');\n\t};\n\t\n\t/**\n\t * A class representation of the BSON Decimal128 type.\n\t *\n\t * @class\n\t * @param {Buffer} bytes A buffer representing the Decimal128 bytes.\n\t * @return {Decimal128}\n\t */\n\tvar Decimal128 = function Decimal128(bytes) {\n\t  this._bsontype = 'Decimal128';\n\t  this.bytes = bytes;\n\t};\n\t\n\t/**\n\t * Creates a Decimal128 instance from a string representation.\n\t *\n\t * @method\n\t * @param {String} string A string representing a Decimal128 value.\n\t */\n\tDecimal128.fromString = function (string) {\n\t  // Parse state tracking\n\t  var isNegative = false;\n\t  var sawRadix = false;\n\t  var foundNonZero = false;\n\t\n\t  // Total number of significant digits (no leading or trailing zero)\n\t  var significantDigits = 0;\n\t  // Total number of significand digits read\n\t  var nDigitsRead = 0;\n\t  // Total number of digits (no leading zeros)\n\t  var nDigits = 0;\n\t  // The number of the digits after radix\n\t  var radixPosition = 0;\n\t  // The index of the first non-zero in *str*\n\t  var firstNonZero = 0;\n\t\n\t  // Digits Array\n\t  var digits = [0];\n\t  // The number of digits in digits\n\t  var nDigitsStored = 0;\n\t  // Insertion pointer for digits\n\t  var digitsInsert = 0;\n\t  // The index of the first non-zero digit\n\t  var firstDigit = 0;\n\t  // The index of the last digit\n\t  var lastDigit = 0;\n\t\n\t  // Exponent\n\t  var exponent = 0;\n\t  // loop index over array\n\t  var i = 0;\n\t  // The high 17 digits of the significand\n\t  var significandHigh = [0, 0];\n\t  // The low 17 digits of the significand\n\t  var significandLow = [0, 0];\n\t  // The biased exponent\n\t  var biasedExponent = 0;\n\t\n\t  // Read index\n\t  var index = 0;\n\t\n\t  // Trim the string\n\t  string = string.trim();\n\t\n\t  // Results\n\t  var stringMatch = string.match(PARSE_STRING_REGEXP);\n\t  var infMatch = string.match(PARSE_INF_REGEXP);\n\t  var nanMatch = string.match(PARSE_NAN_REGEXP);\n\t\n\t  // Validate the string\n\t  if (!stringMatch && !infMatch && !nanMatch || string.length == 0) {\n\t    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n\t  }\n\t\n\t  // Check if we have an illegal exponent format\n\t  if (stringMatch && stringMatch[4] && stringMatch[2] === undefined) {\n\t    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n\t  }\n\t\n\t  // Get the negative or positive sign\n\t  if (string[index] == '+' || string[index] == '-') {\n\t    isNegative = string[index++] == '-';\n\t  }\n\t\n\t  // Check if user passed Infinity or NaN\n\t  if (!isDigit(string[index]) && string[index] != '.') {\n\t    if (string[index] == 'i' || string[index] == 'I') {\n\t      return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n\t    } else if (string[index] == 'N') {\n\t      return new Decimal128(new Buffer(NAN_BUFFER));\n\t    }\n\t  }\n\t\n\t  // Read all the digits\n\t  while (isDigit(string[index]) || string[index] == '.') {\n\t    if (string[index] == '.') {\n\t      if (sawRadix) {\n\t        return new Decimal128(new Buffer(NAN_BUFFER));\n\t      }\n\t\n\t      sawRadix = true;\n\t      index = index + 1;\n\t      continue;\n\t    }\n\t\n\t    if (nDigitsStored < 34) {\n\t      if (string[index] != '0' || foundNonZero) {\n\t        if (!foundNonZero) {\n\t          firstNonZero = nDigitsRead;\n\t        }\n\t\n\t        foundNonZero = true;\n\t\n\t        // Only store 34 digits\n\t        digits[digitsInsert++] = parseInt(string[index], 10);\n\t        nDigitsStored = nDigitsStored + 1;\n\t      }\n\t    }\n\t\n\t    if (foundNonZero) {\n\t      nDigits = nDigits + 1;\n\t    }\n\t\n\t    if (sawRadix) {\n\t      radixPosition = radixPosition + 1;\n\t    }\n\t\n\t    nDigitsRead = nDigitsRead + 1;\n\t    index = index + 1;\n\t  }\n\t\n\t  if (sawRadix && !nDigitsRead) {\n\t    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n\t  }\n\t\n\t  // Read exponent if exists\n\t  if (string[index] == 'e' || string[index] == 'E') {\n\t    // Read exponent digits\n\t    var match = string.substr(++index).match(EXPONENT_REGEX);\n\t\n\t    // No digits read\n\t    if (!match || !match[2]) {\n\t      return new Decimal128(new Buffer(NAN_BUFFER));\n\t    }\n\t\n\t    // Get exponent\n\t    exponent = parseInt(match[0], 10);\n\t\n\t    // Adjust the index\n\t    index = index + match[0].length;\n\t  }\n\t\n\t  // Return not a number\n\t  if (string[index]) {\n\t    return new Decimal128(new Buffer(NAN_BUFFER));\n\t  }\n\t\n\t  // Done reading input\n\t  // Find first non-zero digit in digits\n\t  firstDigit = 0;\n\t\n\t  if (!nDigitsStored) {\n\t    firstDigit = 0;\n\t    lastDigit = 0;\n\t    digits[0] = 0;\n\t    nDigits = 1;\n\t    nDigitsStored = 1;\n\t    significantDigits = 0;\n\t  } else {\n\t    lastDigit = nDigitsStored - 1;\n\t    significantDigits = nDigits;\n\t\n\t    if (exponent != 0 && significantDigits != 1) {\n\t      while (string[firstNonZero + significantDigits - 1] == '0') {\n\t        significantDigits = significantDigits - 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Normalization of exponent\n\t  // Correct exponent based on radix position, and shift significand as needed\n\t  // to represent user input\n\t\n\t  // Overflow prevention\n\t  if (exponent <= radixPosition && radixPosition - exponent > 1 << 14) {\n\t    exponent = EXPONENT_MIN;\n\t  } else {\n\t    exponent = exponent - radixPosition;\n\t  }\n\t\n\t  // Attempt to normalize the exponent\n\t  while (exponent > EXPONENT_MAX) {\n\t    // Shift exponent to significand and decrease\n\t    lastDigit = lastDigit + 1;\n\t\n\t    if (lastDigit - firstDigit > MAX_DIGITS) {\n\t      // Check if we have a zero then just hard clamp, otherwise fail\n\t      var digitsString = digits.join('');\n\t      if (digitsString.match(/^0+$/)) {\n\t        exponent = EXPONENT_MAX;\n\t        break;\n\t      } else {\n\t        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n\t      }\n\t    }\n\t\n\t    exponent = exponent - 1;\n\t  }\n\t\n\t  while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n\t    // Shift last digit\n\t    if (lastDigit == 0) {\n\t      exponent = EXPONENT_MIN;\n\t      significantDigits = 0;\n\t      break;\n\t    }\n\t\n\t    if (nDigitsStored < nDigits) {\n\t      // adjust to match digits not stored\n\t      nDigits = nDigits - 1;\n\t    } else {\n\t      // adjust to round\n\t      lastDigit = lastDigit - 1;\n\t    }\n\t\n\t    if (exponent < EXPONENT_MAX) {\n\t      exponent = exponent + 1;\n\t    } else {\n\t      // Check if we have a zero then just hard clamp, otherwise fail\n\t      var digitsString = digits.join('');\n\t      if (digitsString.match(/^0+$/)) {\n\t        exponent = EXPONENT_MAX;\n\t        break;\n\t      } else {\n\t        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n\t      }\n\t    }\n\t  }\n\t\n\t  // Round\n\t  // We've normalized the exponent, but might still need to round.\n\t  if (lastDigit - firstDigit + 1 < significantDigits && string[significantDigits] != '0') {\n\t    var endOfString = nDigitsRead;\n\t\n\t    // If we have seen a radix point, 'string' is 1 longer than we have\n\t    // documented with ndigits_read, so inc the position of the first nonzero\n\t    // digit and the position that digits are read to.\n\t    if (sawRadix && exponent == EXPONENT_MIN) {\n\t      firstNonZero = firstNonZero + 1;\n\t      endOfString = endOfString + 1;\n\t    }\n\t\n\t    var roundDigit = parseInt(string[firstNonZero + lastDigit + 1], 10);\n\t    var roundBit = 0;\n\t\n\t    if (roundDigit >= 5) {\n\t      roundBit = 1;\n\t\n\t      if (roundDigit == 5) {\n\t        roundBit = digits[lastDigit] % 2 == 1;\n\t\n\t        for (var i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n\t          if (parseInt(string[i], 10)) {\n\t            roundBit = 1;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (roundBit) {\n\t      var dIdx = lastDigit;\n\t\n\t      for (; dIdx >= 0; dIdx--) {\n\t        if (++digits[dIdx] > 9) {\n\t          digits[dIdx] = 0;\n\t\n\t          // overflowed most significant digit\n\t          if (dIdx == 0) {\n\t            if (exponent < EXPONENT_MAX) {\n\t              exponent = exponent + 1;\n\t              digits[dIdx] = 1;\n\t            } else {\n\t              return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n\t            }\n\t          }\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // Encode significand\n\t  // The high 17 digits of the significand\n\t  significandHigh = Long.fromNumber(0);\n\t  // The low 17 digits of the significand\n\t  significandLow = Long.fromNumber(0);\n\t\n\t  // read a zero\n\t  if (significantDigits == 0) {\n\t    significandHigh = Long.fromNumber(0);\n\t    significandLow = Long.fromNumber(0);\n\t  } else if (lastDigit - firstDigit < 17) {\n\t    var dIdx = firstDigit;\n\t    significandLow = Long.fromNumber(digits[dIdx++]);\n\t    significandHigh = new Long(0, 0);\n\t\n\t    for (; dIdx <= lastDigit; dIdx++) {\n\t      significandLow = significandLow.multiply(Long.fromNumber(10));\n\t      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n\t    }\n\t  } else {\n\t    var dIdx = firstDigit;\n\t    significandHigh = Long.fromNumber(digits[dIdx++]);\n\t\n\t    for (; dIdx <= lastDigit - 17; dIdx++) {\n\t      significandHigh = significandHigh.multiply(Long.fromNumber(10));\n\t      significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n\t    }\n\t\n\t    significandLow = Long.fromNumber(digits[dIdx++]);\n\t\n\t    for (; dIdx <= lastDigit; dIdx++) {\n\t      significandLow = significandLow.multiply(Long.fromNumber(10));\n\t      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n\t    }\n\t  }\n\t\n\t  var significand = multiply64x2(significandHigh, Long.fromString(\"100000000000000000\"));\n\t\n\t  significand.low = significand.low.add(significandLow);\n\t\n\t  if (lessThan(significand.low, significandLow)) {\n\t    significand.high = significand.high.add(Long.fromNumber(1));\n\t  }\n\t\n\t  // Biased exponent\n\t  var biasedExponent = exponent + EXPONENT_BIAS;\n\t  var dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n\t\n\t  // Encode combination, exponent, and significand.\n\t  if (significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber)) {\n\t    // Encode '11' into bits 1 to 3\n\t    dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n\t    dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47)));\n\t    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n\t  } else {\n\t    dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n\t    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n\t  }\n\t\n\t  dec.low = significand.low;\n\t\n\t  // Encode sign\n\t  if (isNegative) {\n\t    dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n\t  }\n\t\n\t  // Encode into a buffer\n\t  var buffer = new Buffer(16);\n\t  var index = 0;\n\t\n\t  // Encode the low 64 bits of the decimal\n\t  // Encode low bits\n\t  buffer[index++] = dec.low.low_ & 0xff;\n\t  buffer[index++] = dec.low.low_ >> 8 & 0xff;\n\t  buffer[index++] = dec.low.low_ >> 16 & 0xff;\n\t  buffer[index++] = dec.low.low_ >> 24 & 0xff;\n\t  // Encode high bits\n\t  buffer[index++] = dec.low.high_ & 0xff;\n\t  buffer[index++] = dec.low.high_ >> 8 & 0xff;\n\t  buffer[index++] = dec.low.high_ >> 16 & 0xff;\n\t  buffer[index++] = dec.low.high_ >> 24 & 0xff;\n\t\n\t  // Encode the high 64 bits of the decimal\n\t  // Encode low bits\n\t  buffer[index++] = dec.high.low_ & 0xff;\n\t  buffer[index++] = dec.high.low_ >> 8 & 0xff;\n\t  buffer[index++] = dec.high.low_ >> 16 & 0xff;\n\t  buffer[index++] = dec.high.low_ >> 24 & 0xff;\n\t  // Encode high bits\n\t  buffer[index++] = dec.high.high_ & 0xff;\n\t  buffer[index++] = dec.high.high_ >> 8 & 0xff;\n\t  buffer[index++] = dec.high.high_ >> 16 & 0xff;\n\t  buffer[index++] = dec.high.high_ >> 24 & 0xff;\n\t\n\t  // Return the new Decimal128\n\t  return new Decimal128(buffer);\n\t};\n\t\n\tDecimal128.prototype.toString = function () {\n\t  // Note: bits in this routine are referred to starting at 0,\n\t  // from the sign bit, towards the coefficient.\n\t\n\t  // bits 0 - 31\n\t  var high;\n\t  // bits 32 - 63\n\t  var midh;\n\t  // bits 64 - 95\n\t  var midl;\n\t  // bits 96 - 127\n\t  var low;\n\t  // bits 1 - 5\n\t  var combination;\n\t  // decoded biased exponent (14 bits)\n\t  var biased_exponent;\n\t  // the number of significand digits\n\t  var significand_digits = 0;\n\t  // the base-10 digits in the significand\n\t  var significand = new Array(36);\n\t  for (var i = 0; i < significand.length; i++) {\n\t    significand[i] = 0;\n\t  } // read pointer into significand\n\t  var index = 0;\n\t\n\t  // unbiased exponent\n\t  var exponent;\n\t  // the exponent if scientific notation is used\n\t  var scientific_exponent;\n\t\n\t  // true if the number is zero\n\t  var is_zero = false;\n\t\n\t  // the most signifcant significand bits (50-46)\n\t  var significand_msb;\n\t  // temporary storage for significand decoding\n\t  var significand128 = { parts: new Array(4) };\n\t  // indexing variables\n\t  var i;\n\t  var j, k;\n\t\n\t  // Output string\n\t  var string = [];\n\t\n\t  // Unpack index\n\t  var index = 0;\n\t\n\t  // Buffer reference\n\t  var buffer = this.bytes;\n\t\n\t  // Unpack the low 64bits into a long\n\t  low = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\t  midl = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\t\n\t  // Unpack the high 64bits into a long\n\t  midh = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\t  high = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\t\n\t  // Unpack index\n\t  var index = 0;\n\t\n\t  // Create the state of the decimal\n\t  var dec = {\n\t    low: new Long(low, midl),\n\t    high: new Long(midh, high) };\n\t\n\t  if (dec.high.lessThan(Long.ZERO)) {\n\t    string.push('-');\n\t  }\n\t\n\t  // Decode combination field and exponent\n\t  combination = high >> 26 & COMBINATION_MASK;\n\t\n\t  if (combination >> 3 == 3) {\n\t    // Check for 'special' values\n\t    if (combination == COMBINATION_INFINITY) {\n\t      return string.join('') + \"Infinity\";\n\t    } else if (combination == COMBINATION_NAN) {\n\t      return \"NaN\";\n\t    } else {\n\t      biased_exponent = high >> 15 & EXPONENT_MASK;\n\t      significand_msb = 0x08 + (high >> 14 & 0x01);\n\t    }\n\t  } else {\n\t    significand_msb = high >> 14 & 0x07;\n\t    biased_exponent = high >> 17 & EXPONENT_MASK;\n\t  }\n\t\n\t  exponent = biased_exponent - EXPONENT_BIAS;\n\t\n\t  // Create string of significand digits\n\t\n\t  // Convert the 114-bit binary number represented by\n\t  // (significand_high, significand_low) to at most 34 decimal\n\t  // digits through modulo and division.\n\t  significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n\t  significand128.parts[1] = midh;\n\t  significand128.parts[2] = midl;\n\t  significand128.parts[3] = low;\n\t\n\t  if (significand128.parts[0] == 0 && significand128.parts[1] == 0 && significand128.parts[2] == 0 && significand128.parts[3] == 0) {\n\t    is_zero = true;\n\t  } else {\n\t    for (var k = 3; k >= 0; k--) {\n\t      var least_digits = 0;\n\t      // Peform the divide\n\t      var result = divideu128(significand128);\n\t      significand128 = result.quotient;\n\t      least_digits = result.rem.low_;\n\t\n\t      // We now have the 9 least significant digits (in base 2).\n\t      // Convert and output to string.\n\t      if (!least_digits) continue;\n\t\n\t      for (var j = 8; j >= 0; j--) {\n\t        // significand[k * 9 + j] = Math.round(least_digits % 10);\n\t        significand[k * 9 + j] = least_digits % 10;\n\t        // least_digits = Math.round(least_digits / 10);\n\t        least_digits = Math.floor(least_digits / 10);\n\t      }\n\t    }\n\t  }\n\t\n\t  // Output format options:\n\t  // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n\t  // Regular    - ddd.ddd\n\t\n\t  if (is_zero) {\n\t    significand_digits = 1;\n\t    significand[index] = 0;\n\t  } else {\n\t    significand_digits = 36;\n\t    var i = 0;\n\t\n\t    while (!significand[index]) {\n\t      i++;\n\t      significand_digits = significand_digits - 1;\n\t      index = index + 1;\n\t    }\n\t  }\n\t\n\t  scientific_exponent = significand_digits - 1 + exponent;\n\t\n\t  // The scientific exponent checks are dictated by the string conversion\n\t  // specification and are somewhat arbitrary cutoffs.\n\t  //\n\t  // We must check exponent > 0, because if this is the case, the number\n\t  // has trailing zeros.  However, we *cannot* output these trailing zeros,\n\t  // because doing so would change the precision of the value, and would\n\t  // change stored data if the string converted number is round tripped.\n\t\n\t  if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n\t    // Scientific format\n\t    string.push(significand[index++]);\n\t    significand_digits = significand_digits - 1;\n\t\n\t    if (significand_digits) {\n\t      string.push('.');\n\t    }\n\t\n\t    for (var i = 0; i < significand_digits; i++) {\n\t      string.push(significand[index++]);\n\t    }\n\t\n\t    // Exponent\n\t    string.push('E');\n\t    if (scientific_exponent > 0) {\n\t      string.push('+' + scientific_exponent);\n\t    } else {\n\t      string.push(scientific_exponent);\n\t    }\n\t  } else {\n\t    // Regular format with no decimal place\n\t    if (exponent >= 0) {\n\t      for (var i = 0; i < significand_digits; i++) {\n\t        string.push(significand[index++]);\n\t      }\n\t    } else {\n\t      var radix_position = significand_digits + exponent;\n\t\n\t      // non-zero digits before radix\n\t      if (radix_position > 0) {\n\t        for (var i = 0; i < radix_position; i++) {\n\t          string.push(significand[index++]);\n\t        }\n\t      } else {\n\t        string.push('0');\n\t      }\n\t\n\t      string.push('.');\n\t      // add leading zeros after radix\n\t      while (radix_position++ < 0) {\n\t        string.push('0');\n\t      }\n\t\n\t      for (var i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n\t        string.push(significand[index++]);\n\t      }\n\t    }\n\t  }\n\t\n\t  return string.join('');\n\t};\n\t\n\tDecimal128.prototype.equals = function (value) {\n\t  if (!value.bytes) return false;\n\t  return this.bytes.toString('hex') == value.bytes.toString('hex');\n\t};\n\t\n\tDecimal128.prototype.toJSON = function () {\n\t  return { \"$numberDecimal\": this.toString() };\n\t};\n\t\n\tmodule.exports = Decimal128;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9).Buffer))\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t//     http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\t//\n\t// Copyright 2009 Google Inc. All Rights Reserved\n\t\n\t/**\n\t * Defines a Long class for representing a 64-bit two's-complement\n\t * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n\t * implementation is derived from LongLib in GWT.\n\t *\n\t * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n\t * values as *signed* integers.  See the from* functions below for more\n\t * convenient ways of constructing Longs.\n\t *\n\t * The internal representation of a Long is the two given signed, 32-bit values.\n\t * We use 32-bit pieces because these are the size of integers on which\n\t * Javascript performs bit-operations.  For operations like addition and\n\t * multiplication, we split each number into 16-bit pieces, which can easily be\n\t * multiplied within Javascript's floating-point representation without overflow\n\t * or change in sign.\n\t *\n\t * In the algorithms below, we frequently reduce the negative case to the\n\t * positive case by negating the input(s) and then post-processing the result.\n\t * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n\t * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n\t * a positive number, it overflows back into a negative).  Not handling this\n\t * case would often result in infinite recursion.\n\t *\n\t * @class\n\t * @param {number} low  the low (signed) 32 bits of the Long.\n\t * @param {number} high the high (signed) 32 bits of the Long.\n\t * @return {Long}\n\t */\n\t\n\tvar Long = function Long(low, high) {\n\t  this._bsontype = 'Long';\n\t  /**\n\t   * @type {number}\n\t   * @ignore\n\t   */\n\t  this.low_ = low | 0; // force into 32 signed bits.\n\t\n\t  /**\n\t   * @type {number}\n\t   * @ignore\n\t   */\n\t  this.high_ = high | 0; // force into 32 signed bits.\n\t};\n\t\n\t/**\n\t * Return the int value.\n\t *\n\t * @method\n\t * @return {number} the value, assuming it is a 32-bit integer.\n\t */\n\tLong.prototype.toInt = function () {\n\t  return this.low_;\n\t};\n\t\n\t/**\n\t * Return the Number value.\n\t *\n\t * @method\n\t * @return {number} the closest floating-point representation to this value.\n\t */\n\tLong.prototype.toNumber = function () {\n\t  return this.high_ * Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n\t};\n\t\n\t/**\n\t * Return the JSON value.\n\t *\n\t * @method\n\t * @return {String} the JSON representation.\n\t */\n\tLong.prototype.toJSON = function () {\n\t  return { $numberLong: this.toString() };\n\t};\n\t\n\t/**\n\t * Return the String value.\n\t *\n\t * @method\n\t * @param {number} [opt_radix] the radix in which the text should be written.\n\t * @return {String} the textual representation of this value.\n\t */\n\tLong.prototype.toString = function (opt_radix) {\n\t  var radix = opt_radix || 10;\n\t  if (radix < 2 || 36 < radix) {\n\t    throw Error('radix out of range: ' + radix);\n\t  }\n\t\n\t  if (this.isZero()) {\n\t    return '0';\n\t  }\n\t\n\t  if (this.isNegative()) {\n\t    if (this.equals(Long.MIN_VALUE)) {\n\t      // We need to change the Long value before it can be negated, so we remove\n\t      // the bottom-most digit in this base and then recurse to do the rest.\n\t      var radixLong = Long.fromNumber(radix);\n\t      var div = this.div(radixLong);\n\t      var rem = div.multiply(radixLong).subtract(this);\n\t      return div.toString(radix) + rem.toInt().toString(radix);\n\t    } else {\n\t      return '-' + this.negate().toString(radix);\n\t    }\n\t  }\n\t\n\t  // Do several (6) digits each time through the loop, so as to\n\t  // minimize the calls to the very expensive emulated div.\n\t  var radixToPower = Long.fromNumber(Math.pow(radix, 6));\n\t\n\t  var rem = this;\n\t  var result = '';\n\t  while (true) {\n\t    var remDiv = rem.div(radixToPower);\n\t    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n\t    var digits = intval.toString(radix);\n\t\n\t    rem = remDiv;\n\t    if (rem.isZero()) {\n\t      return digits + result;\n\t    } else {\n\t      while (digits.length < 6) {\n\t        digits = '0' + digits;\n\t      }\n\t      result = '' + digits + result;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Return the high 32-bits value.\n\t *\n\t * @method\n\t * @return {number} the high 32-bits as a signed value.\n\t */\n\tLong.prototype.getHighBits = function () {\n\t  return this.high_;\n\t};\n\t\n\t/**\n\t * Return the low 32-bits value.\n\t *\n\t * @method\n\t * @return {number} the low 32-bits as a signed value.\n\t */\n\tLong.prototype.getLowBits = function () {\n\t  return this.low_;\n\t};\n\t\n\t/**\n\t * Return the low unsigned 32-bits value.\n\t *\n\t * @method\n\t * @return {number} the low 32-bits as an unsigned value.\n\t */\n\tLong.prototype.getLowBitsUnsigned = function () {\n\t  return this.low_ >= 0 ? this.low_ : Long.TWO_PWR_32_DBL_ + this.low_;\n\t};\n\t\n\t/**\n\t * Returns the number of bits needed to represent the absolute value of this Long.\n\t *\n\t * @method\n\t * @return {number} Returns the number of bits needed to represent the absolute value of this Long.\n\t */\n\tLong.prototype.getNumBitsAbs = function () {\n\t  if (this.isNegative()) {\n\t    if (this.equals(Long.MIN_VALUE)) {\n\t      return 64;\n\t    } else {\n\t      return this.negate().getNumBitsAbs();\n\t    }\n\t  } else {\n\t    var val = this.high_ != 0 ? this.high_ : this.low_;\n\t    for (var bit = 31; bit > 0; bit--) {\n\t      if ((val & 1 << bit) != 0) {\n\t        break;\n\t      }\n\t    }\n\t    return this.high_ != 0 ? bit + 33 : bit + 1;\n\t  }\n\t};\n\t\n\t/**\n\t * Return whether this value is zero.\n\t *\n\t * @method\n\t * @return {Boolean} whether this value is zero.\n\t */\n\tLong.prototype.isZero = function () {\n\t  return this.high_ == 0 && this.low_ == 0;\n\t};\n\t\n\t/**\n\t * Return whether this value is negative.\n\t *\n\t * @method\n\t * @return {Boolean} whether this value is negative.\n\t */\n\tLong.prototype.isNegative = function () {\n\t  return this.high_ < 0;\n\t};\n\t\n\t/**\n\t * Return whether this value is odd.\n\t *\n\t * @method\n\t * @return {Boolean} whether this value is odd.\n\t */\n\tLong.prototype.isOdd = function () {\n\t  return (this.low_ & 1) == 1;\n\t};\n\t\n\t/**\n\t * Return whether this Long equals the other\n\t *\n\t * @method\n\t * @param {Long} other Long to compare against.\n\t * @return {Boolean} whether this Long equals the other\n\t */\n\tLong.prototype.equals = function (other) {\n\t  return this.high_ == other.high_ && this.low_ == other.low_;\n\t};\n\t\n\t/**\n\t * Return whether this Long does not equal the other.\n\t *\n\t * @method\n\t * @param {Long} other Long to compare against.\n\t * @return {Boolean} whether this Long does not equal the other.\n\t */\n\tLong.prototype.notEquals = function (other) {\n\t  return this.high_ != other.high_ || this.low_ != other.low_;\n\t};\n\t\n\t/**\n\t * Return whether this Long is less than the other.\n\t *\n\t * @method\n\t * @param {Long} other Long to compare against.\n\t * @return {Boolean} whether this Long is less than the other.\n\t */\n\tLong.prototype.lessThan = function (other) {\n\t  return this.compare(other) < 0;\n\t};\n\t\n\t/**\n\t * Return whether this Long is less than or equal to the other.\n\t *\n\t * @method\n\t * @param {Long} other Long to compare against.\n\t * @return {Boolean} whether this Long is less than or equal to the other.\n\t */\n\tLong.prototype.lessThanOrEqual = function (other) {\n\t  return this.compare(other) <= 0;\n\t};\n\t\n\t/**\n\t * Return whether this Long is greater than the other.\n\t *\n\t * @method\n\t * @param {Long} other Long to compare against.\n\t * @return {Boolean} whether this Long is greater than the other.\n\t */\n\tLong.prototype.greaterThan = function (other) {\n\t  return this.compare(other) > 0;\n\t};\n\t\n\t/**\n\t * Return whether this Long is greater than or equal to the other.\n\t *\n\t * @method\n\t * @param {Long} other Long to compare against.\n\t * @return {Boolean} whether this Long is greater than or equal to the other.\n\t */\n\tLong.prototype.greaterThanOrEqual = function (other) {\n\t  return this.compare(other) >= 0;\n\t};\n\t\n\t/**\n\t * Compares this Long with the given one.\n\t *\n\t * @method\n\t * @param {Long} other Long to compare against.\n\t * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n\t */\n\tLong.prototype.compare = function (other) {\n\t  if (this.equals(other)) {\n\t    return 0;\n\t  }\n\t\n\t  var thisNeg = this.isNegative();\n\t  var otherNeg = other.isNegative();\n\t  if (thisNeg && !otherNeg) {\n\t    return -1;\n\t  }\n\t  if (!thisNeg && otherNeg) {\n\t    return 1;\n\t  }\n\t\n\t  // at this point, the signs are the same, so subtraction will not overflow\n\t  if (this.subtract(other).isNegative()) {\n\t    return -1;\n\t  } else {\n\t    return 1;\n\t  }\n\t};\n\t\n\t/**\n\t * The negation of this value.\n\t *\n\t * @method\n\t * @return {Long} the negation of this value.\n\t */\n\tLong.prototype.negate = function () {\n\t  if (this.equals(Long.MIN_VALUE)) {\n\t    return Long.MIN_VALUE;\n\t  } else {\n\t    return this.not().add(Long.ONE);\n\t  }\n\t};\n\t\n\t/**\n\t * Returns the sum of this and the given Long.\n\t *\n\t * @method\n\t * @param {Long} other Long to add to this one.\n\t * @return {Long} the sum of this and the given Long.\n\t */\n\tLong.prototype.add = function (other) {\n\t  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\t\n\t  var a48 = this.high_ >>> 16;\n\t  var a32 = this.high_ & 0xFFFF;\n\t  var a16 = this.low_ >>> 16;\n\t  var a00 = this.low_ & 0xFFFF;\n\t\n\t  var b48 = other.high_ >>> 16;\n\t  var b32 = other.high_ & 0xFFFF;\n\t  var b16 = other.low_ >>> 16;\n\t  var b00 = other.low_ & 0xFFFF;\n\t\n\t  var c48 = 0,\n\t      c32 = 0,\n\t      c16 = 0,\n\t      c00 = 0;\n\t  c00 += a00 + b00;\n\t  c16 += c00 >>> 16;\n\t  c00 &= 0xFFFF;\n\t  c16 += a16 + b16;\n\t  c32 += c16 >>> 16;\n\t  c16 &= 0xFFFF;\n\t  c32 += a32 + b32;\n\t  c48 += c32 >>> 16;\n\t  c32 &= 0xFFFF;\n\t  c48 += a48 + b48;\n\t  c48 &= 0xFFFF;\n\t  return Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);\n\t};\n\t\n\t/**\n\t * Returns the difference of this and the given Long.\n\t *\n\t * @method\n\t * @param {Long} other Long to subtract from this.\n\t * @return {Long} the difference of this and the given Long.\n\t */\n\tLong.prototype.subtract = function (other) {\n\t  return this.add(other.negate());\n\t};\n\t\n\t/**\n\t * Returns the product of this and the given Long.\n\t *\n\t * @method\n\t * @param {Long} other Long to multiply with this.\n\t * @return {Long} the product of this and the other.\n\t */\n\tLong.prototype.multiply = function (other) {\n\t  if (this.isZero()) {\n\t    return Long.ZERO;\n\t  } else if (other.isZero()) {\n\t    return Long.ZERO;\n\t  }\n\t\n\t  if (this.equals(Long.MIN_VALUE)) {\n\t    return other.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n\t  } else if (other.equals(Long.MIN_VALUE)) {\n\t    return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n\t  }\n\t\n\t  if (this.isNegative()) {\n\t    if (other.isNegative()) {\n\t      return this.negate().multiply(other.negate());\n\t    } else {\n\t      return this.negate().multiply(other).negate();\n\t    }\n\t  } else if (other.isNegative()) {\n\t    return this.multiply(other.negate()).negate();\n\t  }\n\t\n\t  // If both Longs are small, use float multiplication\n\t  if (this.lessThan(Long.TWO_PWR_24_) && other.lessThan(Long.TWO_PWR_24_)) {\n\t    return Long.fromNumber(this.toNumber() * other.toNumber());\n\t  }\n\t\n\t  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n\t  // We can skip products that would overflow.\n\t\n\t  var a48 = this.high_ >>> 16;\n\t  var a32 = this.high_ & 0xFFFF;\n\t  var a16 = this.low_ >>> 16;\n\t  var a00 = this.low_ & 0xFFFF;\n\t\n\t  var b48 = other.high_ >>> 16;\n\t  var b32 = other.high_ & 0xFFFF;\n\t  var b16 = other.low_ >>> 16;\n\t  var b00 = other.low_ & 0xFFFF;\n\t\n\t  var c48 = 0,\n\t      c32 = 0,\n\t      c16 = 0,\n\t      c00 = 0;\n\t  c00 += a00 * b00;\n\t  c16 += c00 >>> 16;\n\t  c00 &= 0xFFFF;\n\t  c16 += a16 * b00;\n\t  c32 += c16 >>> 16;\n\t  c16 &= 0xFFFF;\n\t  c16 += a00 * b16;\n\t  c32 += c16 >>> 16;\n\t  c16 &= 0xFFFF;\n\t  c32 += a32 * b00;\n\t  c48 += c32 >>> 16;\n\t  c32 &= 0xFFFF;\n\t  c32 += a16 * b16;\n\t  c48 += c32 >>> 16;\n\t  c32 &= 0xFFFF;\n\t  c32 += a00 * b32;\n\t  c48 += c32 >>> 16;\n\t  c32 &= 0xFFFF;\n\t  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n\t  c48 &= 0xFFFF;\n\t  return Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);\n\t};\n\t\n\t/**\n\t * Returns this Long divided by the given one.\n\t *\n\t * @method\n\t * @param {Long} other Long by which to divide.\n\t * @return {Long} this Long divided by the given one.\n\t */\n\tLong.prototype.div = function (other) {\n\t  if (other.isZero()) {\n\t    throw Error('division by zero');\n\t  } else if (this.isZero()) {\n\t    return Long.ZERO;\n\t  }\n\t\n\t  if (this.equals(Long.MIN_VALUE)) {\n\t    if (other.equals(Long.ONE) || other.equals(Long.NEG_ONE)) {\n\t      return Long.MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n\t    } else if (other.equals(Long.MIN_VALUE)) {\n\t      return Long.ONE;\n\t    } else {\n\t      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n\t      var halfThis = this.shiftRight(1);\n\t      var approx = halfThis.div(other).shiftLeft(1);\n\t      if (approx.equals(Long.ZERO)) {\n\t        return other.isNegative() ? Long.ONE : Long.NEG_ONE;\n\t      } else {\n\t        var rem = this.subtract(other.multiply(approx));\n\t        var result = approx.add(rem.div(other));\n\t        return result;\n\t      }\n\t    }\n\t  } else if (other.equals(Long.MIN_VALUE)) {\n\t    return Long.ZERO;\n\t  }\n\t\n\t  if (this.isNegative()) {\n\t    if (other.isNegative()) {\n\t      return this.negate().div(other.negate());\n\t    } else {\n\t      return this.negate().div(other).negate();\n\t    }\n\t  } else if (other.isNegative()) {\n\t    return this.div(other.negate()).negate();\n\t  }\n\t\n\t  // Repeat the following until the remainder is less than other:  find a\n\t  // floating-point that approximates remainder / other *from below*, add this\n\t  // into the result, and subtract it from the remainder.  It is critical that\n\t  // the approximate value is less than or equal to the real value so that the\n\t  // remainder never becomes negative.\n\t  var res = Long.ZERO;\n\t  var rem = this;\n\t  while (rem.greaterThanOrEqual(other)) {\n\t    // Approximate the result of division. This may be a little greater or\n\t    // smaller than the actual value.\n\t    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\t\n\t    // We will tweak the approximate result by changing it in the 48-th digit or\n\t    // the smallest non-fractional digit, whichever is larger.\n\t    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n\t    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n\t\n\t    // Decrease the approximation until it is smaller than the remainder.  Note\n\t    // that if it is too large, the product overflows and is negative.\n\t    var approxRes = Long.fromNumber(approx);\n\t    var approxRem = approxRes.multiply(other);\n\t    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n\t      approx -= delta;\n\t      approxRes = Long.fromNumber(approx);\n\t      approxRem = approxRes.multiply(other);\n\t    }\n\t\n\t    // We know the answer can't be zero... and actually, zero would cause\n\t    // infinite recursion since we would make no progress.\n\t    if (approxRes.isZero()) {\n\t      approxRes = Long.ONE;\n\t    }\n\t\n\t    res = res.add(approxRes);\n\t    rem = rem.subtract(approxRem);\n\t  }\n\t  return res;\n\t};\n\t\n\t/**\n\t * Returns this Long modulo the given one.\n\t *\n\t * @method\n\t * @param {Long} other Long by which to mod.\n\t * @return {Long} this Long modulo the given one.\n\t */\n\tLong.prototype.modulo = function (other) {\n\t  return this.subtract(this.div(other).multiply(other));\n\t};\n\t\n\t/**\n\t * The bitwise-NOT of this value.\n\t *\n\t * @method\n\t * @return {Long} the bitwise-NOT of this value.\n\t */\n\tLong.prototype.not = function () {\n\t  return Long.fromBits(~this.low_, ~this.high_);\n\t};\n\t\n\t/**\n\t * Returns the bitwise-AND of this Long and the given one.\n\t *\n\t * @method\n\t * @param {Long} other the Long with which to AND.\n\t * @return {Long} the bitwise-AND of this and the other.\n\t */\n\tLong.prototype.and = function (other) {\n\t  return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n\t};\n\t\n\t/**\n\t * Returns the bitwise-OR of this Long and the given one.\n\t *\n\t * @method\n\t * @param {Long} other the Long with which to OR.\n\t * @return {Long} the bitwise-OR of this and the other.\n\t */\n\tLong.prototype.or = function (other) {\n\t  return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n\t};\n\t\n\t/**\n\t * Returns the bitwise-XOR of this Long and the given one.\n\t *\n\t * @method\n\t * @param {Long} other the Long with which to XOR.\n\t * @return {Long} the bitwise-XOR of this and the other.\n\t */\n\tLong.prototype.xor = function (other) {\n\t  return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n\t};\n\t\n\t/**\n\t * Returns this Long with bits shifted to the left by the given amount.\n\t *\n\t * @method\n\t * @param {number} numBits the number of bits by which to shift.\n\t * @return {Long} this shifted to the left by the given amount.\n\t */\n\tLong.prototype.shiftLeft = function (numBits) {\n\t  numBits &= 63;\n\t  if (numBits == 0) {\n\t    return this;\n\t  } else {\n\t    var low = this.low_;\n\t    if (numBits < 32) {\n\t      var high = this.high_;\n\t      return Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);\n\t    } else {\n\t      return Long.fromBits(0, low << numBits - 32);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Returns this Long with bits shifted to the right by the given amount.\n\t *\n\t * @method\n\t * @param {number} numBits the number of bits by which to shift.\n\t * @return {Long} this shifted to the right by the given amount.\n\t */\n\tLong.prototype.shiftRight = function (numBits) {\n\t  numBits &= 63;\n\t  if (numBits == 0) {\n\t    return this;\n\t  } else {\n\t    var high = this.high_;\n\t    if (numBits < 32) {\n\t      var low = this.low_;\n\t      return Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);\n\t    } else {\n\t      return Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n\t *\n\t * @method\n\t * @param {number} numBits the number of bits by which to shift.\n\t * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n\t */\n\tLong.prototype.shiftRightUnsigned = function (numBits) {\n\t  numBits &= 63;\n\t  if (numBits == 0) {\n\t    return this;\n\t  } else {\n\t    var high = this.high_;\n\t    if (numBits < 32) {\n\t      var low = this.low_;\n\t      return Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);\n\t    } else if (numBits == 32) {\n\t      return Long.fromBits(high, 0);\n\t    } else {\n\t      return Long.fromBits(high >>> numBits - 32, 0);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Returns a Long representing the given (32-bit) integer value.\n\t *\n\t * @method\n\t * @param {number} value the 32-bit integer in question.\n\t * @return {Long} the corresponding Long value.\n\t */\n\tLong.fromInt = function (value) {\n\t  if (-128 <= value && value < 128) {\n\t    var cachedObj = Long.INT_CACHE_[value];\n\t    if (cachedObj) {\n\t      return cachedObj;\n\t    }\n\t  }\n\t\n\t  var obj = new Long(value | 0, value < 0 ? -1 : 0);\n\t  if (-128 <= value && value < 128) {\n\t    Long.INT_CACHE_[value] = obj;\n\t  }\n\t  return obj;\n\t};\n\t\n\t/**\n\t * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n\t *\n\t * @method\n\t * @param {number} value the number in question.\n\t * @return {Long} the corresponding Long value.\n\t */\n\tLong.fromNumber = function (value) {\n\t  if (isNaN(value) || !isFinite(value)) {\n\t    return Long.ZERO;\n\t  } else if (value <= -Long.TWO_PWR_63_DBL_) {\n\t    return Long.MIN_VALUE;\n\t  } else if (value + 1 >= Long.TWO_PWR_63_DBL_) {\n\t    return Long.MAX_VALUE;\n\t  } else if (value < 0) {\n\t    return Long.fromNumber(-value).negate();\n\t  } else {\n\t    return new Long(value % Long.TWO_PWR_32_DBL_ | 0, value / Long.TWO_PWR_32_DBL_ | 0);\n\t  }\n\t};\n\t\n\t/**\n\t * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n\t *\n\t * @method\n\t * @param {number} lowBits the low 32-bits.\n\t * @param {number} highBits the high 32-bits.\n\t * @return {Long} the corresponding Long value.\n\t */\n\tLong.fromBits = function (lowBits, highBits) {\n\t  return new Long(lowBits, highBits);\n\t};\n\t\n\t/**\n\t * Returns a Long representation of the given string, written using the given radix.\n\t *\n\t * @method\n\t * @param {String} str the textual representation of the Long.\n\t * @param {number} opt_radix the radix in which the text is written.\n\t * @return {Long} the corresponding Long value.\n\t */\n\tLong.fromString = function (str, opt_radix) {\n\t  if (str.length == 0) {\n\t    throw Error('number format error: empty string');\n\t  }\n\t\n\t  var radix = opt_radix || 10;\n\t  if (radix < 2 || 36 < radix) {\n\t    throw Error('radix out of range: ' + radix);\n\t  }\n\t\n\t  if (str.charAt(0) == '-') {\n\t    return Long.fromString(str.substring(1), radix).negate();\n\t  } else if (str.indexOf('-') >= 0) {\n\t    throw Error('number format error: interior \"-\" character: ' + str);\n\t  }\n\t\n\t  // Do several (8) digits each time through the loop, so as to\n\t  // minimize the calls to the very expensive emulated div.\n\t  var radixToPower = Long.fromNumber(Math.pow(radix, 8));\n\t\n\t  var result = Long.ZERO;\n\t  for (var i = 0; i < str.length; i += 8) {\n\t    var size = Math.min(8, str.length - i);\n\t    var value = parseInt(str.substring(i, i + size), radix);\n\t    if (size < 8) {\n\t      var power = Long.fromNumber(Math.pow(radix, size));\n\t      result = result.multiply(power).add(Long.fromNumber(value));\n\t    } else {\n\t      result = result.multiply(radixToPower);\n\t      result = result.add(Long.fromNumber(value));\n\t    }\n\t  }\n\t  return result;\n\t};\n\t\n\t// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n\t// from* methods on which they depend.\n\t\n\t\n\t/**\n\t * A cache of the Long representations of small integer values.\n\t * @type {Object}\n\t * @ignore\n\t */\n\tLong.INT_CACHE_ = {};\n\t\n\t// NOTE: the compiler should inline these constant values below and then remove\n\t// these variables, so there should be no runtime penalty for these.\n\t\n\t/**\n\t * Number used repeated below in calculations.  This must appear before the\n\t * first call to any from* function below.\n\t * @type {number}\n\t * @ignore\n\t */\n\tLong.TWO_PWR_16_DBL_ = 1 << 16;\n\t\n\t/**\n\t * @type {number}\n\t * @ignore\n\t */\n\tLong.TWO_PWR_24_DBL_ = 1 << 24;\n\t\n\t/**\n\t * @type {number}\n\t * @ignore\n\t */\n\tLong.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;\n\t\n\t/**\n\t * @type {number}\n\t * @ignore\n\t */\n\tLong.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;\n\t\n\t/**\n\t * @type {number}\n\t * @ignore\n\t */\n\tLong.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;\n\t\n\t/**\n\t * @type {number}\n\t * @ignore\n\t */\n\tLong.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;\n\t\n\t/**\n\t * @type {number}\n\t * @ignore\n\t */\n\tLong.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;\n\t\n\t/** @type {Long} */\n\tLong.ZERO = Long.fromInt(0);\n\t\n\t/** @type {Long} */\n\tLong.ONE = Long.fromInt(1);\n\t\n\t/** @type {Long} */\n\tLong.NEG_ONE = Long.fromInt(-1);\n\t\n\t/** @type {Long} */\n\tLong.MAX_VALUE = Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\t\n\t/** @type {Long} */\n\tLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);\n\t\n\t/**\n\t * @type {Long}\n\t * @ignore\n\t */\n\tLong.TWO_PWR_24_ = Long.fromInt(1 << 24);\n\t\n\tmodule.exports = Long;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * A class representation of the BSON Double type.\n\t *\n\t * @class\n\t * @param {number} value the number we want to represent as a double.\n\t * @return {Double}\n\t */\n\t\n\tvar Double = function Double(value) {\n\t  this._bsontype = 'Double';\n\t  this.value = value;\n\t};\n\t\n\t/**\n\t * Access the number value.\n\t *\n\t * @method\n\t * @return {number} returns the wrapped double number.\n\t */\n\tDouble.prototype.valueOf = function () {\n\t  return this.value;\n\t};\n\t\n\tDouble.prototype.equals = function (value) {\n\t  if (!value) return false;\n\t  if (typeof value !== 'number' && value._bsontype != 'Double') return false;\n\t  if (typeof value === 'number') return this.value === value;\n\t  return this.value === value.value;\n\t};\n\t\n\tDouble.prototype.toJSON = function () {\n\t  return { $numberDouble: this.value.toString() };\n\t};\n\t\n\tmodule.exports = Double;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * A class representation of the BSON Int32 type.\n\t *\n\t * @class\n\t * @param {number} value the number we want to represent as an int32.\n\t * @return {Int32}\n\t */\n\t\n\tvar Int32 = function Int32(value) {\n\t  this._bsontype = 'Int32';\n\t  this.value = value;\n\t};\n\t\n\t/**\n\t * Access the number value.\n\t *\n\t * @method\n\t * @return {number} returns the wrapped int32 number.\n\t */\n\tInt32.prototype.valueOf = function () {\n\t  return this.value;\n\t};\n\t\n\tInt32.prototype.equals = function (value) {\n\t  if (!value) return false;\n\t  if (typeof value !== 'number' && value._bsontype != 'Int32') return false;\n\t  if (typeof value === 'number') return this.value === value;\n\t  return this.value === value.value;\n\t};\n\t\n\tInt32.prototype.toJSON = function () {\n\t  return { $numberInt: this.value.toString() };\n\t};\n\t\n\tmodule.exports = Int32;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * A class representation of the BSON MaxKey type.\n\t *\n\t * @class\n\t * @return {MaxKey} A MaxKey instance\n\t */\n\t\n\tvar MaxKey = function MaxKey() {\n\t  this._bsontype = 'MaxKey';\n\t};\n\t\n\tMaxKey.prototype.equals = function (value) {\n\t  if (!value || value._bsontype != 'MaxKey') return false;\n\t  return true;\n\t};\n\t\n\tMaxKey.prototype.toJSON = function () {\n\t  return { $maxKey: 1 };\n\t};\n\t\n\tmodule.exports = MaxKey;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * A class representation of the BSON MinKey type.\n\t *\n\t * @class\n\t * @return {MinKey} A MinKey instance\n\t */\n\t\n\tvar MinKey = function MinKey() {\n\t  this._bsontype = 'MinKey';\n\t};\n\t\n\tMinKey.prototype.equals = function (value) {\n\t  if (!value || value._bsontype != 'MinKey') return false;\n\t  return true;\n\t};\n\t\n\tMinKey.prototype.toJSON = function () {\n\t  return { $minKey: 1 };\n\t};\n\t\n\tmodule.exports = MinKey;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {\"use strict\";\n\t\n\t/**\n\t * Machine id.\n\t *\n\t * Create a random 3-byte value (i.e. unique for this\n\t * process). Other drivers use a md5 of the machine id here, but\n\t * that would mean an asyc call to gethostname, so we don't bother.\n\t * @ignore\n\t */\n\t\n\tvar MACHINE_ID = parseInt(Math.random() * 0xFFFFFF, 10);\n\t\n\t// Regular expression that checks for hex value\n\tvar checkForHexRegExp = new RegExp(\"^[0-9a-fA-F]{24}$\");\n\t\n\t// Precomputed hex table enables speedy hex string conversion\n\tvar hexTable = [];\n\tfor (var i = 0; i < 256; i++) {\n\t  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n\t}\n\t\n\t// Lookup tables\n\tvar encodeLookup = '0123456789abcdef'.split('');\n\tvar decodeLookup = [];\n\tvar i = 0;\n\twhile (i < 10) {\n\t  decodeLookup[0x30 + i] = i++;\n\t}while (i < 16) {\n\t  decodeLookup[0x61 - 10 + i] = i++;\n\t}var convertToHex = function convertToHex(bytes) {\n\t  var hexString = '';\n\t\n\t  for (var i = 0; i < bytes.length; i++) {\n\t    hexString += hexTable[bytes[i]];\n\t  }\n\t\n\t  return hexString;\n\t};\n\t\n\t/**\n\t* Create a new ObjectID instance\n\t*\n\t* @class\n\t* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.\n\t* @property {number} generationTime The generation time of this ObjectId instance\n\t* @return {ObjectID} instance of ObjectID.\n\t*/\n\tvar ObjectID = function ObjectID(id) {\n\t  // Duck-typing to support ObjectId from different npm packages\n\t  if (id instanceof ObjectID) return id;\n\t  if (!(this instanceof ObjectID)) return new ObjectID(id);\n\t\n\t  this._bsontype = 'ObjectID';\n\t\n\t  var __id = null;\n\t  var valid = ObjectID.isValid(id);\n\t\n\t  // Throw an error if it's not a valid setup\n\t  if (!valid && id != null) {\n\t    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n\t  } else if (valid && typeof id == 'string' && id.length == 24) {\n\t    return ObjectID.createFromHexString(id);\n\t  } else if (id == null || typeof id == 'number') {\n\t    // convert to 12 byte binary string\n\t    this.id = this.generate(id);\n\t  } else if (id != null && id.length === 12) {\n\t    // assume 12 byte string\n\t    this.id = id;\n\t  } else if (id != null && id.toHexString) {\n\t    // Duck-typing to support ObjectId from different npm packages\n\t    return id;\n\t  } else {\n\t    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n\t  }\n\t\n\t  if (ObjectID.cacheHexString) this.__id = this.toHexString();\n\t};\n\t\n\t/**\n\t* Return the ObjectID id as a 24 byte hex string representation\n\t*\n\t* @method\n\t* @return {String} return the 24 byte hex string representation.\n\t*/\n\tObjectID.prototype.toHexString = function () {\n\t  if (ObjectID.cacheHexString && this.__id) return this.__id;\n\t\n\t  var hexString = '';\n\t  if (!this.id || !this.id.length) {\n\t    throw new Error('invalid ObjectId, ObjectId.id must be either a string or a Uint8Array, but is [' + JSON.stringify(this.id) + ']');\n\t  }\n\t\n\t  if (this.id instanceof Uint8Array) {\n\t    hexString = convertToHex(this.id);\n\t    if (ObjectID.cacheHexString) this.__id = hexString;\n\t    return hexString;\n\t  }\n\t\n\t  for (var i = 0; i < this.id.length; i++) {\n\t    hexString += hexTable[this.id.charCodeAt(i)];\n\t  }\n\t\n\t  if (ObjectID.cacheHexString) this.__id = hexString;\n\t  return hexString;\n\t};\n\t\n\t/**\n\t* Update the ObjectID index used in generating new ObjectID's on the driver\n\t*\n\t* @method\n\t* @return {number} returns next index value.\n\t* @ignore\n\t*/\n\tObjectID.prototype.getInc = function () {\n\t  return ObjectID.index = (ObjectID.index + 1) % 0xFFFFFF;\n\t};\n\t\n\t/**\n\t* Generate a 12 byte id buffer used in ObjectID's\n\t*\n\t* @method\n\t* @param {number} [time] optional parameter allowing to pass in a second based timestamp.\n\t* @return {Buffer} return the 12 byte id buffer string.\n\t*/\n\tObjectID.prototype.generate = function (time) {\n\t  if ('number' != typeof time) {\n\t    time = ~~(Date.now() / 1000);\n\t  }\n\t\n\t  // Use pid\n\t  var pid = (typeof process === 'undefined' ? Math.floor(Math.random() * 100000) : process.pid) % 0xFFFF;\n\t  var inc = this.getInc();\n\t  // Buffer used\n\t  var buffer = new Uint8Array(12);\n\t  // Encode time\n\t  buffer[3] = time & 0xff;\n\t  buffer[2] = time >> 8 & 0xff;\n\t  buffer[1] = time >> 16 & 0xff;\n\t  buffer[0] = time >> 24 & 0xff;\n\t  // Encode machine\n\t  buffer[6] = MACHINE_ID & 0xff;\n\t  buffer[5] = MACHINE_ID >> 8 & 0xff;\n\t  buffer[4] = MACHINE_ID >> 16 & 0xff;\n\t  // Encode pid\n\t  buffer[8] = pid & 0xff;\n\t  buffer[7] = pid >> 8 & 0xff;\n\t  // Encode index\n\t  buffer[11] = inc & 0xff;\n\t  buffer[10] = inc >> 8 & 0xff;\n\t  buffer[9] = inc >> 16 & 0xff;\n\t  // Return the buffer\n\t  return buffer;\n\t};\n\t\n\t/**\n\t* Converts the id into a 24 byte hex string for printing\n\t*\n\t* @return {String} return the 24 byte hex string representation.\n\t* @ignore\n\t*/\n\tObjectID.prototype.toString = function () {\n\t  return this.toHexString();\n\t};\n\t\n\t/**\n\t* Converts to its JSON representation.\n\t*\n\t* @return {String} return the 24 byte hex string representation.\n\t* @ignore\n\t*/\n\tObjectID.prototype.toJSON = function () {\n\t  return { $oid: this.toHexString() };\n\t};\n\t\n\t/**\n\t* Compares the equality of this ObjectID with `otherID`.\n\t*\n\t* @method\n\t* @param {Object} otherID ObjectID instance to compare against.\n\t* @return {Boolean} the result of comparing two ObjectID's\n\t*/\n\tObjectID.prototype.equals = function (otherId) {\n\t  var id;\n\t\n\t  if (otherId instanceof ObjectID) {\n\t    return this.toString() == otherId.toString();\n\t  } else if (typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12 && this.id instanceof Uint8Array) {\n\t    return otherId === this.id.toString('binary');\n\t  } else if (typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 24) {\n\t    return otherId === this.toHexString();\n\t  } else if (typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12) {\n\t    return otherId === this.id;\n\t  } else if (otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {\n\t    return otherId.toHexString() === this.toHexString();\n\t  } else {\n\t    return false;\n\t  }\n\t};\n\t\n\t/**\n\t* Returns the generation date (accurate up to the second) that this ID was generated.\n\t*\n\t* @method\n\t* @return {date} the generation date\n\t*/\n\tObjectID.prototype.getTimestamp = function () {\n\t  var timestamp = new Date();\n\t  var time = this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n\t  timestamp.setTime(Math.floor(time) * 1000);\n\t  return timestamp;\n\t};\n\t\n\t/**\n\t* Creates an ObjectID from a hex string representation of an ObjectID.\n\t*\n\t* @method\n\t* @param {String} hexString create a ObjectID from a passed in 24 byte hexstring.\n\t* @return {ObjectID} return the created ObjectID\n\t*/\n\tObjectID.createFromHexString = function (string) {\n\t  // Throw an error if it's not a valid setup\n\t  if (typeof string === 'undefined' || string != null && string.length != 24) throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n\t\n\t  var length = string.length;\n\t\n\t  if (length > 12 * 2) {\n\t    throw new Error('Id cannot be longer than 12 bytes');\n\t  }\n\t\n\t  // Calculate lengths\n\t  var sizeof = length >> 1;\n\t  var array = new Uint8Array(sizeof);\n\t  var n = 0;\n\t  var i = 0;\n\t\n\t  while (i < length) {\n\t    array[n++] = decodeLookup[string.charCodeAt(i++)] << 4 | decodeLookup[string.charCodeAt(i++)];\n\t  }\n\t\n\t  return new ObjectID(array);\n\t};\n\t\n\t/**\n\t* Checks if a value is a valid bson ObjectId\n\t*\n\t* @method\n\t* @return {Boolean} return true if the value is a valid bson ObjectId, return false otherwise.\n\t*/\n\tObjectID.isValid = function (id) {\n\t  if (id == null) return false;\n\t\n\t  if (typeof id == 'number') {\n\t    return true;\n\t  }\n\t\n\t  if (typeof id == 'string') {\n\t    return id.length == 12 || id.length == 24 && checkForHexRegExp.test(id);\n\t  }\n\t\n\t  if (id instanceof ObjectID) {\n\t    return true;\n\t  }\n\t\n\t  if (id instanceof Uint8Array) {\n\t    return true;\n\t  }\n\t\n\t  // Duck-Typing detection of ObjectId like objects\n\t  if (id.toHexString) {\n\t    return id.id.length == 12 || id.id.length == 24 && checkForHexRegExp.test(id.id);\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\t/**\n\t* @ignore\n\t*/\n\tObjectID.createPk = function () {\n\t  return new ObjectID();\n\t};\n\t\n\t/**\n\t* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\n\t*\n\t* @method\n\t* @param {number} time an integer number representing a number of seconds.\n\t* @return {ObjectID} return the created ObjectID\n\t*/\n\tObjectID.createFromTime = function (time) {\n\t  var buffer = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\t  // Encode time into first 4 bytes\n\t  buffer[3] = time & 0xff;\n\t  buffer[2] = time >> 8 & 0xff;\n\t  buffer[1] = time >> 16 & 0xff;\n\t  buffer[0] = time >> 24 & 0xff;\n\t  // Return the new objectId\n\t  return new ObjectID(buffer);\n\t};\n\t\n\t/**\n\t* @ignore\n\t*/\n\tObject.defineProperty(ObjectID.prototype, \"generationTime\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n\t  },\n\t  set: function set(value) {\n\t    // Encode time into first 4 bytes\n\t    this.id[3] = value & 0xff;\n\t    this.id[2] = value >> 8 & 0xff;\n\t    this.id[1] = value >> 16 & 0xff;\n\t    this.id[0] = value >> 24 & 0xff;\n\t  }\n\t});\n\t\n\t/**\n\t* @ignore\n\t*/\n\tObjectID.index = ~~(Math.random() * 0xFFFFFF);\n\t\n\tmodule.exports = ObjectID;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(25)))\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout() {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t})();\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch (e) {\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch (e) {\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e) {\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e) {\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while (len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () {\n\t    return '/';\n\t};\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function () {\n\t    return 0;\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * A class representation of the BSON RegExp type.\n\t *\n\t * @class\n\t * @return {BSONRegExp} A MinKey instance\n\t */\n\t\n\tvar BSONRegExp = function BSONRegExp(pattern, options) {\n\t  // Execute\n\t  this._bsontype = 'BSONRegExp';\n\t  this.pattern = pattern;\n\t  this.options = options || '';\n\t  // Perform validation of parameters\n\t  if (typeof this.pattern != 'string') throw Error('pattern must be a string');\n\t  if (typeof this.options != 'string') throw Error('options must be a string');\n\t\n\t  // Validate options\n\t  for (var i = 0; i < options.length; i++) {\n\t    if (!(this.options[i] == 'i' || this.options[i] == 'm' || this.options[i] == 'x' || this.options[i] == 'l' || this.options[i] == 's' || this.options[i] == 'u')) {\n\t      throw new Error('the regular expression options [' + this.options[i] + \"] is not supported\");\n\t    }\n\t  }\n\t};\n\t\n\tBSONRegExp.prototype.equals = function (value) {\n\t  if (!value || value._bsontype != 'BSONRegExp') return false;\n\t  return this.pattern == value.pattern && this.options == value.options;\n\t};\n\t\n\tBSONRegExp.prototype.toJSON = function () {\n\t  return { $regex: this.pattern, $options: this.options };\n\t};\n\t\n\tmodule.exports = BSONRegExp;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * A class representation of the BSON Symbol type.\n\t *\n\t * @class\n\t * @deprecated\n\t * @param {String} value the string representing the symbol.\n\t * @return {Symbol}\n\t */\n\t\n\tvar _Symbol = function _Symbol(value) {\n\t  this._bsontype = 'Symbol';\n\t  this.value = value;\n\t};\n\t\n\t/**\n\t * Access the wrapped string value.\n\t *\n\t * @method\n\t * @return {String} returns the wrapped string.\n\t */\n\t_Symbol.prototype.valueOf = function () {\n\t  return this.value;\n\t};\n\t\n\t_Symbol.prototype.equals = function (value) {\n\t  if (!value || !value.value) return false;\n\t  if (value._bsontype != 'Symbol') return false;\n\t  return this.value === value.value;\n\t};\n\t\n\t/**\n\t * @ignore\n\t */\n\t_Symbol.prototype.toJSON = function () {\n\t  return { $symbol: this.value };\n\t};\n\t\n\tmodule.exports = _Symbol;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t//     http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\t//\n\t// Copyright 2009 Google Inc. All Rights Reserved\n\t\n\t/**\n\t * Defines a Long class for representing a 64-bit two's-complement\n\t * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n\t * implementation is derived from LongLib in GWT.\n\t *\n\t * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n\t * values as *signed* integers.  See the from* functions below for more\n\t * convenient ways of constructing Longs.\n\t *\n\t * The internal representation of a Long is the two given signed, 32-bit values.\n\t * We use 32-bit pieces because these are the size of integers on which\n\t * Javascript performs bit-operations.  For operations like addition and\n\t * multiplication, we split each number into 16-bit pieces, which can easily be\n\t * multiplied within Javascript's floating-point representation without overflow\n\t * or change in sign.\n\t *\n\t * In the algorithms below, we frequently reduce the negative case to the\n\t * positive case by negating the input(s) and then post-processing the result.\n\t * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n\t * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n\t * a positive number, it overflows back into a negative).  Not handling this\n\t * case would often result in infinite recursion.\n\t *\n\t * @class\n\t * @param {number} low  the low (signed) 32 bits of the Timestamp.\n\t * @param {number} high the high (signed) 32 bits of the Timestamp.\n\t * @return {Timestamp}\n\t */\n\t\n\tvar Timestamp = function Timestamp(low, high) {\n\t  this._bsontype = 'Timestamp';\n\t  /**\n\t   * @type {number}\n\t   * @ignore\n\t   */\n\t  this.low_ = low | 0; // force into 32 signed bits.\n\t\n\t  /**\n\t   * @type {number}\n\t   * @ignore\n\t   */\n\t  this.high_ = high | 0; // force into 32 signed bits.\n\t};\n\t\n\t/**\n\t * Return the int value.\n\t *\n\t * @method\n\t * @return {number} the value, assuming it is a 32-bit integer.\n\t */\n\tTimestamp.prototype.toInt = function () {\n\t  return this.low_;\n\t};\n\t\n\t/**\n\t * Return the Number value.\n\t *\n\t * @method\n\t * @return {number} the closest floating-point representation to this value.\n\t */\n\tTimestamp.prototype.toNumber = function () {\n\t  return this.high_ * Timestamp.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n\t};\n\t\n\t/**\n\t * Return the JSON value.\n\t *\n\t * @method\n\t * @return {String} the JSON representation.\n\t */\n\tTimestamp.prototype.toJSON = function () {\n\t  return {\n\t    $timestamp: this.toString()\n\t  };\n\t};\n\t\n\t/**\n\t * Return the String value.\n\t *\n\t * @method\n\t * @param {number} [opt_radix] the radix in which the text should be written.\n\t * @return {String} the textual representation of this value.\n\t */\n\tTimestamp.prototype.toString = function (opt_radix) {\n\t  var radix = opt_radix || 10;\n\t  if (radix < 2 || 36 < radix) {\n\t    throw Error('radix out of range: ' + radix);\n\t  }\n\t\n\t  if (this.isZero()) {\n\t    return '0';\n\t  }\n\t\n\t  if (this.isNegative()) {\n\t    if (this.equals(Timestamp.MIN_VALUE)) {\n\t      // We need to change the Long value before it can be negated, so we remove\n\t      // the bottom-most digit in this base and then recurse to do the rest.\n\t      var radixLong = Timestamp.fromNumber(radix);\n\t      var div = this.div(radixLong);\n\t      var rem = div.multiply(radixLong).subtract(this);\n\t      return div.toString(radix) + rem.toInt().toString(radix);\n\t    } else {\n\t      return '-' + this.negate().toString(radix);\n\t    }\n\t  }\n\t\n\t  // Do several (6) digits each time through the loop, so as to\n\t  // minimize the calls to the very expensive emulated div.\n\t  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));\n\t\n\t  var rem = this;\n\t  var result = '';\n\t  while (true) {\n\t    var remDiv = rem.div(radixToPower);\n\t    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n\t    var digits = intval.toString(radix);\n\t\n\t    rem = remDiv;\n\t    if (rem.isZero()) {\n\t      return digits + result;\n\t    } else {\n\t      while (digits.length < 6) {\n\t        digits = '0' + digits;\n\t      }\n\t      result = '' + digits + result;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Return the high 32-bits value.\n\t *\n\t * @method\n\t * @return {number} the high 32-bits as a signed value.\n\t */\n\tTimestamp.prototype.getHighBits = function () {\n\t  return this.high_;\n\t};\n\t\n\t/**\n\t * Return the low 32-bits value.\n\t *\n\t * @method\n\t * @return {number} the low 32-bits as a signed value.\n\t */\n\tTimestamp.prototype.getLowBits = function () {\n\t  return this.low_;\n\t};\n\t\n\t/**\n\t * Return the low unsigned 32-bits value.\n\t *\n\t * @method\n\t * @return {number} the low 32-bits as an unsigned value.\n\t */\n\tTimestamp.prototype.getLowBitsUnsigned = function () {\n\t  return this.low_ >= 0 ? this.low_ : Timestamp.TWO_PWR_32_DBL_ + this.low_;\n\t};\n\t\n\t/**\n\t * Returns the number of bits needed to represent the absolute value of this Timestamp.\n\t *\n\t * @method\n\t * @return {number} Returns the number of bits needed to represent the absolute value of this Timestamp.\n\t */\n\tTimestamp.prototype.getNumBitsAbs = function () {\n\t  if (this.isNegative()) {\n\t    if (this.equals(Timestamp.MIN_VALUE)) {\n\t      return 64;\n\t    } else {\n\t      return this.negate().getNumBitsAbs();\n\t    }\n\t  } else {\n\t    var val = this.high_ != 0 ? this.high_ : this.low_;\n\t    for (var bit = 31; bit > 0; bit--) {\n\t      if ((val & 1 << bit) != 0) {\n\t        break;\n\t      }\n\t    }\n\t    return this.high_ != 0 ? bit + 33 : bit + 1;\n\t  }\n\t};\n\t\n\t/**\n\t * Return whether this value is zero.\n\t *\n\t * @method\n\t * @return {Boolean} whether this value is zero.\n\t */\n\tTimestamp.prototype.isZero = function () {\n\t  return this.high_ == 0 && this.low_ == 0;\n\t};\n\t\n\t/**\n\t * Return whether this value is negative.\n\t *\n\t * @method\n\t * @return {Boolean} whether this value is negative.\n\t */\n\tTimestamp.prototype.isNegative = function () {\n\t  return this.high_ < 0;\n\t};\n\t\n\t/**\n\t * Return whether this value is odd.\n\t *\n\t * @method\n\t * @return {Boolean} whether this value is odd.\n\t */\n\tTimestamp.prototype.isOdd = function () {\n\t  return (this.low_ & 1) == 1;\n\t};\n\t\n\t/**\n\t * Return whether this Long equals the other\n\t *\n\t * @method\n\t * @param {Timestamp} other Long to compare against.\n\t * @return {Boolean} whether this Long equals the other\n\t */\n\tTimestamp.prototype.equals = function (other) {\n\t  return this.high_ == other.high_ && this.low_ == other.low_;\n\t};\n\t\n\t/**\n\t * Return whether this Long does not equal the other.\n\t *\n\t * @method\n\t * @param {Timestamp} other Long to compare against.\n\t * @return {Boolean} whether this Long does not equal the other.\n\t */\n\tTimestamp.prototype.notEquals = function (other) {\n\t  return this.high_ != other.high_ || this.low_ != other.low_;\n\t};\n\t\n\t/**\n\t * Return whether this Long is less than the other.\n\t *\n\t * @method\n\t * @param {Timestamp} other Long to compare against.\n\t * @return {Boolean} whether this Long is less than the other.\n\t */\n\tTimestamp.prototype.lessThan = function (other) {\n\t  return this.compare(other) < 0;\n\t};\n\t\n\t/**\n\t * Return whether this Long is less than or equal to the other.\n\t *\n\t * @method\n\t * @param {Timestamp} other Long to compare against.\n\t * @return {Boolean} whether this Long is less than or equal to the other.\n\t */\n\tTimestamp.prototype.lessThanOrEqual = function (other) {\n\t  return this.compare(other) <= 0;\n\t};\n\t\n\t/**\n\t * Return whether this Long is greater than the other.\n\t *\n\t * @method\n\t * @param {Timestamp} other Long to compare against.\n\t * @return {Boolean} whether this Long is greater than the other.\n\t */\n\tTimestamp.prototype.greaterThan = function (other) {\n\t  return this.compare(other) > 0;\n\t};\n\t\n\t/**\n\t * Return whether this Long is greater than or equal to the other.\n\t *\n\t * @method\n\t * @param {Timestamp} other Long to compare against.\n\t * @return {Boolean} whether this Long is greater than or equal to the other.\n\t */\n\tTimestamp.prototype.greaterThanOrEqual = function (other) {\n\t  return this.compare(other) >= 0;\n\t};\n\t\n\t/**\n\t * Compares this Long with the given one.\n\t *\n\t * @method\n\t * @param {Timestamp} other Long to compare against.\n\t * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n\t */\n\tTimestamp.prototype.compare = function (other) {\n\t  if (this.equals(other)) {\n\t    return 0;\n\t  }\n\t\n\t  var thisNeg = this.isNegative();\n\t  var otherNeg = other.isNegative();\n\t  if (thisNeg && !otherNeg) {\n\t    return -1;\n\t  }\n\t  if (!thisNeg && otherNeg) {\n\t    return 1;\n\t  }\n\t\n\t  // at this point, the signs are the same, so subtraction will not overflow\n\t  if (this.subtract(other).isNegative()) {\n\t    return -1;\n\t  } else {\n\t    return 1;\n\t  }\n\t};\n\t\n\t/**\n\t * The negation of this value.\n\t *\n\t * @method\n\t * @return {Timestamp} the negation of this value.\n\t */\n\tTimestamp.prototype.negate = function () {\n\t  if (this.equals(Timestamp.MIN_VALUE)) {\n\t    return Timestamp.MIN_VALUE;\n\t  } else {\n\t    return this.not().add(Timestamp.ONE);\n\t  }\n\t};\n\t\n\t/**\n\t * Returns the sum of this and the given Timestamp.\n\t *\n\t * @method\n\t * @param {Timestamp} other Long to add to this one.\n\t * @return {Timestamp} the sum of this and the given Timestamp.\n\t */\n\tTimestamp.prototype.add = function (other) {\n\t  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\t\n\t  var a48 = this.high_ >>> 16;\n\t  var a32 = this.high_ & 0xFFFF;\n\t  var a16 = this.low_ >>> 16;\n\t  var a00 = this.low_ & 0xFFFF;\n\t\n\t  var b48 = other.high_ >>> 16;\n\t  var b32 = other.high_ & 0xFFFF;\n\t  var b16 = other.low_ >>> 16;\n\t  var b00 = other.low_ & 0xFFFF;\n\t\n\t  var c48 = 0,\n\t      c32 = 0,\n\t      c16 = 0,\n\t      c00 = 0;\n\t  c00 += a00 + b00;\n\t  c16 += c00 >>> 16;\n\t  c00 &= 0xFFFF;\n\t  c16 += a16 + b16;\n\t  c32 += c16 >>> 16;\n\t  c16 &= 0xFFFF;\n\t  c32 += a32 + b32;\n\t  c48 += c32 >>> 16;\n\t  c32 &= 0xFFFF;\n\t  c48 += a48 + b48;\n\t  c48 &= 0xFFFF;\n\t  return Timestamp.fromBits(c16 << 16 | c00, c48 << 16 | c32);\n\t};\n\t\n\t/**\n\t * Returns the difference of this and the given Timestamp.\n\t *\n\t * @method\n\t * @param {Timestamp} other Long to subtract from this.\n\t * @return {Timestamp} the difference of this and the given Timestamp.\n\t */\n\tTimestamp.prototype.subtract = function (other) {\n\t  return this.add(other.negate());\n\t};\n\t\n\t/**\n\t * Returns the product of this and the given Timestamp.\n\t *\n\t * @method\n\t * @param {Timestamp} other Long to multiply with this.\n\t * @return {Timestamp} the product of this and the other.\n\t */\n\tTimestamp.prototype.multiply = function (other) {\n\t  if (this.isZero()) {\n\t    return Timestamp.ZERO;\n\t  } else if (other.isZero()) {\n\t    return Timestamp.ZERO;\n\t  }\n\t\n\t  if (this.equals(Timestamp.MIN_VALUE)) {\n\t    return other.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n\t  } else if (other.equals(Timestamp.MIN_VALUE)) {\n\t    return this.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n\t  }\n\t\n\t  if (this.isNegative()) {\n\t    if (other.isNegative()) {\n\t      return this.negate().multiply(other.negate());\n\t    } else {\n\t      return this.negate().multiply(other).negate();\n\t    }\n\t  } else if (other.isNegative()) {\n\t    return this.multiply(other.negate()).negate();\n\t  }\n\t\n\t  // If both Longs are small, use float multiplication\n\t  if (this.lessThan(Timestamp.TWO_PWR_24_) && other.lessThan(Timestamp.TWO_PWR_24_)) {\n\t    return Timestamp.fromNumber(this.toNumber() * other.toNumber());\n\t  }\n\t\n\t  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n\t  // We can skip products that would overflow.\n\t\n\t  var a48 = this.high_ >>> 16;\n\t  var a32 = this.high_ & 0xFFFF;\n\t  var a16 = this.low_ >>> 16;\n\t  var a00 = this.low_ & 0xFFFF;\n\t\n\t  var b48 = other.high_ >>> 16;\n\t  var b32 = other.high_ & 0xFFFF;\n\t  var b16 = other.low_ >>> 16;\n\t  var b00 = other.low_ & 0xFFFF;\n\t\n\t  var c48 = 0,\n\t      c32 = 0,\n\t      c16 = 0,\n\t      c00 = 0;\n\t  c00 += a00 * b00;\n\t  c16 += c00 >>> 16;\n\t  c00 &= 0xFFFF;\n\t  c16 += a16 * b00;\n\t  c32 += c16 >>> 16;\n\t  c16 &= 0xFFFF;\n\t  c16 += a00 * b16;\n\t  c32 += c16 >>> 16;\n\t  c16 &= 0xFFFF;\n\t  c32 += a32 * b00;\n\t  c48 += c32 >>> 16;\n\t  c32 &= 0xFFFF;\n\t  c32 += a16 * b16;\n\t  c48 += c32 >>> 16;\n\t  c32 &= 0xFFFF;\n\t  c32 += a00 * b32;\n\t  c48 += c32 >>> 16;\n\t  c32 &= 0xFFFF;\n\t  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n\t  c48 &= 0xFFFF;\n\t  return Timestamp.fromBits(c16 << 16 | c00, c48 << 16 | c32);\n\t};\n\t\n\t/**\n\t * Returns this Long divided by the given one.\n\t *\n\t * @method\n\t * @param {Timestamp} other Long by which to divide.\n\t * @return {Timestamp} this Long divided by the given one.\n\t */\n\tTimestamp.prototype.div = function (other) {\n\t  if (other.isZero()) {\n\t    throw Error('division by zero');\n\t  } else if (this.isZero()) {\n\t    return Timestamp.ZERO;\n\t  }\n\t\n\t  if (this.equals(Timestamp.MIN_VALUE)) {\n\t    if (other.equals(Timestamp.ONE) || other.equals(Timestamp.NEG_ONE)) {\n\t      return Timestamp.MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n\t    } else if (other.equals(Timestamp.MIN_VALUE)) {\n\t      return Timestamp.ONE;\n\t    } else {\n\t      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n\t      var halfThis = this.shiftRight(1);\n\t      var approx = halfThis.div(other).shiftLeft(1);\n\t      if (approx.equals(Timestamp.ZERO)) {\n\t        return other.isNegative() ? Timestamp.ONE : Timestamp.NEG_ONE;\n\t      } else {\n\t        var rem = this.subtract(other.multiply(approx));\n\t        var result = approx.add(rem.div(other));\n\t        return result;\n\t      }\n\t    }\n\t  } else if (other.equals(Timestamp.MIN_VALUE)) {\n\t    return Timestamp.ZERO;\n\t  }\n\t\n\t  if (this.isNegative()) {\n\t    if (other.isNegative()) {\n\t      return this.negate().div(other.negate());\n\t    } else {\n\t      return this.negate().div(other).negate();\n\t    }\n\t  } else if (other.isNegative()) {\n\t    return this.div(other.negate()).negate();\n\t  }\n\t\n\t  // Repeat the following until the remainder is less than other:  find a\n\t  // floating-point that approximates remainder / other *from below*, add this\n\t  // into the result, and subtract it from the remainder.  It is critical that\n\t  // the approximate value is less than or equal to the real value so that the\n\t  // remainder never becomes negative.\n\t  var res = Timestamp.ZERO;\n\t  var rem = this;\n\t  while (rem.greaterThanOrEqual(other)) {\n\t    // Approximate the result of division. This may be a little greater or\n\t    // smaller than the actual value.\n\t    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\t\n\t    // We will tweak the approximate result by changing it in the 48-th digit or\n\t    // the smallest non-fractional digit, whichever is larger.\n\t    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n\t    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n\t\n\t    // Decrease the approximation until it is smaller than the remainder.  Note\n\t    // that if it is too large, the product overflows and is negative.\n\t    var approxRes = Timestamp.fromNumber(approx);\n\t    var approxRem = approxRes.multiply(other);\n\t    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n\t      approx -= delta;\n\t      approxRes = Timestamp.fromNumber(approx);\n\t      approxRem = approxRes.multiply(other);\n\t    }\n\t\n\t    // We know the answer can't be zero... and actually, zero would cause\n\t    // infinite recursion since we would make no progress.\n\t    if (approxRes.isZero()) {\n\t      approxRes = Timestamp.ONE;\n\t    }\n\t\n\t    res = res.add(approxRes);\n\t    rem = rem.subtract(approxRem);\n\t  }\n\t  return res;\n\t};\n\t\n\t/**\n\t * Returns this Long modulo the given one.\n\t *\n\t * @method\n\t * @param {Timestamp} other Long by which to mod.\n\t * @return {Timestamp} this Long modulo the given one.\n\t */\n\tTimestamp.prototype.modulo = function (other) {\n\t  return this.subtract(this.div(other).multiply(other));\n\t};\n\t\n\t/**\n\t * The bitwise-NOT of this value.\n\t *\n\t * @method\n\t * @return {Timestamp} the bitwise-NOT of this value.\n\t */\n\tTimestamp.prototype.not = function () {\n\t  return Timestamp.fromBits(~this.low_, ~this.high_);\n\t};\n\t\n\t/**\n\t * Returns the bitwise-AND of this Long and the given one.\n\t *\n\t * @method\n\t * @param {Timestamp} other the Long with which to AND.\n\t * @return {Timestamp} the bitwise-AND of this and the other.\n\t */\n\tTimestamp.prototype.and = function (other) {\n\t  return Timestamp.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n\t};\n\t\n\t/**\n\t * Returns the bitwise-OR of this Long and the given one.\n\t *\n\t * @method\n\t * @param {Timestamp} other the Long with which to OR.\n\t * @return {Timestamp} the bitwise-OR of this and the other.\n\t */\n\tTimestamp.prototype.or = function (other) {\n\t  return Timestamp.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n\t};\n\t\n\t/**\n\t * Returns the bitwise-XOR of this Long and the given one.\n\t *\n\t * @method\n\t * @param {Timestamp} other the Long with which to XOR.\n\t * @return {Timestamp} the bitwise-XOR of this and the other.\n\t */\n\tTimestamp.prototype.xor = function (other) {\n\t  return Timestamp.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n\t};\n\t\n\t/**\n\t * Returns this Long with bits shifted to the left by the given amount.\n\t *\n\t * @method\n\t * @param {number} numBits the number of bits by which to shift.\n\t * @return {Timestamp} this shifted to the left by the given amount.\n\t */\n\tTimestamp.prototype.shiftLeft = function (numBits) {\n\t  numBits &= 63;\n\t  if (numBits == 0) {\n\t    return this;\n\t  } else {\n\t    var low = this.low_;\n\t    if (numBits < 32) {\n\t      var high = this.high_;\n\t      return Timestamp.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);\n\t    } else {\n\t      return Timestamp.fromBits(0, low << numBits - 32);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Returns this Long with bits shifted to the right by the given amount.\n\t *\n\t * @method\n\t * @param {number} numBits the number of bits by which to shift.\n\t * @return {Timestamp} this shifted to the right by the given amount.\n\t */\n\tTimestamp.prototype.shiftRight = function (numBits) {\n\t  numBits &= 63;\n\t  if (numBits == 0) {\n\t    return this;\n\t  } else {\n\t    var high = this.high_;\n\t    if (numBits < 32) {\n\t      var low = this.low_;\n\t      return Timestamp.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);\n\t    } else {\n\t      return Timestamp.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n\t *\n\t * @method\n\t * @param {number} numBits the number of bits by which to shift.\n\t * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n\t */\n\tTimestamp.prototype.shiftRightUnsigned = function (numBits) {\n\t  numBits &= 63;\n\t  if (numBits == 0) {\n\t    return this;\n\t  } else {\n\t    var high = this.high_;\n\t    if (numBits < 32) {\n\t      var low = this.low_;\n\t      return Timestamp.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);\n\t    } else if (numBits == 32) {\n\t      return Timestamp.fromBits(high, 0);\n\t    } else {\n\t      return Timestamp.fromBits(high >>> numBits - 32, 0);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Returns a Long representing the given (32-bit) integer value.\n\t *\n\t * @method\n\t * @param {number} value the 32-bit integer in question.\n\t * @return {Timestamp} the corresponding Long value.\n\t */\n\tTimestamp.fromInt = function (value) {\n\t  if (-128 <= value && value < 128) {\n\t    var cachedObj = Timestamp.INT_CACHE_[value];\n\t    if (cachedObj) {\n\t      return cachedObj;\n\t    }\n\t  }\n\t\n\t  var obj = new Timestamp(value | 0, value < 0 ? -1 : 0);\n\t  if (-128 <= value && value < 128) {\n\t    Timestamp.INT_CACHE_[value] = obj;\n\t  }\n\t  return obj;\n\t};\n\t\n\t/**\n\t * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n\t *\n\t * @method\n\t * @param {number} value the number in question.\n\t * @return {Timestamp} the corresponding Long value.\n\t */\n\tTimestamp.fromNumber = function (value) {\n\t  if (isNaN(value) || !isFinite(value)) {\n\t    return Timestamp.ZERO;\n\t  } else if (value <= -Timestamp.TWO_PWR_63_DBL_) {\n\t    return Timestamp.MIN_VALUE;\n\t  } else if (value + 1 >= Timestamp.TWO_PWR_63_DBL_) {\n\t    return Timestamp.MAX_VALUE;\n\t  } else if (value < 0) {\n\t    return Timestamp.fromNumber(-value).negate();\n\t  } else {\n\t    return new Timestamp(value % Timestamp.TWO_PWR_32_DBL_ | 0, value / Timestamp.TWO_PWR_32_DBL_ | 0);\n\t  }\n\t};\n\t\n\t/**\n\t * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n\t *\n\t * @method\n\t * @param {number} lowBits the low 32-bits.\n\t * @param {number} highBits the high 32-bits.\n\t * @return {Timestamp} the corresponding Long value.\n\t */\n\tTimestamp.fromBits = function (lowBits, highBits) {\n\t  return new Timestamp(lowBits, highBits);\n\t};\n\t\n\t/**\n\t * Returns a Long representation of the given string, written using the given radix.\n\t *\n\t * @method\n\t * @param {String} str the textual representation of the Timestamp.\n\t * @param {number} opt_radix the radix in which the text is written.\n\t * @return {Timestamp} the corresponding Long value.\n\t */\n\tTimestamp.fromString = function (str, opt_radix) {\n\t  if (str.length == 0) {\n\t    throw Error('number format error: empty string');\n\t  }\n\t\n\t  var radix = opt_radix || 10;\n\t  if (radix < 2 || 36 < radix) {\n\t    throw Error('radix out of range: ' + radix);\n\t  }\n\t\n\t  if (str.charAt(0) == '-') {\n\t    return Timestamp.fromString(str.substring(1), radix).negate();\n\t  } else if (str.indexOf('-') >= 0) {\n\t    throw Error('number format error: interior \"-\" character: ' + str);\n\t  }\n\t\n\t  // Do several (8) digits each time through the loop, so as to\n\t  // minimize the calls to the very expensive emulated div.\n\t  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));\n\t\n\t  var result = Timestamp.ZERO;\n\t  for (var i = 0; i < str.length; i += 8) {\n\t    var size = Math.min(8, str.length - i);\n\t    var value = parseInt(str.substring(i, i + size), radix);\n\t    if (size < 8) {\n\t      var power = Timestamp.fromNumber(Math.pow(radix, size));\n\t      result = result.multiply(power).add(Timestamp.fromNumber(value));\n\t    } else {\n\t      result = result.multiply(radixToPower);\n\t      result = result.add(Timestamp.fromNumber(value));\n\t    }\n\t  }\n\t  return result;\n\t};\n\t\n\t// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n\t// from* methods on which they depend.\n\t\n\t\n\t/**\n\t * A cache of the Long representations of small integer values.\n\t * @type {Object}\n\t * @ignore\n\t */\n\tTimestamp.INT_CACHE_ = {};\n\t\n\t// NOTE: the compiler should inline these constant values below and then remove\n\t// these variables, so there should be no runtime penalty for these.\n\t\n\t/**\n\t * Number used repeated below in calculations.  This must appear before the\n\t * first call to any from* function below.\n\t * @type {number}\n\t * @ignore\n\t */\n\tTimestamp.TWO_PWR_16_DBL_ = 1 << 16;\n\t\n\t/**\n\t * @type {number}\n\t * @ignore\n\t */\n\tTimestamp.TWO_PWR_24_DBL_ = 1 << 24;\n\t\n\t/**\n\t * @type {number}\n\t * @ignore\n\t */\n\tTimestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\t\n\t/**\n\t * @type {number}\n\t * @ignore\n\t */\n\tTimestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;\n\t\n\t/**\n\t * @type {number}\n\t * @ignore\n\t */\n\tTimestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\t\n\t/**\n\t * @type {number}\n\t * @ignore\n\t */\n\tTimestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;\n\t\n\t/**\n\t * @type {number}\n\t * @ignore\n\t */\n\tTimestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;\n\t\n\t/** @type {Timestamp} */\n\tTimestamp.ZERO = Timestamp.fromInt(0);\n\t\n\t/** @type {Timestamp} */\n\tTimestamp.ONE = Timestamp.fromInt(1);\n\t\n\t/** @type {Timestamp} */\n\tTimestamp.NEG_ONE = Timestamp.fromInt(-1);\n\t\n\t/** @type {Timestamp} */\n\tTimestamp.MAX_VALUE = Timestamp.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\t\n\t/** @type {Timestamp} */\n\tTimestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);\n\t\n\t/**\n\t * @type {Timestamp}\n\t * @ignore\n\t */\n\tTimestamp.TWO_PWR_24_ = Timestamp.fromInt(1 << 24);\n\t\n\tmodule.exports = Timestamp;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// baas.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 649ad8c4df57cef65959","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Admin = exports.MongoClient = exports.BaasClient = exports.toQueryString = exports.ErrUnauthorized = exports.ErrInvalidSession = exports.ErrAuthProviderNotFound = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _auth = require('./auth');\n\nvar _auth2 = _interopRequireDefault(_auth);\n\nvar _common = require('./common');\n\nvar common = _interopRequireWildcard(_common);\n\nvar _textEncodingUtf = require('text-encoding-utf-8');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* global window, fetch */\n/* eslint no-labels: ['error', { 'allowLoop': true }] */\nrequire('isomorphic-fetch');\n\nvar ErrAuthProviderNotFound = exports.ErrAuthProviderNotFound = 'AuthProviderNotFound';\nvar ErrInvalidSession = exports.ErrInvalidSession = 'InvalidSession';\nvar ErrUnauthorized = exports.ErrUnauthorized = 'Unauthorized';\n\nvar EJSON = require('mongodb-extjson');\n\nvar toQueryString = exports.toQueryString = function toQueryString(obj) {\n  var parts = [];\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      parts.push(encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]));\n    }\n  }\n  return parts.join('&');\n};\n\nvar BaasClient = exports.BaasClient = function () {\n  function BaasClient(clientAppID, options) {\n    _classCallCheck(this, BaasClient);\n\n    var baseUrl = common.DEFAULT_BAAS_SERVER_URL;\n    if (options && options.baseUrl) {\n      baseUrl = options.baseUrl;\n    }\n    this.appUrl = baseUrl + '/admin/v1';\n    this.authUrl = baseUrl + '/admin/v1/auth';\n    if (clientAppID) {\n      this.appUrl = baseUrl + '/v1/app/' + clientAppID;\n      this.authUrl = this.appUrl + '/auth';\n    }\n    this.authManager = new _auth2.default(this.authUrl);\n    this.authManager.handleRedirect();\n  }\n\n  _createClass(BaasClient, [{\n    key: 'authWithOAuth',\n    value: function authWithOAuth(providerName, redirectUrl) {\n      window.location.replace(this.authManager.getOAuthLoginURL(providerName, redirectUrl));\n    }\n  }, {\n    key: 'authedId',\n    value: function authedId() {\n      return this.authManager.authedId();\n    }\n  }, {\n    key: 'auth',\n    value: function auth() {\n      return this.authManager.get();\n    }\n  }, {\n    key: 'authError',\n    value: function authError() {\n      return this.authManager.error();\n    }\n  }, {\n    key: 'logout',\n    value: function logout() {\n      var _this = this;\n\n      return this._do('/auth', 'DELETE', { refreshOnFailure: false, useRefreshToken: true }).then(function () {\n        return _this.authManager.clear();\n      });\n    }\n  }, {\n    key: '_do',\n    value: function _do(resource, method, options) {\n      var _this2 = this;\n\n      if (!options) {\n        options = {};\n      }\n      if (options.refreshOnFailure === undefined) {\n        options.refreshOnFailure = true;\n      }\n      if (options.useRefreshToken === undefined) {\n        options.useRefreshToken = false;\n      }\n      if (!options.noAuth) {\n        if (this.auth() === null) {\n          return Promise.reject(new common.BaasError('Must auth first', ErrUnauthorized));\n        }\n      }\n\n      var url = '' + this.appUrl + resource;\n      var fetchArgs = common.makeFetchArgs(method, options.body);\n      if (!options.noAuth) {\n        var token = options.useRefreshToken ? this.authManager.getRefreshToken() : this.auth()['accessToken'];\n        fetchArgs.headers['Authorization'] = 'Bearer ' + token;\n      }\n      if (options.queryParams) {\n        url = url + '?' + toQueryString(options.queryParams);\n      }\n\n      return fetch(url, fetchArgs).then(function (response) {\n        // Okay: passthrough\n        if (response.status >= 200 && response.status < 300) {\n          return Promise.resolve(response);\n        } else if (response.headers.get('Content-Type') === common.JSONTYPE) {\n          return response.json().then(function (json) {\n            // Only want to try refreshing token when there's an invalid session\n            if ('errorCode' in json && json['errorCode'] === ErrInvalidSession) {\n              if (!options.refreshOnFailure) {\n                _this2.authManager.clear();\n                var _error = new common.BaasError(json['error'], json['errorCode']);\n                _error.response = response;\n                throw _error;\n              }\n\n              return _this2._refreshToken().then(function () {\n                options.refreshOnFailure = false;\n                return _this2._do(resource, method, options);\n              });\n            }\n\n            var error = new common.BaasError(json['error'], json['errorCode']);\n            error.response = response;\n            return Promise.reject(error);\n          });\n        }\n\n        var error = new Error(response.statusText);\n        error.response = response;\n\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: '_refreshToken',\n    value: function _refreshToken() {\n      var _this3 = this;\n\n      if (this.authManager.isImpersonatingUser()) {\n        return this.authManager.refreshImpersonation(this);\n      }\n      return this._do('/auth/newAccessToken', 'POST', { refreshOnFailure: false, useRefreshToken: true }).then(function (response) {\n        return response.json().then(function (json) {\n          _this3.authManager.setAccessToken(json['accessToken']);\n          return Promise.resolve();\n        });\n      });\n    }\n  }, {\n    key: 'executePipeline',\n    value: function executePipeline(stages, options) {\n      var responseDecoder = function responseDecoder(d) {\n        return new EJSON().parse(d, { strict: false });\n      };\n      var responseEncoder = function responseEncoder(d) {\n        return new EJSON().stringify(d);\n      };\n      if (options) {\n        if (options.decoder) {\n          if (typeof options.decoder !== 'function') {\n            throw new Error('decoder option must be a function, but \"' + _typeof(options.decoder) + '\" was provided');\n          }\n          responseDecoder = options.decoder;\n        }\n        if (options.encoder) {\n          if (typeof options.encoder !== 'function') {\n            throw new Error('encoder option must be a function, but \"' + _typeof(options.encoder) + '\" was provided');\n          }\n          responseEncoder = options.encoder;\n        }\n      }\n      return this._do('/pipeline', 'POST', { body: responseEncoder(stages) }).then(function (response) {\n        if (response.arrayBuffer) {\n          return response.arrayBuffer();\n        }\n        return response.buffer();\n      }).then(function (buf) {\n        return new _textEncodingUtf.TextDecoder('utf-8').decode(new Uint8Array(buf));\n      }).then(function (body) {\n        return responseDecoder(body);\n      });\n    }\n  }]);\n\n  return BaasClient;\n}();\n\nvar DB = function () {\n  function DB(client, service, name) {\n    _classCallCheck(this, DB);\n\n    this.client = client;\n    this.service = service;\n    this.name = name;\n  }\n\n  _createClass(DB, [{\n    key: 'getCollection',\n    value: function getCollection(name) {\n      return new Collection(this, name);\n    }\n  }]);\n\n  return DB;\n}();\n\nvar Collection = function () {\n  function Collection(db, name) {\n    _classCallCheck(this, Collection);\n\n    this.db = db;\n    this.name = name;\n  }\n\n  _createClass(Collection, [{\n    key: 'getBaseArgs',\n    value: function getBaseArgs() {\n      return {\n        'database': this.db.name,\n        'collection': this.name\n      };\n    }\n  }, {\n    key: 'deleteOne',\n    value: function deleteOne(query) {\n      var args = this.getBaseArgs();\n      args.query = query;\n      args.singleDoc = true;\n      return this.db.client.executePipeline([{\n        'service': this.db.service,\n        'action': 'delete',\n        'args': args\n      }]);\n    }\n  }, {\n    key: 'deleteMany',\n    value: function deleteMany(query) {\n      var args = this.getBaseArgs();\n      args.query = query;\n      args.singleDoc = false;\n      return this.db.client.executePipeline([{\n        'service': this.db.service,\n        'action': 'delete',\n        'args': args\n      }]);\n    }\n  }, {\n    key: 'find',\n    value: function find(query, project) {\n      var args = this.getBaseArgs();\n      args.query = query;\n      args.project = project;\n      return this.db.client.executePipeline([{\n        'service': this.db.service,\n        'action': 'find',\n        'args': args\n      }]);\n    }\n  }, {\n    key: 'insert',\n    value: function insert(docs) {\n      var toInsert = void 0;\n      if (docs instanceof Array) {\n        toInsert = docs;\n      } else {\n        toInsert = Array.from(arguments);\n      }\n\n      return this.db.client.executePipeline([{ 'action': 'literal',\n        'args': {\n          'items': toInsert\n        }\n      }, {\n        'service': this.db.service,\n        'action': 'insert',\n        'args': this.getBaseArgs()\n      }]);\n    }\n  }, {\n    key: 'makeUpdateStage',\n    value: function makeUpdateStage(query, update, upsert, multi) {\n      var args = this.getBaseArgs();\n      args.query = query;\n      args.update = update;\n      if (upsert) {\n        args.upsert = true;\n      }\n      if (multi) {\n        args.multi = true;\n      }\n\n      return {\n        'service': this.db.service,\n        'action': 'update',\n        'args': args\n      };\n    }\n  }, {\n    key: 'updateOne',\n    value: function updateOne(query, update) {\n      return this.db.client.executePipeline([this.makeUpdateStage(query, update, false, false)]);\n    }\n  }, {\n    key: 'updateMany',\n    value: function updateMany(query, update, upsert, multi) {\n      return this.db.client.executePipeline([this.makeUpdateStage(query, update, false, true)]);\n    }\n  }, {\n    key: 'upsert',\n    value: function upsert(query, update) {\n      return this.db.client.executePipeline([this.makeUpdateStage(query, update, true, false)]);\n    }\n  }]);\n\n  return Collection;\n}();\n\nvar MongoClient = exports.MongoClient = function () {\n  function MongoClient(baasClient, serviceName) {\n    _classCallCheck(this, MongoClient);\n\n    this.baasClient = baasClient;\n    this.service = serviceName;\n  }\n\n  _createClass(MongoClient, [{\n    key: 'getDb',\n    value: function getDb(name) {\n      return new DB(this.baasClient, this.service, name);\n    }\n  }]);\n\n  return MongoClient;\n}();\n\nvar Admin = exports.Admin = function () {\n  function Admin(baseUrl) {\n    _classCallCheck(this, Admin);\n\n    this.client = new BaasClient('', { baseUrl: baseUrl });\n  }\n\n  _createClass(Admin, [{\n    key: '_do',\n    value: function _do(url, method, options) {\n      return this.client._do(url, method, options).then(function (response) {\n        return response.json();\n      });\n    }\n  }, {\n    key: '_get',\n    value: function _get(url, queryParams) {\n      return this._do(url, 'GET', { queryParams: queryParams });\n    }\n  }, {\n    key: '_put',\n    value: function _put(url, queryParams) {\n      return this._do(url, 'PUT', { queryParams: queryParams });\n    }\n  }, {\n    key: '_delete',\n    value: function _delete(url) {\n      return this._do(url, 'DELETE');\n    }\n  }, {\n    key: '_post',\n    value: function _post(url, body) {\n      return this._do(url, 'POST', { body: JSON.stringify(body) });\n    }\n  }, {\n    key: 'profile',\n    value: function profile() {\n      var _this4 = this;\n\n      var root = this;\n      return {\n        keys: function keys() {\n          return {\n            list: function list() {\n              return root._get('/profile/keys');\n            },\n            create: function create(key) {\n              return root._post('/profile/keys');\n            },\n            apiKey: function apiKey(keyId) {\n              return {\n                get: function get() {\n                  return root._get('/profile/keys/' + keyId);\n                },\n                remove: function remove() {\n                  return _this4._delete('/profile/keys/' + keyId);\n                },\n                enable: function enable() {\n                  return root._put('/profile/keys/' + keyId + '/enable');\n                },\n                disable: function disable() {\n                  return root._put('/profile/keys/' + keyId + '/disable');\n                }\n              };\n            }\n          };\n        }\n      };\n    }\n\n    /* Examples of how to access admin API with this client:\n     *\n     * List all apps\n     *    a.apps().list()\n     *\n     * Fetch app under name 'planner'\n     *    a.apps().app('planner').get()\n     *\n     * List services under the app 'planner'\n     *    a.apps().app('planner').services().list()\n     *\n     * Delete a rule by ID\n     *    a.apps().app('planner').services().service('mdb1').rules().rule('580e6d055b199c221fcb821d').remove()\n     *\n     */\n\n  }, {\n    key: 'apps',\n    value: function apps() {\n      var _this5 = this;\n\n      var root = this;\n      return {\n        list: function list() {\n          return root._get('/apps');\n        },\n        create: function create(data) {\n          return root._post('/apps', data);\n        },\n        app: function app(appID) {\n          return {\n            get: function get() {\n              return root._get('/apps/' + appID);\n            },\n            remove: function remove() {\n              return root._delete('/apps/' + appID);\n            },\n\n            users: function users() {\n              return {\n                list: function list(filter) {\n                  return _this5._get('/apps/' + appID + '/users', filter);\n                },\n                user: function user(uid) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/apps/' + appID + '/users/' + uid);\n                    },\n                    logout: function logout() {\n                      return _this5._put('/apps/' + appID + '/users/' + uid + '/logout');\n                    }\n                  };\n                }\n              };\n            },\n\n            sandbox: function sandbox() {\n              return {\n                executePipeline: function executePipeline(data, userId) {\n                  return _this5._do('/apps/' + appID + '/sandbox/pipeline', 'POST', { body: JSON.stringify(data), queryParams: { user_id: userId } });\n                }\n              };\n            },\n\n            authProviders: function authProviders() {\n              return {\n                create: function create(data) {\n                  return _this5._post('/apps/' + appID + '/authProviders', data);\n                },\n                list: function list() {\n                  return _this5._get('/apps/' + appID + '/authProviders');\n                },\n                provider: function provider(authType, authName) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/apps/' + appID + '/authProviders/' + authType + '/' + authName);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/apps/' + appID + '/authProviders/' + authType + '/' + authName);\n                    },\n                    update: function update(data) {\n                      return _this5._post('/apps/' + appID + '/authProviders/' + authType + '/' + authName, data);\n                    }\n                  };\n                }\n              };\n            },\n            values: function values() {\n              return {\n                list: function list() {\n                  return _this5._get('/apps/' + appID + '/values');\n                },\n                value: function value(varName) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/apps/' + appID + '/values/' + varName);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/apps/' + appID + '/values/' + varName);\n                    },\n                    create: function create(data) {\n                      return _this5._post('/apps/' + appID + '/values/' + varName, data);\n                    },\n                    update: function update(data) {\n                      return _this5._post('/apps/' + appID + '/values/' + varName, data);\n                    }\n                  };\n                }\n              };\n            },\n            pipelines: function pipelines() {\n              return {\n                list: function list() {\n                  return _this5._get('/apps/' + appID + '/pipelines');\n                },\n                pipeline: function pipeline(varName) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/apps/' + appID + '/pipelines/' + varName);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/apps/' + appID + '/pipelines/' + varName);\n                    },\n                    create: function create(data) {\n                      return _this5._post('/apps/' + appID + '/pipelines/' + varName, data);\n                    },\n                    update: function update(data) {\n                      return _this5._post('/apps/' + appID + '/pipelines/' + varName, data);\n                    }\n                  };\n                }\n              };\n            },\n            logs: function logs() {\n              return {\n                get: function get(filter) {\n                  return _this5._get('/apps/' + appID + '/logs', filter);\n                }\n              };\n            },\n            apiKeys: function apiKeys() {\n              return {\n                list: function list() {\n                  return _this5._get('/apps/' + appID + '/keys');\n                },\n                create: function create(data) {\n                  return _this5._post('/apps/' + appID + '/keys', data);\n                },\n                apiKey: function apiKey(key) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/apps/' + appID + '/keys/' + key);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/apps/' + appID + '/keys/' + key);\n                    },\n                    enable: function enable() {\n                      return _this5._put('/apps/' + appID + '/keys/' + key + '/enable');\n                    },\n                    disable: function disable() {\n                      return _this5._put('/apps/' + appID + '/keys/' + key + '/disable');\n                    }\n                  };\n                }\n              };\n            },\n            services: function services() {\n              return {\n                list: function list() {\n                  return _this5._get('/apps/' + appID + '/services');\n                },\n                create: function create(data) {\n                  return _this5._post('/apps/' + appID + '/services', data);\n                },\n                service: function service(svc) {\n                  return {\n                    get: function get() {\n                      return _this5._get('/apps/' + appID + '/services/' + svc);\n                    },\n                    update: function update(data) {\n                      return _this5._post('/apps/' + appID + '/services/' + svc, data);\n                    },\n                    remove: function remove() {\n                      return _this5._delete('/apps/' + appID + '/services/' + svc);\n                    },\n                    setConfig: function setConfig(data) {\n                      return _this5._post('/apps/' + appID + '/services/' + svc + '/config', data);\n                    },\n\n                    rules: function rules() {\n                      return {\n                        list: function list() {\n                          return _this5._get('/apps/' + appID + '/services/' + svc + '/rules');\n                        },\n                        create: function create(data) {\n                          return _this5._post('/apps/' + appID + '/services/' + svc + '/rules');\n                        },\n                        rule: function rule(ruleId) {\n                          return {\n                            get: function get() {\n                              return _this5._get('/apps/' + appID + '/services/' + svc + '/rules/' + ruleId);\n                            },\n                            update: function update(data) {\n                              return _this5._post('/apps/' + appID + '/services/' + svc + '/rules/' + ruleId, data);\n                            },\n                            remove: function remove() {\n                              return _this5._delete('/apps/' + appID + '/services/' + svc + '/rules/' + ruleId);\n                            }\n                          };\n                        }\n                      };\n                    },\n\n                    incomingWebhooks: function incomingWebhooks() {\n                      return {\n                        list: function list() {\n                          return _this5._get('/apps/' + appID + '/services/' + svc + '/incomingWebhooks');\n                        },\n                        create: function create(data) {\n                          return _this5._post('/apps/' + appID + '/services/' + svc + '/incomingWebhooks');\n                        },\n                        incomingWebhook: function incomingWebhook(incomingWebhookId) {\n                          return {\n                            get: function get() {\n                              return _this5._get('/apps/' + appID + '/services/' + svc + '/incomingWebhooks/' + incomingWebhookId);\n                            },\n                            update: function update(data) {\n                              return _this5._post('/apps/' + appID + '/services/' + svc + '/incomingWebhooks/' + incomingWebhookId, data);\n                            },\n                            remove: function remove() {\n                              return _this5._delete('/apps/' + appID + '/services/' + svc + '/incomingWebhooks/' + incomingWebhookId);\n                            }\n                          };\n                        }\n                      };\n                    }\n                  };\n                }\n              };\n            }\n          };\n        }\n      };\n    }\n  }, {\n    key: '_admin',\n    value: function _admin() {\n      var _this6 = this;\n\n      return {\n        logs: function logs() {\n          return {\n            get: function get(filter) {\n              return _this6._do('/admin/logs', 'GET', { useRefreshToken: true, queryParams: filter });\n            }\n          };\n        },\n        users: function users() {\n          return {\n            list: function list(filter) {\n              return _this6._do('/admin/users', 'GET', { useRefreshToken: true, queryParams: filter });\n            },\n            user: function user(uid) {\n              return {\n                logout: function logout() {\n                  return _this6._do('/admin/users/' + uid + '/logout', 'PUT', { useRefreshToken: true });\n                }\n              };\n            }\n          };\n        }\n      };\n    }\n  }, {\n    key: '_isImpersonatingUser',\n    value: function _isImpersonatingUser() {\n      return this.client.authManager.isImpersonatingUser();\n    }\n  }, {\n    key: '_startImpersonation',\n    value: function _startImpersonation(userId) {\n      return this.client.authManager.startImpersonation(this.client, userId);\n    }\n  }, {\n    key: '_stopImpersonation',\n    value: function _stopImpersonation() {\n      return this.client.authManager.stopImpersonation();\n    }\n  }]);\n\n  return Admin;\n}();\n\n\n// WEBPACK FOOTER //\n// ./distribution/client.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global window, fetch */\n\nvar _common = require('./common');\n\nvar common = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Base64 = require(\"Base64\");\n\nvar b64Encode = Base64.btoa;\nvar b64Decode = Base64.atob;\n\nvar AuthDataStorage = function () {\n  function AuthDataStorage() {\n    _classCallCheck(this, AuthDataStorage);\n\n    this._data = {};\n  }\n\n  _createClass(AuthDataStorage, [{\n    key: 'setItem',\n    value: function setItem(id, val) {\n      this._data[id] = String(val);\n    }\n  }, {\n    key: 'getItem',\n    value: function getItem(id) {\n      return this._data.hasOwnProperty(id) ? this._data[id] : undefined;\n    }\n  }, {\n    key: 'removeItem',\n    value: function removeItem(id) {\n      return delete this._data[id];\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this._data = {};\n    }\n  }]);\n\n  return AuthDataStorage;\n}();\n\nvar Auth = function () {\n  function Auth(rootUrl) {\n    _classCallCheck(this, Auth);\n\n    this.rootUrl = rootUrl;\n    if (typeof window !== 'undefined' && window.localStorage !== undefined) {\n      this.authDataStorage = window.localStorage;\n    } else {\n      this.authDataStorage = new AuthDataStorage();\n    }\n  }\n\n  _createClass(Auth, [{\n    key: 'pageRootUrl',\n    value: function pageRootUrl() {\n      return [window.location.protocol, '//', window.location.host, window.location.pathname].join('');\n    }\n\n    // The state we generate is to be used for any kind of request where we will\n    // complete an authentication flow via a redirect. We store the generate in\n    // a local storage bound to the app's origin. This ensures that any time we\n    // receive a redirect, there must be a state parameter and it must match\n    // what we ourselves have generated. This state MUST only be sent to\n    // a trusted BaaS endpoint in order to preserve its integrity. BaaS will\n    // store it in some way on its origin (currently a cookie stored on this client)\n    // and use that state at the end of an auth flow as a parameter in the redirect URI.\n\n  }, {\n    key: 'setAccessToken',\n    value: function setAccessToken(token) {\n      var currAuth = this.get();\n      currAuth['accessToken'] = token;\n      currAuth['refreshToken'] = this.authDataStorage.getItem(common.REFRESH_TOKEN_KEY);\n      this.set(currAuth);\n    }\n  }, {\n    key: 'error',\n    value: function error() {\n      return this._error;\n    }\n  }, {\n    key: 'handleRedirect',\n    value: function handleRedirect() {\n      if (typeof window === 'undefined') {\n        // This means we're running in some environment other\n        // than a browser - so handling a redirect makes no sense here.\n        return;\n      }\n      var ourState = this.authDataStorage.getItem(common.STATE_KEY);\n      var redirectFragment = window.location.hash.substring(1);\n      var redirectState = common.parseRedirectFragment(redirectFragment, ourState);\n      if (redirectState.lastError) {\n        console.error('BaasClient: error from redirect: ' + redirectState.lastError);\n        this._error = redirectState.lastError;\n        window.history.replaceState(null, '', this.pageRootUrl());\n        return;\n      }\n      if (!redirectState.found) {\n        return;\n      }\n      this.authDataStorage.removeItem(common.STATE_KEY);\n      if (!redirectState.stateValid) {\n        console.error('BaasClient: state values did not match!');\n        window.history.replaceState(null, '', this.pageRootUrl());\n        return;\n      }\n      if (!redirectState.ua) {\n        console.error('BaasClient: no UA value was returned from redirect!');\n        return;\n      }\n      // If we get here, the state is valid - set auth appropriately.\n      this.set(redirectState.ua);\n      window.history.replaceState(null, '', this.pageRootUrl());\n    }\n  }, {\n    key: 'getOAuthLoginURL',\n    value: function getOAuthLoginURL(providerName, redirectUrl) {\n      if (redirectUrl === undefined) {\n        redirectUrl = this.pageRootUrl();\n      }\n      var state = Auth.generateState();\n      this.authDataStorage.setItem(common.STATE_KEY, state);\n      var result = this.rootUrl + '/oauth2/' + providerName + '?redirect=' + encodeURI(redirectUrl) + '&state=' + state;\n      return result;\n    }\n  }, {\n    key: 'anonymousAuth',\n    value: function anonymousAuth() {\n      var _this = this;\n\n      var fetchArgs = common.makeFetchArgs('GET');\n      fetchArgs['cors'] = true;\n\n      return fetch(this.rootUrl + '/anon/user', fetchArgs).then(common.checkStatus).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this.set(json);\n      });\n    }\n  }, {\n    key: 'apiKeyAuth',\n    value: function apiKeyAuth(key) {\n      var _this2 = this;\n\n      var fetchArgs = common.makeFetchArgs('POST', JSON.stringify({ 'key': key }));\n      fetchArgs['cors'] = true;\n\n      return fetch(this.rootUrl + '/api/key', fetchArgs).then(common.checkStatus).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this2.set(json);\n      });\n    }\n  }, {\n    key: 'localAuth',\n    value: function localAuth(username, password) {\n      var _this3 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { cors: true };\n\n      var fetchArgs = common.makeFetchArgs('POST', JSON.stringify({ username: username, password: password }));\n      fetchArgs['cors'] = true;\n\n      return fetch(this.rootUrl + '/local/userpass', fetchArgs).then(common.checkStatus).then(function (response) {\n        return response.json().then(function (json) {\n          _this3.set(json);\n          return Promise.resolve(json);\n        });\n      });\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.authDataStorage.removeItem(common.USER_AUTH_KEY);\n      this.authDataStorage.removeItem(common.REFRESH_TOKEN_KEY);\n      this.clearImpersonation();\n    }\n  }, {\n    key: 'getRefreshToken',\n    value: function getRefreshToken() {\n      return this.authDataStorage.getItem(common.REFRESH_TOKEN_KEY);\n    }\n  }, {\n    key: 'set',\n    value: function set(json) {\n      var rt = json['refreshToken'];\n      delete json['refreshToken'];\n\n      this.authDataStorage.setItem(common.USER_AUTH_KEY, b64Encode(JSON.stringify(json)));\n      this.authDataStorage.setItem(common.REFRESH_TOKEN_KEY, rt);\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      if (!this.authDataStorage.getItem(common.USER_AUTH_KEY)) {\n        return null;\n      }\n      var item = this.authDataStorage.getItem(common.USER_AUTH_KEY);\n      return JSON.parse(b64Decode(item));\n    }\n  }, {\n    key: 'authedId',\n    value: function authedId() {\n      var id = ((this.get() || {}).user || {})._id;\n      if (id) {\n        return { '$oid': id };\n      }\n    }\n  }, {\n    key: 'isImpersonatingUser',\n    value: function isImpersonatingUser() {\n      return this.authDataStorage.getItem(common.IMPERSONATION_ACTIVE_KEY) === 'true';\n    }\n  }, {\n    key: 'refreshImpersonation',\n    value: function refreshImpersonation(client) {\n      var _this4 = this;\n\n      var userId = this.authDataStorage.getItem(common.IMPERSONATION_USER_KEY);\n      return client._do('/admin/users/' + userId + '/impersonate', 'POST', { refreshOnFailure: false, useRefreshToken: true }).then(function (response) {\n        return response.json().then(function (json) {\n          json['refreshToken'] = _this4.authDataStorage.getItem(common.REFRESH_TOKEN_KEY);\n          _this4.set(json);\n          return Promise.resolve();\n        });\n      }).catch(function (e) {\n        _this4.stopImpersonation();\n        return Promise.reject(e);\n      });\n    }\n  }, {\n    key: 'startImpersonation',\n    value: function startImpersonation(client, userId) {\n      if (this.get() === null) {\n        return Promise.reject(new common.BaasError('Must auth first'));\n      }\n      if (this.isImpersonatingUser()) {\n        return Promise.reject(new common.BaasError('Already impersonating a user'));\n      }\n      this.authDataStorage.setItem(common.IMPERSONATION_ACTIVE_KEY, 'true');\n      this.authDataStorage.setItem(common.IMPERSONATION_USER_KEY, userId);\n\n      var realUserAuth = JSON.parse(b64Decode(this.authDataStorage.getItem(common.USER_AUTH_KEY)));\n      realUserAuth['refreshToken'] = this.authDataStorage.getItem(common.REFRESH_TOKEN_KEY);\n      this.authDataStorage.setItem(common.IMPERSONATION_REAL_USER_AUTH_KEY, b64Encode(JSON.stringify(realUserAuth)));\n      return this.refreshImpersonation(client);\n    }\n  }, {\n    key: 'stopImpersonation',\n    value: function stopImpersonation() {\n      var _this5 = this;\n\n      if (!this.isImpersonatingUser()) {\n        throw new common.BaasError('Not impersonating a user');\n      }\n      return new Promise(function (resolve, reject) {\n        var realUserAuth = JSON.parse(b64Decode(_this5.authDataStorage.getItem(common.IMPERSONATION_REAL_USER_AUTH_KEY)));\n        _this5.set(realUserAuth);\n        _this5.clearImpersonation();\n        resolve();\n      });\n    }\n  }, {\n    key: 'clearImpersonation',\n    value: function clearImpersonation() {\n      this.authDataStorage.removeItem(common.IMPERSONATION_ACTIVE_KEY);\n      this.authDataStorage.removeItem(common.IMPERSONATION_USER_KEY);\n      this.authDataStorage.removeItem(common.IMPERSONATION_REAL_USER_AUTH_KEY);\n    }\n  }], [{\n    key: 'generateState',\n    value: function generateState() {\n      var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var state = '';\n      var stateLength = 64;\n      for (var i = 0; i < stateLength; i++) {\n        var pos = Math.floor(Math.random() * alpha.length);\n        state += alpha.substring(pos, pos + 1);\n      }\n      return state;\n    }\n  }]);\n\n  return Auth;\n}();\n\nexports.default = Auth;\n\n\n// WEBPACK FOOTER //\n// ./distribution/auth.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar JSONTYPE = exports.JSONTYPE = 'application/json';\nvar USER_AUTH_KEY = exports.USER_AUTH_KEY = '_baas_ua';\nvar REFRESH_TOKEN_KEY = exports.REFRESH_TOKEN_KEY = '_baas_rt';\nvar STATE_KEY = exports.STATE_KEY = '_baas_state';\nvar BAAS_ERROR_KEY = exports.BAAS_ERROR_KEY = '_baas_error';\nvar BAAS_LINK_KEY = exports.BAAS_LINK_KEY = '_baas_link';\nvar IMPERSONATION_ACTIVE_KEY = exports.IMPERSONATION_ACTIVE_KEY = '_baas_impers_active';\nvar IMPERSONATION_USER_KEY = exports.IMPERSONATION_USER_KEY = '_baas_impers_user';\nvar IMPERSONATION_REAL_USER_AUTH_KEY = exports.IMPERSONATION_REAL_USER_AUTH_KEY = '_baas_impers_real_ua';\n\nvar DEFAULT_BAAS_SERVER_URL = exports.DEFAULT_BAAS_SERVER_URL = 'https://baas-dev.10gen.cc';\n\nvar checkStatus = exports.checkStatus = function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    var error = new Error(response.statusText);\n    error.response = response;\n    throw error;\n  }\n};\n\nvar makeFetchArgs = exports.makeFetchArgs = function makeFetchArgs(method, body) {\n  var init = {\n    method: method,\n    headers: { 'Accept': JSONTYPE, 'Content-Type': JSONTYPE }\n  };\n  if (body) {\n    init['body'] = body;\n  }\n  return init;\n};\n\nvar parseRedirectFragment = exports.parseRedirectFragment = function parseRedirectFragment(fragment, ourState) {\n  // After being redirected from oauth, the URL will look like:\n  // https://todo.examples.baas-dev.10gen.cc/#_baas_state=...&_baas_ua=...\n  // This function parses out baas-specific tokens from the fragment and\n  // builds an object describing the result.\n  var vars = fragment.split('&');\n  var result = { ua: null, found: false, stateValid: false, lastError: null };\n  var shouldBreak = false;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = vars[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var pair = _step.value;\n\n      var pairParts = pair.split('=');\n      var pairKey = decodeURIComponent(pairParts[0]);\n      switch (pairKey) {\n        case BAAS_ERROR_KEY:\n          result.lastError = decodeURIComponent(pairParts[1]);\n          result.found = true;\n          shouldBreak = true;\n          break;\n        case USER_AUTH_KEY:\n          result.ua = JSON.parse(window.atob(decodeURIComponent(pairParts[1])));\n          result.found = true;\n          continue;\n        case BAAS_LINK_KEY:\n          result.found = true;\n          continue;\n        case STATE_KEY:\n          result.found = true;\n          var theirState = decodeURIComponent(pairParts[1]);\n          if (ourState && ourState === theirState) {\n            result.stateValid = true;\n          }\n      }\n      if (shouldBreak) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return result;\n};\n\nvar BaasError = exports.BaasError = function (_Error) {\n  _inherits(BaasError, _Error);\n\n  function BaasError(message, code) {\n    _classCallCheck(this, BaasError);\n\n    var _this = _possibleConstructorReturn(this, (BaasError.__proto__ || Object.getPrototypeOf(BaasError)).call(this, message));\n\n    _this.name = 'BaasError';\n    _this.message = message;\n    if (code !== undefined) {\n      _this.code = code;\n    }\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(_this, _this.constructor);\n    } else {\n      _this.stack = new Error(message).stack;\n    }\n    return _this;\n  }\n\n  return BaasError;\n}(Error);\n\n\n// WEBPACK FOOTER //\n// ./distribution/common.js",";(function () {\n\n  var object = typeof exports != 'undefined' ? exports : self; // #8: web workers\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    var str = String(input);\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next str index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      str.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = str.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    var str = String(input).replace(/=+$/, '');\n    if (str.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = str.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n\n\n// WEBPACK FOOTER //\n// ./~/Base64/base64.js","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;\n\n\n// WEBPACK FOOTER //\n// ./~/text-encoding-utf-8/lib/encoding.cjs.js","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n// WEBPACK FOOTER //\n// ./~/isomorphic-fetch/fetch-npm-browserify.js","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n// WEBPACK FOOTER //\n// ./~/whatwg-fetch/fetch.js","var ExtJSON = require('./lib/ext_json');\nExtJSON.BSON = require('./lib/bson');\n\nmodule.exports = ExtJSON;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/index.js","\"use strict\";\n\nvar bsonModule = require('./bson')\nvar atob = require('./bson/shared').atob;\nvar bufferConstructor = null;\n\nif (typeof Buffer !== 'undefined') {\n  bufferConstructor = new Buffer(1) instanceof Uint8Array\n    ? Buffer\n    : Uint8Array;\n} else {\n  bufferConstructor = Uint8Array;\n}\n\nvar ExtJSON = function(module) {\n  if (module) {\n    for (var i = 0; i < BSONTypes.length; i++) {\n      if (!module[BSONTypes[i]]) throw new Error('passed in module does not contain all BSON types required');\n    }\n\n    this.bson = module;\n  } else {\n    this.bson = bsonModule;\n  }\n}\n\nExtJSON.extend = function(module) {\n  if (!module) throw new Error(\"expecting mongodb module, invoke by calling ExtJSON.extend(require('mongodb'))\")\n  // Rewrite passed in types\n  for (var i = 0; i < BSONTypes.length; i++) {\n    if (module[BSONTypes[i]]) {\n      // Add the toJSON to the passed in types\n      // This lets us modify the toJSON method withou breaking\n      // backward compatibility\n      module[BSONTypes[i]].prototype.toJSON = bsonModule[BSONTypes[i]].prototype.toJSON;\n    }\n  }\n\n  return module;\n}\n\nfunction deseralizeValue(self, value, options) {\n  if(value['$oid'] != null) {\n    return new self.bson.ObjectID(value['$oid']);\n  } else if(value['$date'] && typeof value['$date'] == 'string') {\n    return Date.parse(value['$date']);\n  } else if(value['$date'] && value['$date'] instanceof self.bson.Long) {\n    var date = new Date();\n    date.setTime(value['$date'].toNumber());\n    return date;\n  } else if(value['$binary'] != null) {\n    if (typeof Buffer !== 'undefined') {\n      if (bufferConstructor === Buffer) {\n        var data = new Buffer(value['$binary'], 'base64');\n        var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n        return new self.bson.Binary(data, type);\n      }\n    }\n\n    var data = new Uint8Array(atob(value['$binary'])\n      .split(\"\")\n      .map(function(c) {\n        return c.charCodeAt(0);\n      }));\n\n    var type = value['$type'] ? parseInt(value['$type'], 16) : 0;\n    return new self.bson.Binary(data, type);\n  } else if(value['$maxKey'] != null) {\n    return new self.bson.MaxKey();\n  } else if(value['$minKey'] != null) {\n    return new self.bson.MinKey();\n  } else if(value['$code'] != null) {\n    return new self.bson.Code(value['$code'], deseralizeValue(self, value['$scope'] || {}, options))\n  } else if(value['$numberLong'] != null) {\n    return self.bson.Long.fromString(value['$numberLong']);\n  } else if(value['$numberDouble'] != null && options.strict) {\n    return new self.bson.Double(parseFloat(value['$numberDouble']));\n  } else if(value['$numberDouble'] != null && !options.strict) {\n    return parseFloat(value['$numberDouble']);\n  } else if(value['$numberInt'] != null && options.strict) {\n    return new self.bson.Int32(parseInt(value['$numberInt'], 10));\n  } else if(value['$numberInt'] != null && !options.strict) {\n    return parseInt(value['$numberInt'], 10);\n  } else if(value['$numberDecimal'] != null) {\n    return self.bson.Decimal128.fromString(value['$numberDecimal']);\n  } else if(value['$regex'] != null) {\n    return new self.bson.BSONRegExp(value['$regex'], value['$options'] || '');\n  } else if(value['$symbol'] != null) {\n    return new self.bson.Symbol(value['$symbol']);\n  } else if(value['$ref'] != null) {\n    return new self.bson.DBRef(value['$ref'], deseralizeValue(self, value['$id'], options), value['$db']);\n  } else if(value['$timestamp'] != null) {\n    return self.bson.Timestamp.fromString(value['$timestamp']);\n  } else if(typeof value == 'number' && options.strict) {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return new self.bson.Int32(value);\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return new self.bson.Double(value);\n      } else {\n        return new self.bson.Long.fromNumber(value);\n      }\n    } else {\n      return new self.bson.Double(value);\n    }\n  } else if(typeof value == 'number' && !options.strict) {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return value;\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return value;\n      } else {\n        return new self.bson.Long.fromNumber(value);\n      }\n    } else {\n      return value;\n    }\n  } else {\n    return value;\n  }\n}\n\nExtJSON.prototype.parse = function(text, options) {\n  var self = this;\n  options = options || { strict: true };\n\n  var object = JSON.parse(text, function(key, value) {\n    return deseralizeValue(self, value, options);\n  });\n\n  return object;\n}\n\n//\n// Serializer\n//\n\n// MAX INT32 boundaries\nvar BSON_INT32_MAX = 0x7FFFFFFF;\nvar BSON_INT32_MIN = -0x80000000;\n\n// JS MAX PRECISE VALUES\nvar JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.\n\nExtJSON.prototype.stringify = function(value, reducer, indents) {\n  var doc = null;\n\n  if(Array.isArray(value)) {\n    doc = serializeArray(value);\n  } else {\n    doc = serializeDocument(value);\n  }\n\n  return JSON.stringify(doc, reducer, indents);\n}\n\nfunction serializeArray(array) {\n  var _array = new Array(array.length);\n\n  for(var i = 0; i < array.length; i++) {\n    _array[i] = serializeValue(array[i]);\n  }\n\n  return _array;\n}\n\nfunction serializeValue(value) {\n  if(value instanceof Date) {\n    return { $date: { $numberLong: value.getTime().toString() } };\n  } else if(typeof value == 'number') {\n    if(Math.floor(value) === value && value >= JS_INT_MIN && value <= JS_INT_MAX) {\n      if(value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return { $numberInt: value.toString() };\n      } else if(value >= JS_INT_MIN && value <= JS_INT_MAX) {\n        return { $numberDouble: value.toString() };\n      } else {\n        return { $numberLong: value.toString() };\n      }\n    } else {\n      return { $numberDouble: value.toString() };\n    }\n  } else if(Array.isArray(value)) {\n    return serializeArray(value);\n  } else if(value != null && typeof value == 'object') {\n    return serializeDocument(value);\n  }\n\n  return value;\n}\n\nvar BSONTypes = ['Binary', 'Code', 'DBRef', 'Decimal128', 'Double',\n  'Int32', 'Long', 'MaxKey', 'MinKey', 'ObjectID', 'BSONRegExp', 'Symbol', 'Timestamp'];\n\nfunction serializeDocument(doc) {\n  if(doc == null || typeof doc !== 'object') throw new Error('not an object instance');\n  var _doc = {};\n\n  for(var name in doc) {\n    if(Array.isArray(doc[name])) {\n      _doc[name] = serializeArray(doc[name]);\n    } else if(doc[name] != null && doc[name]._bsontype && BSONTypes.indexOf(doc[name]._bsontype) != -1) {\n      _doc[name] = doc[name];\n    } else if(doc[name] instanceof Date) {\n      _doc[name] = serializeValue(doc[name]);\n    } else if(doc[name] != null && typeof doc[name] === 'object') {\n      _doc[name] = serializeDocument(doc[name]);\n    } else {\n      _doc[name] = serializeValue(doc[name]);\n    }\n  }\n\n  return _doc;\n}\n\n// Export the Extended BSON\nmodule.exports = ExtJSON;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/ext_json.js","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/buffer/index.js","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/base64-js/index.js","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/ieee754/index.js","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/isarray/index.js","\"use strict\";\n\nvar Binary = require('./binary');\nvar Code = require('./code');\nvar DBRef = require('./db_ref');\nvar Decimal128 = require('./decimal128');\nvar Double = require('./double');\nvar Int32 = require('./int_32');\nvar Long = require('./long');\nvar MaxKey = require('./max_key');\nvar MinKey = require('./min_key');\nvar ObjectID = require('./objectid');\nvar BSONRegExp = require('./regexp');\nvar Symbol = require('./symbol');\nvar Timestamp = require('./timestamp');\n\nmodule.exports = {\n  Binary: Binary, Code: Code, DBRef: DBRef, Decimal128: Decimal128, Double: Double,\n  Int32: Int32, Long: Long, MaxKey: MaxKey, MinKey: MinKey, ObjectID: ObjectID,\n  BSONRegExp: BSONRegExp, Symbol: Symbol, Timestamp: Timestamp\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/index.js","\"use strict\";\n\nvar btoa = require('./shared').btoa;\n\n/**\n * Module dependencies.\n * @ignore\n */\nfunction convert(integer) {\n  var str = Number(integer).toString(16);\n  return str.length == 1 ? \"0\" + str : str;\n};\n\n/**\n * A class representation of the BSON Binary type.\n *\n * Sub types\n *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.\n *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.\n *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.\n *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.\n *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.\n *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.\n *\n * @class\n * @param {Buffer} buffer a buffer object containing the binary data.\n * @param {Number} [subType] the option binary type.\n * @return {Binary}\n */\nvar Binary = function(buffer, subType) {\n  this._bsontype = 'Binary';\n\n  if(buffer instanceof Number) {\n    this.sub_type = buffer;\n    this.position = 0;\n  } else {\n    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;\n    this.position = 0;\n  }\n\n  if(buffer != null && !(buffer instanceof Number)) {\n    // Only accept Buffer or Uint8Array\n    if(typeof buffer == 'string') {\n      this.buffer = writeStringToArray(buffer);\n    } else if(buffer instanceof Uint8Array) {\n      this.buffer = buffer;\n    } else {\n      throw new Error('passed in buffer must be an Uint8Array instance');\n    }\n\n    this.position = buffer.length;\n  } else {\n    this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));\n    // Set position to start of buffer\n    this.position = 0;\n  }\n}\n\n/**\n * Updates this binary with byte_value.\n *\n * @method\n * @param {String} byte_value a single byte we wish to write.\n */\nBinary.prototype.put = function(byte_value) {\n  // If it's a string and a has more than one character throw an error\n  if(byte_value['length'] != null && typeof byte_value != 'number' && byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");\n  if(typeof byte_value != 'number' && byte_value < 0 || byte_value > 255) throw new Error(\"only accepts number in a valid unsigned byte range 0-255\");\n\n  // Decode the byte value once\n  var decoded_byte = null;\n  if(typeof byte_value == 'string') {\n    decoded_byte = byte_value.charCodeAt(0);\n  } else if(byte_value['length'] != null) {\n    decoded_byte = byte_value[0];\n  } else {\n    decoded_byte = byte_value;\n  }\n\n  if(this.buffer.length > this.position) {\n    this.buffer[this.position++] = decoded_byte;\n  } else {\n    var buffer = null;\n    // Create a new buffer (typed or normal array)\n    buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));\n\n    // We need to copy all the content to the new array\n    for(var i = 0; i < this.buffer.length; i++) {\n      buffer[i] = this.buffer[i];\n    }\n\n    // Reassign the buffer\n    this.buffer = buffer;\n    // Write the byte\n    this.buffer[this.position++] = decoded_byte;\n  }\n}\n\n/**\n * Writes a buffer or string to the binary.\n *\n * @method\n * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object.\n * @param {number} offset specify the binary of where to write the content.\n * @return {null}\n */\nBinary.prototype.write = function(string, offset) {\n  offset = typeof offset == 'number' ? offset : this.position;\n\n  // If the buffer is to small let's extend the buffer\n  if(this.buffer.length < offset + string.length) {\n    var buffer = null;\n    // Create a new buffer\n    buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))\n    // Copy the content\n    for(var i = 0; i < this.position; i++) {\n      buffer[i] = this.buffer[i];\n    }\n\n    // Assign the new buffer\n    this.buffer = buffer;\n  }\n\n  for(var i = 0; i < string.length; i++) {\n    this.buffer[offset++] = string[i];\n  }\n\n  this.position = offset > this.position ? offset : this.position;\n}\n\n/**\n * Reads **length** bytes starting at **position**.\n *\n * @method\n * @param {number} position read from the given position in the Binary.\n * @param {number} length the number of bytes to read.\n * @return {Buffer}\n */\nBinary.prototype.read = function(position, length) {\n  length = length && length > 0\n    ? length\n    : this.position;\n\n  // Let's return the data based on the type we have\n  return this.buffer.slice(position, position + length);\n}\n\n/**\n * Returns the value of this binary as a string.\n *\n * @method\n * @return {String}\n */\nBinary.prototype.value = function(asRaw) {\n  asRaw = asRaw == null ? false : asRaw;\n  if(asRaw) return this.buffer.slice(0, this.position);\n  return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);\n}\n\n/**\n * Length.\n *\n * @method\n * @return {number} the length of the binary.\n */\nBinary.prototype.length = function() {\n  return this.position;\n}\n\nBinary.prototype.equals = function(value) {\n  if(!value) return false;\n  if(value._bsontype != 'Binary') return false;\n  if(!value.buffer) return false;\n  if(value.buffer.length != this.buffer.length) return false;\n  for(var i = 0; i < this.buffer.length; i++) {\n    if(this.buffer[i] != value.buffer[i]) return false;\n  }\n\n  return true;\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toJSON = function() {\n  // If we are in the node.js context use Buffer.toString, otherwise the btoa\n  var binary = typeof Buffer !== 'undefined'\n    ? this.buffer.toString('base64')\n    : btoa(String.fromCharCode.apply(null, this.buffer));\n\n  return {\n    $binary: binary,\n    $type: convert(this.sub_type)\n  }\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toString = function(format) {\n  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';\n}\n\n/**\n * Binary default subtype\n * @ignore\n */\nvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/**\n * @ignore\n */\nvar writeStringToArray = function(data) {\n  // Create a buffer\n  var buffer = new Uint8Array(new ArrayBuffer(data.length));\n  // Write the content to the buffer\n  for(var i = 0; i < data.length; i++) {\n    buffer[i] = data.charCodeAt(i);\n  }\n  // Write the string to the buffer\n  return buffer;\n}\n\n/**\n * Convert Array ot Uint8Array to Binary String\n *\n * @ignore\n */\nvar convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {\n  var result = \"\";\n  for(var i = startIndex; i < endIndex; i++) {\n   result = result + String.fromCharCode(byteArray[i]);\n  }\n  return result;\n};\n\nBinary.BUFFER_SIZE = 256;\n\n/**\n * Default BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_DEFAULT = 0;\n/**\n * Function BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_FUNCTION = 1;\n/**\n * Byte Array BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/**\n * OLD UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID_OLD = 3;\n/**\n * UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID = 4;\n/**\n * MD5 BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_MD5 = 5;\n/**\n * User BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_USER_DEFINED = 128;\n\nmodule.exports = Binary;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/binary.js","\"use strict\";\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction btoa(input) {\n  var str = String(input);\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars, output = '';\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3/4);\n    if (charCode > 0xFF) {\n      throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n};\n\nfunction atob(input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n};\n\nmodule.exports = {\n  btoa: btoa, atob: atob,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/shared.js","\"use strict\";\n\n/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function(code, scope) {\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope;\n}\n\nCode.prototype.equals = function(value) {\n  if(!value || !value.code) return false;\n  if(value._bsontype != 'Code') return false;\n  if(this.code == value.code) return true;\n  return false;\n}\n\nCode.prototype.toJSON = function() {\n  return { $code: this.code, $scope: this.scope };\n}\n\nmodule.exports = Code;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/code.js","\"use strict\";\n\n/**\n * A class representation of the BSON DBRef type.\n *\n * @class\n * @param {String} namespace the collection name.\n * @param {ObjectID} oid the reference ObjectID.\n * @param {String} [db] optional db name, if omitted the reference is local to the current db.\n * @return {DBRef}\n */\nvar DBRef = function(namespace, oid, db) {\n  this._bsontype = 'DBRef';\n  this.namespace = namespace;\n  this.oid = oid;\n  this.db = db;\n}\n\nDBRef.prototype.equals = function(value) {\n  if(value == null || value.namespace == null  || value.db == null || value.oid == null) return false;\n  if(value._bsontype != 'DBRef') return false;\n\n  if(this.oid && this.oid.equals) {\n    return this.oid.equals(value.oid) && this.namespace == value.namespace && this.db == value.db;\n  } else {\n    return this.oid == value.oid && this.namespace == value.namespace && this.db == value.db;\n  }\n}\n\nDBRef.prototype.toJSON = function() {\n  return {\n    '$ref':this.namespace,\n    '$id':this.oid,\n    '$db':this.db == null ? '' : this.db\n  };\n}\n\nmodule.exports = DBRef;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/db_ref.js","\"use strict\"\n\nvar Long = require('./long');\n\nvar PARSE_STRING_REGEXP = /^(\\+|\\-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([\\-\\+])?(\\d+)?$/;\nvar PARSE_INF_REGEXP = /^(\\+|\\-)?(Infinity|inf)$/i;\nvar PARSE_NAN_REGEXP = /^(\\+|\\-)?NaN$/i;\n\nvar EXPONENT_MAX = 6111;\nvar EXPONENT_MIN = -6176;\nvar EXPONENT_BIAS = 6176;\nvar MAX_DIGITS = 34;\n\n// Nan value bits as 32 bit values (due to lack of longs)\nvar NAN_BUFFER = [0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n// Infinity value bits 32 bit values (due to lack of longs)\nvar INF_NEGATIVE_BUFFER = [0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\nvar INF_POSITIVE_BUFFER = [0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n\nvar EXPONENT_REGEX = /^([\\-\\+])?(\\d+)?$/;\n\n// Extract least significant 5 bits\nvar COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nvar EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nvar COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nvar COMBINATION_NAN = 31;\n// Value of combination field for NaN\nvar COMBINATION_SNAN = 32;\n// decimal128 exponent bias\nvar EXPONENT_BIAS = 6176;\n\n// Detect if the value is a digit\nvar isDigit = function(value) {\n  return !isNaN(parseInt(value, 10));\n}\n\n// Divide two uint128 values\nvar divideu128 = function(value) {\n  var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n  var _rem = Long.fromNumber(0);\n  var i = 0;\n\n  if(!value.parts[0] && !value.parts[1] &&\n     !value.parts[2] && !value.parts[3]) {\n    return { quotient: value, rem: _rem };\n  }\n\n  for(var i = 0; i <= 3; i++) {\n    // Adjust remainder to match value of next dividend\n    _rem = _rem.shiftLeft(32);\n    // Add the divided to _rem\n    _rem = _rem.add(new Long(value.parts[i], 0));\n    value.parts[i] = _rem.div(DIVISOR).low_;\n    _rem = _rem.modulo(DIVISOR);\n  }\n\n  return { quotient: value, rem: _rem };\n}\n\n// Multiply two Long values and return the 128 bit value\nvar multiply64x2 = function(left, right) {\n  if(!left && !right) {\n    return {high: Long.fromNumber(0), low: Long.fromNumber(0)};\n  }\n\n  var leftHigh = left.shiftRightUnsigned(32);\n  var leftLow = new Long(left.getLowBits(), 0);\n  var rightHigh = right.shiftRightUnsigned(32);\n  var rightLow = new Long(right.getLowBits(), 0);\n\n  var productHigh = leftHigh.multiply(rightHigh);\n  var productMid = leftHigh.multiply(rightLow);\n  var productMid2 = leftLow.multiply(rightHigh);\n  var productLow = leftLow.multiply(rightLow);\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productMid = new Long(productMid.getLowBits(), 0)\n                .add(productMid2)\n                .add(productLow.shiftRightUnsigned(32));\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n\n  // Return the 128 bit result\n  return {high: productHigh, low: productLow};\n}\n\nvar lessThan = function(left, right) {\n  // Make values unsigned\n  var uhleft = left.high_ >>> 0;\n  var uhright = right.high_ >>> 0;\n\n  // Compare high bits first\n  if(uhleft < uhright) {\n    return true\n  } else if(uhleft == uhright) {\n    var ulleft = left.low_ >>> 0;\n    var ulright = right.low_ >>> 0;\n    if(ulleft < ulright) return true;\n  }\n\n  return false;\n}\n\nvar longtoHex = function(value) {\n  var buffer = new Buffer(8);\n  var index = 0;\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = value.low_ & 0xff;\n  buffer[index++] = (value.low_ >> 8) & 0xff;\n  buffer[index++] = (value.low_ >> 16) & 0xff;\n  buffer[index++] = (value.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = value.high_ & 0xff;\n  buffer[index++] = (value.high_ >> 8) & 0xff;\n  buffer[index++] = (value.high_ >> 16) & 0xff;\n  buffer[index++] = (value.high_ >> 24) & 0xff;\n  return buffer.reverse().toString('hex');\n}\n\nvar int32toHex = function(value) {\n  var buffer = new Buffer(4);\n  var index = 0;\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = value & 0xff;\n  buffer[index++] = (value >> 8) & 0xff;\n  buffer[index++] = (value >> 16) & 0xff;\n  buffer[index++] = (value >> 24) & 0xff;\n  return buffer.reverse().toString('hex');\n}\n\n/**\n * A class representation of the BSON Decimal128 type.\n *\n * @class\n * @param {Buffer} bytes A buffer representing the Decimal128 bytes.\n * @return {Decimal128}\n */\nvar Decimal128 = function(bytes) {\n  this._bsontype = 'Decimal128';\n  this.bytes = bytes;\n}\n\n/**\n * Creates a Decimal128 instance from a string representation.\n *\n * @method\n * @param {String} string A string representing a Decimal128 value.\n */\nDecimal128.fromString = function(string) {\n  // Parse state tracking\n  var isNegative = false;\n  var sawRadix = false;\n  var foundNonZero = false;\n\n  // Total number of significant digits (no leading or trailing zero)\n  var significantDigits = 0;\n  // Total number of significand digits read\n  var nDigitsRead = 0;\n  // Total number of digits (no leading zeros)\n  var nDigits = 0;\n  // The number of the digits after radix\n  var radixPosition = 0;\n  // The index of the first non-zero in *str*\n  var firstNonZero = 0;\n\n  // Digits Array\n  var digits = [0];\n  // The number of digits in digits\n  var nDigitsStored = 0;\n  // Insertion pointer for digits\n  var digitsInsert = 0;\n  // The index of the first non-zero digit\n  var firstDigit = 0;\n  // The index of the last digit\n  var lastDigit = 0;\n\n  // Exponent\n  var exponent = 0;\n  // loop index over array\n  var i = 0;\n  // The high 17 digits of the significand\n  var significandHigh = [0, 0];\n  // The low 17 digits of the significand\n  var significandLow = [0, 0];\n  // The biased exponent\n  var biasedExponent = 0;\n\n  // Read index\n  var index = 0;\n\n  // Trim the string\n  string = string.trim();\n\n  // Results\n  var stringMatch = string.match(PARSE_STRING_REGEXP);\n  var infMatch = string.match(PARSE_INF_REGEXP);\n  var nanMatch = string.match(PARSE_NAN_REGEXP);\n\n  // Validate the string\n  if(!stringMatch\n    && ! infMatch\n    && ! nanMatch || string.length == 0) {\n      throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Check if we have an illegal exponent format\n  if(stringMatch && stringMatch[4] && stringMatch[2] === undefined) {\n    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Get the negative or positive sign\n  if(string[index] == '+' || string[index] == '-') {\n    isNegative = string[index++] == '-';\n  }\n\n  // Check if user passed Infinity or NaN\n  if(!isDigit(string[index]) && string[index] != '.') {\n    if(string[index] == 'i' || string[index] == 'I') {\n      return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n    } else if(string[index] == 'N') {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n  }\n\n  // Read all the digits\n  while(isDigit(string[index]) || string[index] == '.') {\n    if(string[index] == '.') {\n      if(sawRadix) {\n        return new Decimal128(new Buffer(NAN_BUFFER));\n      }\n\n      sawRadix = true;\n      index = index + 1;\n      continue;\n    }\n\n    if(nDigitsStored < 34) {\n      if(string[index] != '0' || foundNonZero) {\n        if(!foundNonZero) {\n          firstNonZero = nDigitsRead;\n        }\n\n        foundNonZero = true;\n\n        // Only store 34 digits\n        digits[digitsInsert++] = parseInt(string[index], 10);\n        nDigitsStored = nDigitsStored + 1;\n      }\n    }\n\n    if(foundNonZero) {\n      nDigits = nDigits + 1;\n    }\n\n    if(sawRadix) {\n      radixPosition = radixPosition + 1;\n    }\n\n    nDigitsRead = nDigitsRead + 1;\n    index = index + 1;\n  }\n\n  if(sawRadix && !nDigitsRead) {\n    throw new Error(\"\" + string + \" not a valid Decimal128 string\");\n  }\n\n  // Read exponent if exists\n  if(string[index] == 'e' || string[index] == 'E') {\n    // Read exponent digits\n    var match = string.substr(++index).match(EXPONENT_REGEX);\n\n    // No digits read\n    if(!match || !match[2]) {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n\n    // Get exponent\n    exponent = parseInt(match[0], 10);\n\n    // Adjust the index\n    index = index + match[0].length;\n  }\n\n  // Return not a number\n  if(string[index]) {\n    return new Decimal128(new Buffer(NAN_BUFFER));\n  }\n\n  // Done reading input\n  // Find first non-zero digit in digits\n  firstDigit = 0;\n\n  if(!nDigitsStored) {\n    firstDigit = 0;\n    lastDigit = 0;\n    digits[0] = 0;\n    nDigits = 1;\n    nDigitsStored = 1;\n    significantDigits = 0;\n  } else {\n    lastDigit = nDigitsStored - 1;\n    significantDigits = nDigits;\n\n    if(exponent != 0 && significantDigits != 1) {\n      while(string[firstNonZero + significantDigits - 1] == '0') {\n        significantDigits = significantDigits - 1;\n      }\n    }\n  }\n\n  // Normalization of exponent\n  // Correct exponent based on radix position, and shift significand as needed\n  // to represent user input\n\n  // Overflow prevention\n  if(exponent <= radixPosition && radixPosition - exponent > (1 << 14)) {\n    exponent = EXPONENT_MIN;\n  } else {\n    exponent = exponent - radixPosition;\n  }\n\n  // Attempt to normalize the exponent\n  while(exponent > EXPONENT_MAX) {\n    // Shift exponent to significand and decrease\n    lastDigit = lastDigit + 1;\n\n    if(lastDigit - firstDigit > MAX_DIGITS) {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if(digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n      }\n    }\n\n    exponent = exponent - 1;\n  }\n\n  while(exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n    // Shift last digit\n    if(lastDigit == 0) {\n      exponent = EXPONENT_MIN;\n      significantDigits = 0;\n      break;\n    }\n\n    if(nDigitsStored < nDigits) {\n      // adjust to match digits not stored\n      nDigits = nDigits - 1;\n    } else {\n      // adjust to round\n      lastDigit = lastDigit - 1;\n    }\n\n    if(exponent < EXPONENT_MAX) {\n      exponent = exponent + 1;\n    } else {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if(digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))\n      }\n    }\n  }\n\n  // Round\n  // We've normalized the exponent, but might still need to round.\n  if((lastDigit - firstDigit + 1 < significantDigits) && string[significantDigits] != '0') {\n    var endOfString = nDigitsRead;\n\n    // If we have seen a radix point, 'string' is 1 longer than we have\n    // documented with ndigits_read, so inc the position of the first nonzero\n    // digit and the position that digits are read to.\n    if(sawRadix && exponent == EXPONENT_MIN) {\n      firstNonZero = firstNonZero + 1;\n      endOfString = endOfString + 1;\n    }\n\n    var roundDigit = parseInt(string[firstNonZero + lastDigit + 1], 10);\n    var roundBit = 0;\n\n    if(roundDigit >= 5) {\n      roundBit = 1;\n\n      if(roundDigit == 5) {\n        roundBit = digits[lastDigit] % 2 == 1;\n\n        for(var i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n          if(parseInt(string[i], 10)) {\n            roundBit = 1;\n            break;\n          }\n        }\n      }\n    }\n\n    if(roundBit) {\n      var dIdx = lastDigit;\n\n      for(; dIdx >= 0; dIdx--) {\n        if(++digits[dIdx] > 9) {\n          digits[dIdx] = 0;\n\n          // overflowed most significant digit\n          if(dIdx == 0) {\n            if(exponent < EXPONENT_MAX) {\n              exponent = exponent + 1;\n              digits[dIdx] = 1;\n            } else {\n              return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))\n            }\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n  // Encode significand\n  // The high 17 digits of the significand\n  significandHigh = Long.fromNumber(0);\n  // The low 17 digits of the significand\n  significandLow = Long.fromNumber(0);\n\n  // read a zero\n  if(significantDigits == 0) {\n    significandHigh = Long.fromNumber(0);\n    significandLow = Long.fromNumber(0);\n  } else if(lastDigit - firstDigit < 17) {\n    var dIdx = firstDigit;\n    significandLow = Long.fromNumber(digits[dIdx++]);\n    significandHigh = new Long(0, 0);\n\n    for(; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  } else {\n    var dIdx = firstDigit;\n    significandHigh = Long.fromNumber(digits[dIdx++]);\n\n    for(; dIdx <= lastDigit - 17; dIdx++) {\n      significandHigh = significandHigh.multiply(Long.fromNumber(10));\n      significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n    }\n\n    significandLow = Long.fromNumber(digits[dIdx++]);\n\n    for(; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  }\n\n  var significand = multiply64x2(significandHigh, Long.fromString(\"100000000000000000\"));\n\n  significand.low = significand.low.add(significandLow);\n\n  if(lessThan(significand.low, significandLow)) {\n    significand.high = significand.high.add(Long.fromNumber(1));\n  }\n\n  // Biased exponent\n  var biasedExponent = (exponent + EXPONENT_BIAS);\n  var dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n\n  // Encode combination, exponent, and significand.\n  if(significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber)) {\n    // Encode '11' into bits 1 to 3\n    dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47)));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n  } else {\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n  }\n\n  dec.low = significand.low;\n\n  // Encode sign\n  if(isNegative) {\n    dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n  }\n\n  // Encode into a buffer\n  var buffer = new Buffer(16);\n  var index = 0;\n\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.low.low_ & 0xff;\n  buffer[index++] = (dec.low.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.low.high_ & 0xff;\n  buffer[index++] = (dec.low.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 24) & 0xff;\n\n  // Encode the high 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.high.low_ & 0xff;\n  buffer[index++] = (dec.high.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.high.high_ & 0xff;\n  buffer[index++] = (dec.high.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 24) & 0xff;\n\n  // Return the new Decimal128\n  return new Decimal128(buffer);\n}\n\nDecimal128.prototype.toString = function() {\n  // Note: bits in this routine are referred to starting at 0,\n  // from the sign bit, towards the coefficient.\n\n  // bits 0 - 31\n  var high;\n  // bits 32 - 63\n  var midh;\n  // bits 64 - 95\n  var midl;\n  // bits 96 - 127\n  var low;\n  // bits 1 - 5\n  var combination;\n  // decoded biased exponent (14 bits)\n  var biased_exponent;\n  // the number of significand digits\n  var significand_digits = 0;\n  // the base-10 digits in the significand\n  var significand = new Array(36);\n  for(var i = 0; i < significand.length; i++) significand[i] = 0;\n  // read pointer into significand\n  var index = 0;\n\n  // unbiased exponent\n  var exponent;\n  // the exponent if scientific notation is used\n  var scientific_exponent;\n\n  // true if the number is zero\n  var is_zero = false;\n\n  // the most signifcant significand bits (50-46)\n  var significand_msb;\n  // temporary storage for significand decoding\n  var significand128 = {parts: new Array(4)};\n  // indexing variables\n  var i;\n  var j, k;\n\n  // Output string\n  var string = [];\n\n  // Unpack index\n  var index = 0;\n\n  // Buffer reference\n  var buffer = this.bytes;\n\n  // Unpack the low 64bits into a long\n  low = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n  midl = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Unpack the high 64bits into a long\n  midh = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n  high = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Unpack index\n  var index = 0;\n\n  // Create the state of the decimal\n  var dec = {\n    low: new Long(low, midl),\n    high: new Long(midh, high) };\n\n  if(dec.high.lessThan(Long.ZERO)) {\n    string.push('-');\n  }\n\n  // Decode combination field and exponent\n  combination = (high >> 26) & COMBINATION_MASK;\n\n  if((combination >> 3) == 3) {\n    // Check for 'special' values\n    if(combination == COMBINATION_INFINITY) {\n      return string.join('') + \"Infinity\";\n    } else if(combination == COMBINATION_NAN) {\n      return \"NaN\";\n    } else {\n      biased_exponent = (high >> 15) & EXPONENT_MASK;\n      significand_msb = 0x08 + ((high >> 14) & 0x01);\n    }\n  } else {\n    significand_msb = (high >> 14) & 0x07;\n    biased_exponent = (high >> 17) & EXPONENT_MASK;\n  }\n\n  exponent = biased_exponent - EXPONENT_BIAS;\n\n  // Create string of significand digits\n\n  // Convert the 114-bit binary number represented by\n  // (significand_high, significand_low) to at most 34 decimal\n  // digits through modulo and division.\n  significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n  significand128.parts[1] = midh;\n  significand128.parts[2] = midl;\n  significand128.parts[3] = low;\n\n  if(significand128.parts[0] == 0 && significand128.parts[1] == 0\n    && significand128.parts[2] == 0 && significand128.parts[3] == 0) {\n      is_zero = true;\n  } else {\n    for(var k = 3; k >= 0; k--) {\n      var least_digits = 0;\n      // Peform the divide\n      var result = divideu128(significand128);\n      significand128 = result.quotient;\n      least_digits = result.rem.low_;\n\n      // We now have the 9 least significant digits (in base 2).\n      // Convert and output to string.\n      if(!least_digits) continue;\n\n      for(var j = 8; j >= 0; j--) {\n        // significand[k * 9 + j] = Math.round(least_digits % 10);\n        significand[k * 9 + j] = least_digits % 10;\n        // least_digits = Math.round(least_digits / 10);\n        least_digits = Math.floor(least_digits / 10);\n      }\n    }\n  }\n\n  // Output format options:\n  // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n  // Regular    - ddd.ddd\n\n  if(is_zero) {\n    significand_digits = 1;\n    significand[index] = 0;\n  } else {\n    significand_digits = 36;\n    var i = 0;\n\n    while(!significand[index]) {\n      i++;\n      significand_digits = significand_digits - 1;\n      index = index + 1;\n    }\n  }\n\n  scientific_exponent = significand_digits - 1 + exponent;\n\n  // The scientific exponent checks are dictated by the string conversion\n  // specification and are somewhat arbitrary cutoffs.\n  //\n  // We must check exponent > 0, because if this is the case, the number\n  // has trailing zeros.  However, we *cannot* output these trailing zeros,\n  // because doing so would change the precision of the value, and would\n  // change stored data if the string converted number is round tripped.\n\n  if(scientific_exponent >= 34 || scientific_exponent <= -7 ||\n    exponent > 0) {\n    // Scientific format\n    string.push(significand[index++]);\n    significand_digits = significand_digits - 1;\n\n    if(significand_digits) {\n      string.push('.');\n    }\n\n    for(var i = 0; i < significand_digits; i++) {\n      string.push(significand[index++]);\n    }\n\n    // Exponent\n    string.push('E');\n    if(scientific_exponent > 0) {\n      string.push('+' + scientific_exponent);\n    } else {\n      string.push(scientific_exponent);\n    }\n  } else {\n    // Regular format with no decimal place\n    if(exponent >= 0) {\n      for(var i = 0; i < significand_digits; i++) {\n        string.push(significand[index++]);\n      }\n    } else {\n      var radix_position = significand_digits + exponent;\n\n      // non-zero digits before radix\n      if(radix_position > 0) {\n        for(var i = 0; i < radix_position; i++) {\n          string.push(significand[index++]);\n        }\n      } else {\n        string.push('0');\n      }\n\n      string.push('.');\n      // add leading zeros after radix\n      while(radix_position++ < 0) {\n        string.push('0');\n      }\n\n      for(var i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n        string.push(significand[index++]);\n      }\n    }\n  }\n\n  return string.join('');\n}\n\nDecimal128.prototype.equals = function(value) {\n  if(!value.bytes) return false;\n  return this.bytes.toString('hex') == value.bytes.toString('hex');\n}\n\nDecimal128.prototype.toJSON = function() {\n  return { \"$numberDecimal\": this.toString() };\n}\n\nmodule.exports = Decimal128;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/decimal128.js","\"use strict\";\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Long.\n * @param {number} high the high (signed) 32 bits of the Long.\n * @return {Long}\n */\nvar Long = function(low, high) {\n  this._bsontype = 'Long';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0;  // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0;  // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nLong.prototype.toInt = function() {\n  return this.low_;\n}\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nLong.prototype.toNumber = function() {\n  return this.high_ * Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n}\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {String} the JSON representation.\n */\nLong.prototype.toJSON = function() {\n  return { $numberLong: this.toString() };\n}\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {String} the textual representation of this value.\n */\nLong.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Long.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nLong.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nLong.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nLong.prototype.getLowBitsUnsigned = function() {\n  return (this.low_ >= 0) ?\n      this.low_ : Long.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Long.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Long.\n */\nLong.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ != 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) != 0) {\n        break;\n      }\n    }\n    return this.high_ != 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {Boolean} whether this value is zero.\n */\nLong.prototype.isZero = function() {\n  return this.high_ == 0 && this.low_ == 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {Boolean} whether this value is negative.\n */\nLong.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {Boolean} whether this value is odd.\n */\nLong.prototype.isOdd = function() {\n  return (this.low_ & 1) == 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long equals the other\n */\nLong.prototype.equals = function(other) {\n  return (this.high_ == other.high_) && (this.low_ == other.low_);\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long does not equal the other.\n */\nLong.prototype.notEquals = function(other) {\n  return (this.high_ != other.high_) || (this.low_ != other.low_);\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is less than the other.\n */\nLong.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is less than or equal to the other.\n */\nLong.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is greater than the other.\n */\nLong.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} whether this Long is greater than or equal to the other.\n */\nLong.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nLong.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Long} the negation of this value.\n */\nLong.prototype.negate = function() {\n  if (this.equals(Long.MIN_VALUE)) {\n    return Long.MIN_VALUE;\n  } else {\n    return this.not().add(Long.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Long.\n *\n * @method\n * @param {Long} other Long to add to this one.\n * @return {Long} the sum of this and the given Long.\n */\nLong.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Long.\n *\n * @method\n * @param {Long} other Long to subtract from this.\n * @return {Long} the difference of this and the given Long.\n */\nLong.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Long.\n *\n * @method\n * @param {Long} other Long to multiply with this.\n * @return {Long} the product of this and the other.\n */\nLong.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Long.ZERO;\n  } else if (other.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    return other.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Long.TWO_PWR_24_) &&\n      other.lessThan(Long.TWO_PWR_24_)) {\n    return Long.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Long} other Long by which to divide.\n * @return {Long} this Long divided by the given one.\n */\nLong.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    if (other.equals(Long.ONE) ||\n        other.equals(Long.NEG_ONE)) {\n      return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Long.MIN_VALUE)) {\n      return Long.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Long.ZERO)) {\n        return other.isNegative() ? Long.ONE : Long.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate().div(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Long.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Long.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Long.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Long.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Long} other Long by which to mod.\n * @return {Long} this Long modulo the given one.\n */\nLong.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Long} the bitwise-NOT of this value.\n */\nLong.prototype.not = function() {\n  return Long.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to AND.\n * @return {Long} the bitwise-AND of this and the other.\n */\nLong.prototype.and = function(other) {\n  return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to OR.\n * @return {Long} the bitwise-OR of this and the other.\n */\nLong.prototype.or = function(other) {\n  return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to XOR.\n * @return {Long} the bitwise-XOR of this and the other.\n */\nLong.prototype.xor = function(other) {\n  return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the left by the given amount.\n */\nLong.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Long.fromBits(\n                 low << numBits,\n                 (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Long.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount.\n */\nLong.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >> numBits);\n    } else {\n      return Long.fromBits(\n                 high >> (numBits - 32),\n                 high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nLong.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >>> numBits);\n    } else if (numBits == 32) {\n      return Long.fromBits(high, 0);\n    } else {\n      return Long.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Long.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Long(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Long.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Long.ZERO;\n  } else if (value <= -Long.TWO_PWR_63_DBL_) {\n    return Long.MIN_VALUE;\n  } else if (value + 1 >= Long.TWO_PWR_63_DBL_) {\n    return Long.MAX_VALUE;\n  } else if (value < 0) {\n    return Long.fromNumber(-value).negate();\n  } else {\n    return new Long(\n               (value % Long.TWO_PWR_32_DBL_) | 0,\n               (value / Long.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Long} the corresponding Long value.\n */\nLong.fromBits = function(lowBits, highBits) {\n  return new Long(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {String} str the textual representation of the Long.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Long} the corresponding Long value.\n */\nLong.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Long.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 8));\n\n  var result = Long.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Long.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Long.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Long.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nLong.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Long} */\nLong.ZERO = Long.fromInt(0);\n\n/** @type {Long} */\nLong.ONE = Long.fromInt(1);\n\n/** @type {Long} */\nLong.NEG_ONE = Long.fromInt(-1);\n\n/** @type {Long} */\nLong.MAX_VALUE =\n    Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\n/** @type {Long} */\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Long}\n * @ignore\n */\nLong.TWO_PWR_24_ = Long.fromInt(1 << 24);\n\nmodule.exports = Long;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/long.js","\"use strict\";\n\n/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nvar Double = function(value) {\n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function() {\n  return this.value;\n}\n\nDouble.prototype.equals = function(value) {\n  if(!value) return false;\n  if(typeof value !== 'number' && value._bsontype != 'Double') return false;\n  if(typeof value === 'number') return this.value === value;\n  return this.value === value.value;\n}\n\nDouble.prototype.toJSON = function() {\n  return { $numberDouble: this.value.toString() };\n}\n\nmodule.exports = Double;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/double.js","\"use strict\";\n\n/**\n * A class representation of the BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function(value) {\n  this._bsontype = 'Int32';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\nInt32.prototype.valueOf = function() {\n  return this.value;\n}\n\nInt32.prototype.equals = function(value) {\n  if(!value) return false;\n  if(typeof value !== 'number' && value._bsontype != 'Int32') return false;\n  if(typeof value === 'number') return this.value === value;\n  return this.value === value.value;\n}\n\nInt32.prototype.toJSON = function() {\n  return { $numberInt: this.value.toString() };\n}\n\nmodule.exports = Int32;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/int_32.js","\"use strict\";\n\n/**\n * A class representation of the BSON MaxKey type.\n *\n * @class\n * @return {MaxKey} A MaxKey instance\n */\nvar MaxKey = function() {\n  this._bsontype = 'MaxKey';\n}\n\nMaxKey.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'MaxKey') return false;\n  return true;\n}\n\nMaxKey.prototype.toJSON = function() {\n  return { $maxKey: 1 };\n}\n\nmodule.exports = MaxKey;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/max_key.js","\"use strict\";\n\n/**\n * A class representation of the BSON MinKey type.\n *\n * @class\n * @return {MinKey} A MinKey instance\n */\nvar MinKey = function() {\n  this._bsontype = 'MinKey';\n}\n\nMinKey.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'MinKey') return false;\n  return true;\n}\n\nMinKey.prototype.toJSON = function() {\n  return { $minKey: 1 };\n}\n\nmodule.exports = MinKey;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/min_key.js","\"use strict\";\n\n/**\n * Machine id.\n *\n * Create a random 3-byte value (i.e. unique for this\n * process). Other drivers use a md5 of the machine id here, but\n * that would mean an asyc call to gethostname, so we don't bother.\n * @ignore\n */\nvar MACHINE_ID = parseInt(Math.random() * 0xFFFFFF, 10);\n\n// Regular expression that checks for hex value\nvar checkForHexRegExp = new RegExp(\"^[0-9a-fA-F]{24}$\");\n\n// Precomputed hex table enables speedy hex string conversion\nvar hexTable = [];\nfor (var i = 0; i < 256; i++) {\n  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n\n// Lookup tables\nvar encodeLookup = '0123456789abcdef'.split('')\nvar decodeLookup = []\nvar i = 0\nwhile (i < 10) decodeLookup[0x30 + i] = i++\nwhile (i < 16) decodeLookup[0x61 - 10 + i] = i++\n\nvar convertToHex = function(bytes) {\n  var hexString = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    hexString += hexTable[bytes[i]];\n  }\n\n  return hexString;\n}\n\n/**\n* Create a new ObjectID instance\n*\n* @class\n* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.\n* @property {number} generationTime The generation time of this ObjectId instance\n* @return {ObjectID} instance of ObjectID.\n*/\nvar ObjectID = function(id) {\n  // Duck-typing to support ObjectId from different npm packages\n  if(id instanceof ObjectID) return id;\n  if(!(this instanceof ObjectID)) return new ObjectID(id);\n\n  this._bsontype = 'ObjectID';\n\n  var __id = null;\n  var valid = ObjectID.isValid(id);\n\n  // Throw an error if it's not a valid setup\n  if(!valid && id != null){\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n  } else if(valid && typeof id == 'string' && id.length == 24) {\n    return ObjectID.createFromHexString(id);\n  } else if(id == null || typeof id == 'number') {\n    // convert to 12 byte binary string\n    this.id = this.generate(id);\n  } else if(id != null && id.length === 12) {\n    // assume 12 byte string\n    this.id = id;\n  } else if(id != null && id.toHexString) {\n    // Duck-typing to support ObjectId from different npm packages\n    return id;\n  } else {\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n  }\n\n  if(ObjectID.cacheHexString) this.__id = this.toHexString();\n}\n\n/**\n* Return the ObjectID id as a 24 byte hex string representation\n*\n* @method\n* @return {String} return the 24 byte hex string representation.\n*/\nObjectID.prototype.toHexString = function() {\n  if(ObjectID.cacheHexString && this.__id) return this.__id;\n\n  var hexString = '';\n  if(!this.id || !this.id.length) {\n    throw new Error('invalid ObjectId, ObjectId.id must be either a string or a Uint8Array, but is [' + JSON.stringify(this.id) + ']');\n  }\n\n  if(this.id instanceof Uint8Array) {\n    hexString = convertToHex(this.id);\n    if(ObjectID.cacheHexString) this.__id = hexString;\n    return hexString;\n  }\n\n  for (var i = 0; i < this.id.length; i++) {\n    hexString += hexTable[this.id.charCodeAt(i)];\n  }\n\n  if(ObjectID.cacheHexString) this.__id = hexString;\n  return hexString;\n}\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.getInc = function() {\n  return ObjectID.index = (ObjectID.index + 1) % 0xFFFFFF;\n}\n\n/**\n* Generate a 12 byte id buffer used in ObjectID's\n*\n* @method\n* @param {number} [time] optional parameter allowing to pass in a second based timestamp.\n* @return {Buffer} return the 12 byte id buffer string.\n*/\nObjectID.prototype.generate = function(time) {\n  if ('number' != typeof time) {\n    time = ~~(Date.now()/1000);\n  }\n\n  // Use pid\n  var pid = (typeof process === 'undefined' ? Math.floor(Math.random() * 100000) : process.pid) % 0xFFFF;\n  var inc = this.getInc();\n  // Buffer used\n  var buffer = new Uint8Array(12);\n  // Encode time\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Encode machine\n  buffer[6] = MACHINE_ID & 0xff;\n  buffer[5] = (MACHINE_ID >> 8) & 0xff;\n  buffer[4] = (MACHINE_ID >> 16) & 0xff;\n  // Encode pid\n  buffer[8] = pid & 0xff;\n  buffer[7] = (pid >> 8) & 0xff;\n  // Encode index\n  buffer[11] = inc & 0xff;\n  buffer[10] = (inc >> 8) & 0xff;\n  buffer[9] = (inc >> 16) & 0xff;\n  // Return the buffer\n  return buffer;\n}\n\n/**\n* Converts the id into a 24 byte hex string for printing\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toString = function() {\n  return this.toHexString();\n}\n\n/**\n* Converts to its JSON representation.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toJSON = function() {\n  return { $oid: this.toHexString() };\n}\n\n/**\n* Compares the equality of this ObjectID with `otherID`.\n*\n* @method\n* @param {Object} otherID ObjectID instance to compare against.\n* @return {Boolean} the result of comparing two ObjectID's\n*/\nObjectID.prototype.equals = function(otherId) {\n  var id;\n\n  if(otherId instanceof ObjectID) {\n    return this.toString() == otherId.toString();\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12 && this.id instanceof Uint8Array) {\n    return otherId === this.id.toString('binary');\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 24) {\n    return otherId === this.toHexString();\n  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12) {\n    return otherId === this.id;\n  } else if(otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {\n    return otherId.toHexString() === this.toHexString();\n  } else {\n    return false;\n  }\n}\n\n/**\n* Returns the generation date (accurate up to the second) that this ID was generated.\n*\n* @method\n* @return {date} the generation date\n*/\nObjectID.prototype.getTimestamp = function() {\n  var timestamp = new Date();\n  var time = this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n  timestamp.setTime(Math.floor(time) * 1000);\n  return timestamp;\n}\n\n/**\n* Creates an ObjectID from a hex string representation of an ObjectID.\n*\n* @method\n* @param {String} hexString create a ObjectID from a passed in 24 byte hexstring.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromHexString = function(string) {\n  // Throw an error if it's not a valid setup\n  if(typeof string === 'undefined' || string != null && string.length != 24)\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n\n  var length = string.length;\n\n  if(length > 12*2) {\n    throw new Error('Id cannot be longer than 12 bytes');\n  }\n\n  // Calculate lengths\n  var sizeof = length >> 1;\n  var array = new Uint8Array(sizeof);\n  var n = 0;\n  var i = 0;\n\n  while (i < length) {\n    array[n++] = decodeLookup[string.charCodeAt(i++)] << 4 | decodeLookup[string.charCodeAt(i++)]\n  }\n\n  return new ObjectID(array);\n}\n\n/**\n* Checks if a value is a valid bson ObjectId\n*\n* @method\n* @return {Boolean} return true if the value is a valid bson ObjectId, return false otherwise.\n*/\nObjectID.isValid = function(id) {\n  if(id == null) return false;\n\n  if(typeof id == 'number') {\n    return true;\n  }\n\n  if(typeof id == 'string') {\n    return id.length == 12 || (id.length == 24 && checkForHexRegExp.test(id));\n  }\n\n  if(id instanceof ObjectID) {\n    return true;\n  }\n\n  if(id instanceof Uint8Array) {\n    return true;\n  }\n\n  // Duck-Typing detection of ObjectId like objects\n  if(id.toHexString) {\n    return id.id.length == 12 || (id.id.length == 24 && checkForHexRegExp.test(id.id));\n  }\n\n  return false;\n}\n\n/**\n* @ignore\n*/\nObjectID.createPk = function() {\n  return new ObjectID();\n}\n\n/**\n* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\n*\n* @method\n* @param {number} time an integer number representing a number of seconds.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromTime = function(time) {\n  var buffer = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  // Encode time into first 4 bytes\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Return the new objectId\n  return new ObjectID(buffer);\n}\n\n/**\n* @ignore\n*/\nObject.defineProperty(ObjectID.prototype, \"generationTime\", {\n   enumerable: true\n , get: function () {\n     return this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;\n   }\n , set: function (value) {\n     // Encode time into first 4 bytes\n     this.id[3] = value & 0xff;\n     this.id[2] = (value >> 8) & 0xff;\n     this.id[1] = (value >> 16) & 0xff;\n     this.id[0] = (value >> 24) & 0xff;\n   }\n});\n\n/**\n* @ignore\n*/\nObjectID.index = ~~(Math.random() * 0xFFFFFF);\n\nmodule.exports = ObjectID;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/objectid.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n// WEBPACK FOOTER //\n// ./~/process/browser.js","\"use strict\";\n\n/**\n * A class representation of the BSON RegExp type.\n *\n * @class\n * @return {BSONRegExp} A MinKey instance\n */\nvar BSONRegExp = function(pattern, options) {\n  // Execute\n  this._bsontype = 'BSONRegExp';\n  this.pattern = pattern;\n  this.options = options || '';\n  // Perform validation of parameters\n  if(typeof this.pattern != 'string') throw Error('pattern must be a string');\n  if(typeof this.options != 'string') throw Error('options must be a string');\n\n  // Validate options\n  for(var i = 0; i < options.length; i++) {\n    if(!(this.options[i] == 'i'\n      || this.options[i] == 'm'\n      || this.options[i] == 'x'\n      || this.options[i] == 'l'\n      || this.options[i] == 's'\n      || this.options[i] == 'u'\n    )) {\n      throw new Error('the regular expression options [' + this.options[i] + \"] is not supported\");\n    }\n  }\n}\n\nBSONRegExp.prototype.equals = function(value) {\n  if(!value || value._bsontype != 'BSONRegExp') return false;\n  return this.pattern == value.pattern && this.options == value.options;\n}\n\nBSONRegExp.prototype.toJSON = function() {\n  return { $regex: this.pattern, $options: this.options };\n}\n\nmodule.exports = BSONRegExp;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/regexp.js","\"use strict\";\n\n/**\n * A class representation of the BSON Symbol type.\n *\n * @class\n * @deprecated\n * @param {String} value the string representing the symbol.\n * @return {Symbol}\n */\nvar Symbol = function(value) {\n  this._bsontype = 'Symbol';\n  this.value = value;\n}\n\n/**\n * Access the wrapped string value.\n *\n * @method\n * @return {String} returns the wrapped string.\n */\nSymbol.prototype.valueOf = function() {\n  return this.value;\n};\n\nSymbol.prototype.equals = function(value) {\n  if(!value || !value.value) return false;\n  if(value._bsontype != 'Symbol') return false;\n  return this.value === value.value;\n}\n\n/**\n * @ignore\n */\nSymbol.prototype.toJSON = function() {\n  return { $symbol: this.value };\n}\n\nmodule.exports = Symbol;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/symbol.js","\"use strict\";\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Timestamp.\n * @param {number} high the high (signed) 32 bits of the Timestamp.\n * @return {Timestamp}\n */\nvar Timestamp = function(low, high) {\n  this._bsontype = 'Timestamp';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0;  // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0;  // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nTimestamp.prototype.toInt = function() {\n  return this.low_;\n}\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nTimestamp.prototype.toNumber = function() {\n  return this.high_ * Timestamp.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n}\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {String} the JSON representation.\n */\nTimestamp.prototype.toJSON = function() {\n  return {\n    $timestamp: this.toString(),\n  };\n}\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {String} the textual representation of this value.\n */\nTimestamp.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Timestamp.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nTimestamp.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nTimestamp.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nTimestamp.prototype.getLowBitsUnsigned = function() {\n  return (this.low_ >= 0) ?\n      this.low_ : Timestamp.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Timestamp.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Timestamp.\n */\nTimestamp.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ != 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) != 0) {\n        break;\n      }\n    }\n    return this.high_ != 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {Boolean} whether this value is zero.\n */\nTimestamp.prototype.isZero = function() {\n  return this.high_ == 0 && this.low_ == 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {Boolean} whether this value is negative.\n */\nTimestamp.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {Boolean} whether this value is odd.\n */\nTimestamp.prototype.isOdd = function() {\n  return (this.low_ & 1) == 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long equals the other\n */\nTimestamp.prototype.equals = function(other) {\n  return (this.high_ == other.high_) && (this.low_ == other.low_);\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long does not equal the other.\n */\nTimestamp.prototype.notEquals = function(other) {\n  return (this.high_ != other.high_) || (this.low_ != other.low_);\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is less than the other.\n */\nTimestamp.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is less than or equal to the other.\n */\nTimestamp.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is greater than the other.\n */\nTimestamp.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} whether this Long is greater than or equal to the other.\n */\nTimestamp.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Timestamp} other Long to compare against.\n * @return {Boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nTimestamp.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Timestamp} the negation of this value.\n */\nTimestamp.prototype.negate = function() {\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.MIN_VALUE;\n  } else {\n    return this.not().add(Timestamp.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to add to this one.\n * @return {Timestamp} the sum of this and the given Timestamp.\n */\nTimestamp.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to subtract from this.\n * @return {Timestamp} the difference of this and the given Timestamp.\n */\nTimestamp.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Long to multiply with this.\n * @return {Timestamp} the product of this and the other.\n */\nTimestamp.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Timestamp.ZERO;\n  } else if (other.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return other.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return this.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Timestamp.TWO_PWR_24_) &&\n      other.lessThan(Timestamp.TWO_PWR_24_)) {\n    return Timestamp.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xFFFF;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xFFFF;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xFFFF;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Timestamp} other Long by which to divide.\n * @return {Timestamp} this Long divided by the given one.\n */\nTimestamp.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    if (other.equals(Timestamp.ONE) ||\n        other.equals(Timestamp.NEG_ONE)) {\n      return Timestamp.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Timestamp.MIN_VALUE)) {\n      return Timestamp.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Timestamp.ZERO)) {\n        return other.isNegative() ? Timestamp.ONE : Timestamp.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate().div(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Timestamp.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Timestamp.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Timestamp.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Timestamp.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Timestamp} other Long by which to mod.\n * @return {Timestamp} this Long modulo the given one.\n */\nTimestamp.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Timestamp} the bitwise-NOT of this value.\n */\nTimestamp.prototype.not = function() {\n  return Timestamp.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to AND.\n * @return {Timestamp} the bitwise-AND of this and the other.\n */\nTimestamp.prototype.and = function(other) {\n  return Timestamp.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to OR.\n * @return {Timestamp} the bitwise-OR of this and the other.\n */\nTimestamp.prototype.or = function(other) {\n  return Timestamp.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Timestamp} other the Long with which to XOR.\n * @return {Timestamp} the bitwise-XOR of this and the other.\n */\nTimestamp.prototype.xor = function(other) {\n  return Timestamp.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the left by the given amount.\n */\nTimestamp.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Timestamp.fromBits(\n                 low << numBits,\n                 (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Timestamp.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount.\n */\nTimestamp.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >> numBits);\n    } else {\n      return Timestamp.fromBits(\n                 high >> (numBits - 32),\n                 high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nTimestamp.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits == 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits(\n                 (low >>> numBits) | (high << (32 - numBits)),\n                 high >>> numBits);\n    } else if (numBits == 32) {\n      return Timestamp.fromBits(high, 0);\n    } else {\n      return Timestamp.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Timestamp.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Timestamp(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Timestamp.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Timestamp.ZERO;\n  } else if (value <= -Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MIN_VALUE;\n  } else if (value + 1 >= Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MAX_VALUE;\n  } else if (value < 0) {\n    return Timestamp.fromNumber(-value).negate();\n  } else {\n    return new Timestamp(\n               (value % Timestamp.TWO_PWR_32_DBL_) | 0,\n               (value / Timestamp.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromBits = function(lowBits, highBits) {\n  return new Timestamp(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {String} str the textual representation of the Timestamp.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Timestamp} the corresponding Long value.\n */\nTimestamp.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Timestamp.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));\n\n  var result = Timestamp.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Timestamp.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Timestamp.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Timestamp.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nTimestamp.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Timestamp} */\nTimestamp.ZERO = Timestamp.fromInt(0);\n\n/** @type {Timestamp} */\nTimestamp.ONE = Timestamp.fromInt(1);\n\n/** @type {Timestamp} */\nTimestamp.NEG_ONE = Timestamp.fromInt(-1);\n\n/** @type {Timestamp} */\nTimestamp.MAX_VALUE =\n    Timestamp.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);\n\n/** @type {Timestamp} */\nTimestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Timestamp}\n * @ignore\n */\nTimestamp.TWO_PWR_24_ = Timestamp.fromInt(1 << 24);\n\nmodule.exports = Timestamp;\n\n\n\n// WEBPACK FOOTER //\n// ./~/mongodb-extjson/lib/bson/timestamp.js"],"sourceRoot":""}